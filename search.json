[{"title":"稀疏平常的生活","url":"/7777/07/07/diary/","content":"\n我们所经历的日常..\n\n<!-- more -->\n\n日记从上到下，从新到旧\n\n# 2025\n\n**八月**\n\n重装了一手Windows\n\n[GitHub学生认证](https://www.bilibili.com/video/BV1JrrmY1E4W)这块，真的幽默\n\n**七月**\n\n阿里云送三百元代金券可以买半年云服务器，标称带宽300M（似乎经常有这样的活动），我一直在思考之前局域网搭建的各种服务应该怎么用，一个一个内网穿透出来实在是太麻烦了，而且公网的话域名没备份不让用，一个ip+端口实在是太丑了。于是我做了一计，在家里云上部署一个ssr代理，然后使用规则覆写加入到mihomo代理里面，规则也匹配一下，这样只要打开代理就能让我自己的网站正常访问了，原来什么配置都不用变\n\n```\n+proxies:\n  - { name: SSR-内网穿透, type: ssr, server: x.x.x.x, port: 22222, password: xxxxxxxxxxxxx, cipher: chacha20-ietf, obfs: plain, protocol: auth_sha1_v4, protocol-param: \"\", obfs-param: \"\" }\n\n+rules:\n  - DOMAIN-SUFFIX,网站的域名,SSR-内网穿透\n```\n\npid调参经验 \n积分限幅可以慢慢加，直到能消除固差，应该要比这个值大\n可以加入死区，但进入死区的那轮计算也要更新last error，否则从1.0进入死区，再从-1.0出死区，2的上次误差-这次误差会让d项有一个极大值\n第一次计算的时候last error是0，要把这个赋成error\n系统中有大跳变引发的震荡，把d调小反而能抑制震荡\n\n**六月**\n\n终于是把webdav挂载的番剧搭建了一个影音库，目前用的是emby，PC端使用**[embyToLocalPlayer](https://github.com/kjtsune/embyToLocalPlayer)**跳转使用potplayer进行播放，记得看FAQ→PotPlayer→提示渲染 Pin 失败，无法播放（原因是标题含空格或者个别半角符号，会导致 pot 无法从命令行启动，无法播放），手机端使用yamby，功能很强大\n\n> PC端感觉也可以下载小秘版emby软件，使用比较爽（原版软件要米）\n\n[winget](https://learn.microsoft.com/zh-cn/windows/package-manager/winget/)有点意思，感觉重装系统转软件的时候很有用，但是代理应该是必选项，镜像源似乎只是把url镜像了，安装包并没有镜像\n\n```\nwinget export -o D:\\list.json\nwinget import .\\list.json --accept-package-agreements --accept-source-agreements\n```\n\n服务器的代理感觉还是不是很爽，docker clash感觉缺点还挺多，一是默认终端不代理，要设置环境变量，放.bashrc/.zshrc也算可以解决，二是有些代理不上，三是docker默认不代理、容器内代理不了，最近在试替代品\n\n**五月**\n\npppoe重新拨号，不用重新输账号密码\n\n```\npon dsl-provider\n```\n\n**四月**\n\n最近在做毕设，学习了一下嘉立创eda，看的这个[教程](https://www.bilibili.com/video/BV1At421h7Ui/)，感觉非常的不错\n\n```\nq-切换单位\nCtrl shift x-布局传递\nb-切换到底层（走线时按b为打过孔）\nt-切换到顶层\nshift B-铺铜重建\n```\n\n**[chrome-QuickGo](https://github.com/Dolov/chrome-QuickGo)**\n\n今天装了个wsl2，说实话，感觉还挺不错的\n\n```powershell\n# 查看可安装的镜像\nwsl --list --online\n# 安装Ubuntu20.04\nwsl --install Ubuntu-20.04\n# 查看目前有哪些已经下载的\nwsl --list -v\n# 启动\nwsl -d Ubuntu-20.04\n# 关机\nwsl --shutdown\n# 删除\nwsl --unregister Ubuntu\n```\n\nwsl使用gazebo卡顿可以参考https://www.bilibili.com/read/cv6266330把`C:\\Program Files\\WSL`里面的exe都放进去选择高性能\n\n说起来也巧，妈妈的红米经常自动无限重启，可能是经典电源键问题或者cpu虚焊，故说是给妈妈新买一个，但是妈觉得太贵没必要就一直不去线下店试试小屏机习不习惯，就当我准备直接买的时候，妈的手机直接屏幕摔坏了，是好消息也是坏消息哈哈哈，成功去试了一下线下店，直接给妈买了个oppo findx8s+（其实我是想买一加13的，但是我妈之前做过电信营业厅的销售，显然是不知道一加的，所以觉得不是大品牌，故还是买ov吧）\n\n然后再画75r给摔碎的红米买个答辩lcd屏，轻松换好，方便把数据转出来，不过后盖被我拆碎了哈哈哈，问题不太大\n\n一次取快递的时候，我找了老半天都没找见，按着序号找，比我小的 比我大的都找到，但是没有我的，我也想过会不会掉到货架后面去了，我也找了找，后面让工作人员帮我找，找了一小会儿，才发现是掉到货架前面了（\n\n又一次取快递的时候，发现地上有一个快递，一看序号应该是货架中层的，我便放进了他本来应该处在的大概位置，顺手的事~\n\n**三月**\n\nqBittorrent/alist正则表达式重命名番剧通用\n\n```\n.*?\\[(\\d{2})\\].*?\\.mkv$\n番剧名称 S01E$1.mkv\n```\n\nwindows powershell重命名\n\n```\n# 批量重命名.ass文件，从[数字]格式改为S01E数字格式\nGet-ChildItem -Filter \"*.ass\" | \nWhere-Object { $_.Name -match '.*?\\[(\\d{2})\\].*?\\.ass$' } | \nRename-Item -NewName { \"学园孤岛 S01E$($matches[1]).ass\" } -Verbose\n```\n\n搭建了NAS相册，使用的是[immich](https://github.com/immich-app/immich)，[这篇教程](https://www.himiku.com/archives/immich.html)很详细\n\n关于`机器学习的`这块的设置还是有点坑的\n\n第一个是默认URL是`http://immich_machine_learning:3003`，如果你使用的是官方教程**请勿修改这个URL**，因为immich_machine_learning其实是容器名，让immich_sever找immich_machine_learning容器的3003端口，没问题。我一直以为是什么下载模型的网站什么的，整了半天\n\n如果要修改默认模型下载网站可以在`.env`中添加`HF_ENDPOINT=https://hf-mirror.com`，这样不设置代理也可以成功下载模型，可以为后面剩下一步坑。\n\n如果不修改模型下载网站就需要给docker设置代理或者下载好模型放进去，设置代理我使用的是这样的办法\n\n```\nservices:\n…………………………………………\n  immich-machine-learning:\n…………………………………………\n    volumes:\n      - ./model-cache:/cache\n    networks:\n      - clash_clash-network\n    environment:\n      - http_proxy=http://172.28.0.10:7890\n      - https_proxy=http://172.28.0.10:7890\n      - no_proxy=localhost,127.0.0.1,.mycompany.local\n…………………………………………\nnetworks:\n  clash_clash-network:\n    external: true\n```\n\nclash docker\n\n```\nservices:\n  clash-client:\n    image: dreamacro/clash\n    container_name: clash-client\n    restart: always\n    ports:\n      - \"127.0.0.1:7890:7890\"  # 转发本地 7890 端口到容器的 7890 端口\n      - \"127.0.0.1:9090:9090\"  # 转发本地 9090 端口到容器的 9090 端口\n    volumes:\n      - ./xfltd.yaml:/root/.config/clash/config.yaml\n      - ./ui:/ui\n    networks:\n      clash-network:\n        ipv4_address: 172.28.0.10  # 设置固定 IP 地址\n\nnetworks:\n  clash-network:\n    driver: bridge  # 使用 bridge 网络驱动\n    ipam:\n      driver: default\n      config:\n        - subnet: \"172.28.0.0/16\"  # 定义子网范围\n```\n\n但是这样还要改配置，有点麻烦，所以直接在命令行下载好是个不错的选择。这里可以看到`immich-machine-learning`容器的挂载是`model-cache:/cache`，所以需要将模型放入当前路径下的model-cache中，问题就在到底应该是怎么样的路径结构，这个我弄了很久（其实还有很大一部分原因是我刚开始把URL改了，导致我这个无论怎么改都都不会正常运行hhh）我使用的是官方教程，model-cache中结构目录如下即可\n\n```\n.\n├── clip\n│   └── XLM-Roberta-Large-Vit-B-16Plus\n└── facial-recognition\n    └── antelopev2\n```\n\n可以通过`docker logs`查看容器的报错\n\n[immich上传库中删除本地照片后前台页面仍显示照片的问题解决方法](https://blog.csdn.net/sinat_36164818/article/details/139755591)\n\n**二月**\n\nnplayer 字体重建非常难受 pass了，目前在用reex看之前alist挂载的番剧\n\n[Rclone挂载WebDav为本地磁盘](https://wgxls.site/posts/rclone-mount-webdav/) 开机自启动[参考](https://www.bilibili.com/opus/924962456114036736)\n\n> 设置开机自启动但是无法挂载的时候可能会出现，删除一个文件需要刷新才能显示，建议注释掉脚本让其不生效。等可以挂载后再启用\n\nopenwrt Nikki 和 mihomo有时候规则集可能会更新失败，需要自己删掉rule之后再次更新\n\n```\nopenwrt:/etc/nikki/run/ruleset\nwindows:C:\\Users\\qllokirin\\AppData\\Roaming\\mihomo-party\\work\\ruleset\n```\n\n**一月**\n\nhttps://iriun.com/ 手机摄像头变成电脑摄像头\n\n1p可以申请通配证书，好用\n\n[vitepress](https://vitepress.dev/zh/)写文档挺好看的  [别人的教程](https://docs.bugdesigner.cn/docs/Tutorial/vitepress.html)\n\n# 2024\n\n**一月**\n\n把windows powershell设置为预测历史指令自动补全\n\n```powershell\n#寻找最新版本\nFind-Module PSReadLine -AllVersions | Select-Object -First 5\n#我这里最新是2.3.6\nInstall-Module -Name PSReadLine -RequiredVersion 2.3.6\n#把预测源目设置成历史\nSet-PSReadLineOption -PredictionSource History\n#重启powershell即可\n```\n\n第一次重启后可能存在psreadline模块无法加载的情况参考[这个](https://www.miyil.com/vue/940.html)\n\n**二月**\n\n跟朋友试试这个仓库 https://github.com/LC044/WeChatMsg\n\n~~感觉挺有意思~~\n\n**三月**\n\n[网盘不限速](https://greasyfork.org/zh-CN/scripts/472925)，不过已经不维护了，估计快失效了\n\n> 2024.6 [这个](http://1.94.138.197/bangumi)好用，满速下载\n\n**四月**\n\n~~真不想学专业课了，想摆了（~~\n\n> 好耶 现在都结束了\n\n**五月**\n\n最涨教训的一天，<u>五月一号</u>\n\n`win+r`输入`shell:startup`，创建`mount_nfs.bat`，写入`net use Z: \\\\{smb服务器地址}\\{共享文件夹名称} /user:{用户名} {密码} `，这样挂载共享文件夹不会自动创建`system volume information`这个恶心人的文件夹\n\n我自己买了个域名解析到`10.xx`的保留地址（学校内网）上了，一般的clash规则会这么写`\\- IP-CIDR,10.0.0.0/8,🎯 全球直连`，所以我的域名相关网站不会解析为代理，但是用的订阅转换规则一般喜欢用`\\- IP-CIDR,10.0.0.0/8,🎯 全球直连,no-resolve`，no-resolve也就是不解析域名，所以我的域名没有被解析出来，他也就不知道这是一个`10.xx`的内网地址。加这个字段的目的应该是为了防止一些域名污染，解析到内网地址从而代理不了，但很困扰我，不过我找到一个解决办法：`配置`->`右键自己的代理`->`配置文件预处理`加上下面的字段，每次更新订阅是会自动追加规则\n\n```\nparsers:\n  - url: {你的订阅链接}\n    yaml:\n      # 代表在原规则前面追加规则\n      prepend-rules:\n        # 以jetbrains.com结尾的请求都走DIRECT [也可以填你的策略组名]\n        - DOMAIN-SUFFIX,jetbrains.com,DIRECT  \n```\n\npotplayer竟然可以打开摄像头，主要是可以很方便的查看usb摄像头支持的最大画面，爽！`打开 - >设备设置 - >摄像头`\n\n**六月**\n\n我是不是早已与往日不同了呢\n\n**七月**\n\n[阿里docker镜像](https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors) 神！\n\n> 感觉不如[1panel](https://1panel.cn/docs/user_manual/containers/setting/)一根\n>\n> ```\n> sudo mkdir -p /etc/docker\n> sudo tee /etc/docker/daemon.json <<EOF\n> {\n>  \"registry-mirrors\": [\n>      \"https://docker.1panel.live\"\n>  ]\n> }\n> EOF\n> sudo systemctl daemon-reload\n> sudo systemctl restart docker\n> ```\n\n用qt写cmake项目时经常会出现改了ui但是编译运行的时候还是没变，只需要找一个cpp打一个空格然后不保存编译就行了（让他自动保存）\n\n**八月**\n\n最难受的一集，给nuc装系统的时候，硬盘没有初始化，直接选了erase and install，结果给我启动盘擦了，g\n\n[Clonezilla再生龙](https://blog.csdn.net/wf19930209/article/details/100012611)，硬盘对拷/硬盘打包镜像，最好用的一集，250g ubuntu，两分钟拷贝完成，我猜是自动摒弃了空余空间\n\n[ubuntu 串口别名](https://blog.csdn.net/weixin_56641176/article/details/130912273)，雀食好用\n\ntypora+smms图床设置，第一 设置下代理服务器，网页能上传但是api不一定行，第二 相同图片不能上传会报错（即使名字不同），测试的时候多整几张图\n\n**九月**\n\n[沉浸式翻译](https://immersivetranslate.com/zh-Hans/)最好用的一集，秒杀谷歌翻译\n\n洛天依全息演唱会 爽！\n\n**十月**\n\n抓包的时候发现要开启[这个](https://blog.csdn.net/zy_281870667/article/details/89788640)，可以抓到重定向之前的URL，模拟请求的时候也要请求重定向之前的URL，否则会鉴权失败\n\n14889+5696\n\n`termux`配置python环境跑个小程序\n\n```\n# 换源\ntermux-change-repo\npkg update\npkg install python3\n# 不安装openssl pip装东西的时候会报错\npkg install openssl\npip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple\npip install requests\n```\n\n[2024跑步打卡教程](https://www.123684.com/s/CVqajv-jYVWd)\n\n**十一月**\n\n最近遇到一个有意思的连锁反应，N100小主机无法使用ToDesk远屏幕操控→研究其他远程控制方式→发现有个叫moonlight和sunlight的可以低延迟串流→解锁新姿势-在床上玩电脑steam游戏→但是局域网才可以，学校网皎月连直接打不通→研究ipv6→宿舍的TPLINK路由器无法关闭ipv6防火墙→想买个小米路由器，既可以直接关闭ipv6防火墙又可以刷op，还可以双wan聚合，网速翻倍，爽！\n\n但是转念一想会发现这一切没什么用，首先小主机根本没有远程控制屏幕的需求，全用命令行就行了，而且买路由器不能解决n100无法远程屏幕控制的问题，其次买新路由器的话是可以随时随地ipv6串流了，但问题是，为什么不用更加方便的ToDesk呢，哈哈哈，放弃了，还是等会儿去研究下n100为什么不行然后换一个方法远程操控。\n\n研究了半天最后在UPnP里面发现有一台别人的电脑把sunshine默认端口已经在转发使用了，所以我设置的端口转发一直生效不了，（不过话说也挺神奇的，竟然能越过路由器的设置自动打通端口）然后我把我的sunshine换了一个端口就解决了，折腾，爽！\n\nhttps://account.jetbrains.com/licenses的`Renew my Education Pack`\n\n[Google风格C++编程规范](https://zh-google-styleguide.readthedocs.io/en/latest/google-cpp-styleguide/naming.html)\n\n```\n小写下划线：变量名 文件名 函数 命名空间\n大驼峰：类名 结构体\n类数据成员后面带一个下划线，结构体和普通变量后面不接下划线\n常量以k开头 如kEnumName\n宏如 MY_MACRO_THAT_SCARES_SMALL_CHILDREN\n枚举与常量一致\n```\n\n**十二月**\n\n代理软件切换为 [mihomo-party](https://github.com/mihomo-party-org/mihomo-party)  和  [ClashMetaForAndroid](https://github.com/MetaCubeX/ClashMetaForAndroid)，感觉是真好用\n\n[晨钟酱](https://jamcz.com/)的搞机工具箱和投屏控制器有点意思\n\n[Auto_Bangumi](https://github.com/EstrellaXD/Auto_Bangumi)订阅番剧、Alis挂载磁盘、potplayer添加专辑用webdav播放、手机用Nplayer播放\n\n原来docker之间是互通的，看了ip之后就可以在a容器里面设置b容器的端口为代理了\n\n在 `ssh` 命令中，使用 `-p` 来指定端口；在 `scp` 或 `sftp` 命令中，使用 `-P` 来指定端口\n\n密钥登录：客户端使用`ssh-keygen -o`生成密钥，`cat ~/.ssh/id_rsa.pub`查看公钥，放入服务器中的`~/.ssh/authorized_keys`，一行一个；`sudo vim /etc/ssh/sshd_config`修改配置\n\n> 一定注意是sshd不是ssh，害我浪费半天\n\n```\n#禁用密码验证\nPasswordAuthentication no\n#启用密钥验证\nPubkeyAuthentication yes\n#重启ssh服务\nsudo service ssh restart\n```\n\n\n# 2023\n\n**一月**\n\n* 做了件任性的事，不知道有没有伤害到你们呢\n\n  > 笑死 自己再看此句依然忘了干了什么了\n\n**二月**\n\n* 记录下来往花费时间，方便后面查\n\n  学校校车.老校区——新校区：1h\n\n  学校的车:新校区——机场：1h多一点\n\n  拼车.机场——新校区（50rmb）：\n\n  拼车.仁村——新校区（10rmb）：30mins\n\n  新校区——西安国际医学中心：都是黑车司机，谨慎\n\n  地铁+拼车/公交：机场——新校区：3h往上\n\n* 双笙幻彩国巡演.西安站，一次美好的还愿\n\n* 到校第一天，没找到我的自行车，以为是天太黑了没看到，就准备第二天找\n\n  第二天还愿去了\n\n  第三天把我经常停的那个地方转了又转也没见着\n\n  第四天找了找周边的几个宿舍门口也是无果，看见好多自行车都锁了，但我的车是一直没锁，有一丝这样的念头：“学校都是坏人www 再也不停外面了 再也不要不锁车了”，不过再转念想想，第一那没锁的车也挺多，为什么是我，第二我的车应该是那里面比较烂的，还有这么多好车，为什么是我，想来想去再学校里被偷车还是有点奇怪\n\n  第五天还在找，感觉没希望了，都快准备放弃了，见着一只不知名的鸟，而且还飞的离我很近，我当时突然想到了《久保同学》里面的剧情，“今天见到了白石同学，运气会很好”，那我今天见到了这只鸟，运气会变好吗 会找到我的车吗，我又多多看了它几眼，期盼着会有好事发生\n\n  的确，我在食堂门口附近找到了我的车，锁车？不可能的\n  \n* 你就像星子，洒落在我梦里\n\n* [啥都不想做](https://www.bilibili.com/video/BV1GM411i7is) \n\n* 再不学开学考试就要g了www 快学 学不完了\n\n* 弄了下评论区，参考链接\n\n  https://vuepress-theme-hope.github.io/v2/comment/zh/guide/giscus.html\n  \n* 弄了下windows美化\n\n  微软自带磁铁 但是只有图片 点了没效果 有点弱\n\n  https://apps.microsoft.com/store/detail/tile-genie/9WZDNCRFJ215?hl=en-us&gl=us\n\n  `使用全屏开始屏幕` 个性化->开始\n\n  某位up自制磁铁，可以把软件改磁铁背景\n\n  https://www.bilibili.com/video/BV1t741187nz/?spm_id_from=333.999.0.0\n  \n  ![image.png](https://s2.loli.net/2023/03/02/bDm7O2nWCr3UZQo.png)\n\n**三月**\n\n*  大二下，绩点排名专业百分之五十，有点迷茫，周围都是百分之十百分之五或者是专业前几的稳定保研人，学长劝我再好好学，还有机会，不过考虑到我语文和英语的薄弱基础，感觉希望很微妙，聊着聊着一个双非学化学的哥们说自己还挂科了，你酒吧舞还emo。我们到时候应是都会找到自己的工作开始赚钱的吧，如果是那样的话，忧虑或许能降低一点，心中总想着，一切都会过去的\n\n  > 奋斗了一年，竟然保上研，回望真是感叹啊\n  \n* 也曾想成为“特别”的人，不过思来想去学到现在，所学的东西当然不够特别，总有学的更好更多的在身边，不过之前萌生了做个视频的想法，思路和构思感觉有了，不知道做完之后，能否对“特别”有再深层一次的理解呢\n\n**五月**\n\n* 7295+6678+2429\n\n**六月**\n\n* github学生认证：录取通知书+一卡通+小纸条写github name\n\n**十二月**\n\n* 太神奇了，[`QQ邮箱不行 其他邮箱 使用 smtp 加密端口号 465`](https://developer.aliyun.com/ask/104139)      [`由于阿里云禁用了25端口所以替换成465端口并修改协议为ssl才能发送邮件`](https://blog.csdn.net/u013412790/article/details/72904038)   \n\n  最近是用的一个[自动监测成绩脚本](https://github.com/cheanus/Automation/blob/main/GradesMonitorLinux)，里面发送邮件相关的函数是`smtp_obj.connect('smtp.qq.com', 25)`，使用的是25端口，阿里云把它给封了，用`telnet smtp.qq.com 25`无法连通，但是`telnet smtp.qq.com 465`是可以的，换了几次关键词上面两个相似的博客，最终还是问的GPT【**smtp_obj.connect('smtp.qq.com', 25)修改为使用465端口 并 修改协议为ssl**】直接成功拿下，用如下代码即可\n\n  ```\n  smtp_obj = smtplib.SMTP_SSL(mail_host, mail_port)\n  ```\n\n  > 转眼六个月没更新日记了，哈哈 发生了什么呢\n\n* \n  予我黑夜\n\n  远方 忽有孤灯闪烁\n\n* 本想定位飞机忽然下坠的问题（可能是pid的问题，飞控或者代码\n\n  但是有个桨突然不转了 g（经典复刻\n\n  > 似乎是分电板接触不良\n\n  补充：原因是电机动力不足，飞机太重\n\n* **就像** 一周以后要考试，但学校不让你复习，旁边的人也不让你复习，非常的难受（不过测了一些内容 含可以，以后要去外面飞了\n\n* 重构代码是什么人间趣(qv)事(shi)，改了十几个文件，最终效果不会有变化，只是改了代码，每次提交都害怕下次飞机就炸机了（）\n\n* 数据集重标重训，yolo效果真好啊\n\n  > 非常奇怪的是学长学姐说之前的权重文件效果也很好来着，不知道为什么我运行起来就基本不识别，感觉是哪里没弄好\n\n  补充：原因是场地发生了变化，光线不一样了\n\n* 此网站在谷歌中能被搜索到\n\n  > 教程：[让Google搜索到自己的博客](https://zoharandroid.github.io/2019-08-03-%E8%AE%A9%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E5%88%B0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/)\n  >\n  > [必应搜索](https://www.bing.com/webmasters/about) 可以在谷歌配置好之后一键导入bing 使用谷歌账号登陆即可\n  >\n  > ~~[百度同理](https://ziyuan.baidu.com/https/index)~~ 百度这个 验证成功但是我搜不到 奇怪\n\n* 解决ubuntu显卡驱动问题 www [bwyyds](https://www.tomcatdeng.cn/)\n\n  > 顺便也能用会本来的桌面系统和搜狗输入法了 好耶！\n\n* 有场地了 开心\n\n* 每周固定十几个小时，节假日基本都要集训（比如国庆有时候只有一两天时间是放假），寒暑假也有一个月以上集训。听说有人还说我们基地水是真的没绷住\n\n  > 我天天没有课就跑过来调飞机，周内有时间就在想怎么改进，到时候得奖  有人说奖很水的话我是真怕我会跟他急\n  >\n  > **不管了 先做好自己能做的吧**  ——  这也是我一般情况下的想法\n\n* 硬盘复活~~ 原来是里面接触不良 拆开之后插拔一下就好了\n\n* 剪头发的时候真的是极致的享受，不过就是学校剪的时间没有老家那边长（\n\n* 飞机备赛进度90％  总算是大致可行了\n\n* 有些迷茫，很多课程都落下了很多了\n\n**十一月**\n\n* 老爸被骗子骗了很多钱，伤心 难过 亦或是 后悔\n\n  或许我爸也曾经有个清华梦吧\n\n  思考了下午最终我意识到我们还是活在现在的人：\n\n  **过去的事情已然过去，后悔便是毫无意义**\n\n  “不要紧，我没事，就当输了一场牌吧！”\n\n  **糊涂**总是贯穿人生  我亦如此\n\n* 今天突然想起来大一室友给我说：“你这放的啥歌”\n\n  我本来以为是真的想知道是啥歌，后来想了想，应该是提醒我不要外放\n\n  类似这样委婉的提醒我真的很难注意到，比起这样我更希望你直接给我说，“不要外放可以吗”\n\n  > 大四了，或许室友也不介意当时放的歌其实\n\n* RoboCup中国机器人大赛-无人机挑战赛-快递识别赛 结束！\n\n  第一名拿下！！不负从七月底就开始备赛的我们\n\n  每周都在准备，周内有时间也过去调飞机\n\n  这个周末异常的充实，两天过去以为都已经一周了哈哈\n\n* [欢太云服务](https://cloud.heytap.com/login.html)yyds！！\n\n  今天手机丢到草地里面了，用环太云服务找回了，太爽了\n\n  建议大家都在自己手机里面找找有无找回手机的功能，开启一下\n\n* 我的字好丑，一个人的字怎么可以这么丑呐\n\n  呐呐呐呐呐呐呐呐呐呐\n\n**十二月**\n\n* 今天开了足基招新宣讲，我也稍微思索了下我们应该需要怎样的人\n\n  * 编程能力：会基本的语法我觉得大抵是够了，最好会类的写法，不会也没关系，因为我入队的时候也不会\n\n    ~~你敢相信搓了3k行策略代码拿了国一的人到现在还没弄清楚cin和cout后面的尖角朝向~~，我刚进基地的时候只会c语言，水平也是会几个循环和判断，学了下sdl库做了个小游戏（不过我很极限，据说因为分数不够是要被刷掉的，但是有位学长把我硬捞起来了，阿里嘎多）\n\n    主要这个东西后面是可以从不会到会的  没有问题\n\n    > 过了一年再看这个问题，我还是希望进来的一个是已经会c++ 类 stl 或者 python的，从一开始就有代码能力的话，还是会好很多\n    >\n    > 又过了一年，或许代码能力也没那么重要，有点基础后面来了再学就可以了\n\n  * 沟通能力：我觉得只是至关重要的东西，他不是指能不能把话说清楚，而是包含与人说话时给人的感受以及更多，这或许说的是  温良，怪才或许不是很需要\n\n  * 去与不去能力：（暂且这么叫吧）评判这个值的高低是这么一回事，就是有一件事，大家都能做而且这件事是需要有人弄的但是又没有明确的职责确定，在有时候没用负责人时，这个东西就很重要\n\n    异或是你对于一件需要有人去帮忙但不一定是你去的事，去做的意愿值有多大\n\n    > “那必须是我了！”\n    >\n    > “总会有人去的.”\n\n  * 你问对机器人的热爱程度？老实说，我倒希望这方面意愿能低一些，如果你怀着极大的热爱进来之后发现做着与当初所想相去甚远的事，学长学姐也不好受，你也不好受。有一种对机器人的好奇心感觉就足够了，进来之后会逐渐喜欢上的\n\n    比如说我，进基地之前都挺无感的，因为根本不清楚那到底是个什么玩意儿。到现在，我甚至想自己花钱组一架无人机了（在构思了在构思了 真组出来一定水一篇新文章然后拍视频  ~~超想上颜料然后刻一个洛洛~~\n\n* 最近听了星尘感觉也好好听！\n\n  两首良曲\n\n  [无语咯【星尘infinity原创曲】](https://www.bilibili.com/video/BV1oG4y1674W/)\n\n  [我多想说再见啊【星尘Infinity】[原创曲]](https://www.bilibili.com/video/BV1dP4y1T7TU)\n\n  这么说来我最初知道v家还是[绮云泽](https://www.bilibili.com/video/BV1Bb411c7v2)这首歌（从人本那来的），v本也是星尘，后面慢慢入了天依（洛洛超可爱！）的坑，每天在v家里面挖良曲真开心，有很多有意思的创作者，或是超可爱的pv，或是让人会心一笑的词作，或是旋律恰到好处的作曲，又或是 超强的一体机p主\n\n  总之，入了此坑很开心\n\n* 感觉主题有点花，不是很适合写东西\n\n  换了一个，感觉还不错\n\n* 层云尽染，漫想雪中踱步\n\n  ![5UNDVVMR_1E8TBQ__FSD2_X.jpg](https://s2.loli.net/2022/12/17/AGzoInhDa8FElNe.jpg)\n\n  ![WVW_G697FL2__QHE6_P_QWM.jpg](https://s2.loli.net/2022/12/17/f8yjSmDGoNAC6tW.jpg)\n\n* 今天终于解决了蓝牙的问题 好耶！！\n\n  之前一直有个情况是：连了蓝牙会有两个设备\n\n  Stereo音质好但是一和xdm打游戏连麦就游戏没有声音了\n\n  AG Audio能连麦打游戏但是音质烂的爆炸\n\n  ![1.png](https://s2.loli.net/2022/12/17/wGW4KmTEd6M2hDy.png)\n\n  今天想着要解决一下就搜了搜，最后试了试重装一下驱动就好了！\n\n  我是自己换了一个ax210的网卡，[wifi驱动](https://www.intel.cn/content/www/cn/zh/download/19351/windows-10-and-windows-11-wi-fi-drivers-for-intel-wireless-adapters.html)   [蓝牙驱动](https://www.intel.cn/content/www/cn/zh/download/18649/intel-wireless-bluetooth-for-windows-10-and-windows-11.html)\n\n* 发现个好东西，对于喜欢截屏的太友好了，之前一直以为QQ截图是神中神，今天发现snipaste这个软件也挺有优势的，在Microsoft商店就能下（挂个梯子下起来快一点）教程：https://docs.snipaste.com/zh-cn/\n\n  功能只能用强大二字来形容，不过没有文字识别和长截屏，但QQ截屏有\n\n  > 不过以后面使用经验来说，习惯了QQ截屏很少记得起还有这个东西\n\n* 今天看了一个[Linux教程](https://www.runoob.com/linux/linux-tutorial.html)，介绍了很多常用的东西，了解的更明白了\n\n  * **关于`./`**\n\n    比如可以`./test.sh`，我就一直以为./是运行某个文件的意思，看了文章才知道./是指定当前路径，`./test.sh`就是指定到当前路径下的名叫test.sh的文件，而解释器在文件中第一行指定了，如`#!/bin/bash`，所以也可以像这样运行`/bin/bash test.sh`，而直接输`test.sh`会去`/usr/bin`那种路径下去找，显然是找不到的\n\n  * **ssh链接的简便方法**\n\n    [**Xshell**和**xftp**](https://www.xshell.com/zh/free-for-home-school/)图形化 yyds，主要是可以记住ip，端口，密码 下次登陆不需要再输，很方便\n\n    > Xshell老弹广告，我现在在用[mobaxterm](https://mobaxterm.mobatek.net/)，还可以拖拽传文件，好用\n\n  >> 现在转用[Termius](https://termius.com/)，github学生认证之后使用，三端自动同步，非常好用\n\n    Linux下有一个类似的软件 [finalshell](http://www.hostbuf.com/t/1059.html)(这个官网简陋到我以为是什么论坛之类的 误)\n\n  * **关机开机的指令**\n\n    `shutdown`：关机\n\n    `shutdown -h 20:25`：今天20:25关机\n\n    `shutdown -h +10`：十分钟后关机\n\n    `shutdown -r `：重启 同`reboot`\n\n  * 其实关于文件基本属性的介绍也很细致，以前只了解几个指令，但不明白具体是什么意思\n\n    几个常用指令介绍也很清楚\n\n  * `df -h`：查看磁盘大小和剩余\n\n    `ll`：查看文件详细信息  `ll /usr/bin/python*`查看所有python软连接指向\n\n    `ls -hl`：查看当前路径下的文件大小，文件夹显示为4k\n\n    `du -h --max-depth=1`：查看当前文件和文件夹大小\n\n# 2022\n\n**九月**\n\n* 百（社）团大战有马儿跳wwwww\n\n  可我在旁边调飞机  悲\n\n* 烧了一个小时程序最后发现是板子有问题\n\n* 足基蛋糕 好耶\n\n**十月**\n\n* 规划器.局部规划&全局规划调试（穿啊 你快穿过去啊  （急了\n\n- [x] 飞机穿门\n\n* 解决了历史性的视觉识别**延迟**问题\n\n  虽然队列长度设置为1并没有按照我们所想的那样进行读取发送\n\n  但是把相机输入由30帧变为10帧就好了（？）\n\n* 光鲜亮丽的世界","tags":["日记"],"categories":["生活"]},{"title":"Ubuntu&Windows&Android使用大杂烩","url":"/6666/06/06/ubuntu_windows_android/","content":"\n浅浅记录个人使用Ubuntu&Windows&Android所遇之事以及推荐的软件\n\n<!-- more -->\n\n什么，你说为什么没有**macos/ios**，当然是因为——我没有啦~\n\n# Ubuntu\n\n## ubuntu安装\n\n安装的话大致流程就是\n\n在Windows下分盘->制作启动盘->u盘启动安装->下一步下一步下一步（可能分盘会麻烦一点，但是可以只分一个/\n\n推荐这个[教程](https://www.bilibili.com/video/BV1554y1n7zv)，感觉讲的比较细致\n\n> 单Ubuntu分两个区 一个500MB的efi区 剩下的全部给`/`\n>\n> 双系统新装Ubuntu直接一个`/`\n>\n> 想扩容一下的，发现可压缩空间比空闲内存小的多，按照[这个](https://www.bilibili.com/video/BV12L4y1A72s)评论区置顶操作一下就好了\n\n**安装完之后马上要做的事**\n\n* **网卡**  检测网卡是否正常，如果可以直接开始上网，那就是非常的不戳\n\n  有可能开机之后没有wifi选项，**解决办法**是：先连网线或者手机usb数据共享，换源然后`sudo apt update`和`sudo apt upgrade`，如果还是不行就去网上源码编译一下网卡驱动（去windows下面找到自己的网卡型号然后去搜一搜）就ok了\n\n  但是不排除究极螃蟹网卡（对 我说的是mt7921 会时好时坏）最后我直接换了ax210\n\n  又遇到一个逆天网卡AX101，Ubuntu22.04能有WiFi图标但有时能用有时不行，能用的时候带宽也只有50兆，感觉可能是网卡型号读错了然后不是很适配\n\n  自己安装网卡驱动方法\n\n  1. [Intel官网](https://www.intel.cn/content/www/cn/zh/support/articles/000005511/wireless.html)，确保内核版本大于要求版本，解压之后放入` /lib/firmware`即可\n  2. 更新内核，[这里](https://wireless.wiki.kernel.org/en/users/Drivers/iwlwifi)可以看到Intel网卡与内核版本的关系   [内核图形化更新方法](https://zhuanlan.zhihu.com/p/686362507)\n\n  AX211或AX201在[这里](http://archive.ubuntu.com/ubuntu/pool/universe/b/backport-iwlwifi-dkms/)下这个`backport-iwlwifi-dkms_9858-0ubuntu3_all.deb`，说实话很奇怪，不知道这个包是怎么来的干什么的\n\n  ```\n  wget https://archive.ubuntu.com/ubuntu/pool/universe/b/backport-iwlwifi-dkms/backport-iwlwifi-dkms_9858-0ubuntu3_all.deb\n  sudo apt update\n  sudo apt install ./backport-iwlwifi-dkms_9858-0ubuntu3_all.deb\n  ```\n\n  [rtl8852be](https://github.com/HRex39/rtl8852be)的安装依赖如下\n\n  ```\n  sudo apt-get update\n  sudo apt-get install make gcc linux-headers-$(uname -r) build-essential git\n  ```\n\n  `lspci | grep -i net`找到形如`8086:51f1`的信息，输入到后面这个网址查询 [查看网卡型号](https://admin.pci-ids.ucw.cz/mods/PC/10de?action=help?help=pci)\n\n* **换源**  选择一个国内源安装软件会更快，[Ubuntu清华源](https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/)，注意版本不要选错了\n\n  然后打开一个终端<kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>T</kbd> ，输入`sudo apt update`和`sudo apt upgrade`更新源和更新软件\n\n* ~~**显卡驱动**~~  (**很容易给ubunut安装到打不开，不熟可先跳过**)\n\n  安装显卡驱动（如果有显卡的话），首选方法是在`软件更新`这个软件里面点一下安装，建议选择**sever版本**\n\n  * 如果重启电脑正常启动，那恭喜你非常的顺利\n\n  * 如果重启无法进入ubuntu，就在开机时候选第二个找一个恢复模式启动，再去`软件更新`里把显卡驱动卸载掉（点到最后一个就是卸载显卡驱动）\n\n  * 如果还是要装显卡驱动可以去官网下载，有一些二选一需要做，可以参考[这篇文章](https://qii404.me/2021/07/03/ubuntu-install-nvidia-driver.html)，不过我的`X configuration`那个必须选no才能安装成功\n\n    但如果安装之后还是**无法进入ubuntu**，则需要开机选第二个然后选第一个再选root进入命令行找到显卡驱动文件执行`./xxxxx  --uninstall`进行卸载\n\n  > 拯救者之类需要在bios中单独设置独显直连模式\n\n* **同步windows和Ubuntu时间**\n\n  ```bash\n  sudo apt install ntpdate\n  sudo ntpdate time.windows.com\n  sudo hwclock --localtime --systohc\n  ```\n\n  > 因为Ubuntu使用的是UTC机制，即把bios时间设置为格林尼治时间，显示时间时加八个小时\n  > 而Windows的bios和显示保持一致，所以会差八小时\n\n* **更改默认启动项（可选）**\n\n  ```bash\n  sudo gedit /etc/default/grub\n  # 修改GRUB_DEFAULT=\n  # 0代表第一个 windows一般在2\n  sudo update-grub\n  ```\n\n## 实用工具\n\n* **[谷歌搜索引擎](https://www.google.com/)**\n\n  谷歌搜索引擎用多了只会觉得百度很垃（\n\n  没有梯子时建议使用**必应**\n\n* [**clion编译器**](https://www.jetbrains.com/clion/download/#section=linux)\n\n  好用且配置方便，~~爆杀vscode~~（先选三十天试用，学生可以通过学信网认证免费使用\n\n  `sudo snap install clion --classic`直接安装，然后输入`clion`运行即可\n\n  > 如果是下载的压缩包，则需运行里面的clion.sh脚本\n  >\n  > 在.bashrc/.zshrc中写入`alias clion=xxx/bin/clion.sh` 之后就也可以输入clion命令打开了\n\n* **输入法**\n\n  首推还是搜狗，[官方教程](https://shurufa.sogou.com/linux/guide)，词库雀食是强大的  如果无法使用可以安装ibus的输出法，一定不会报错\n\n  值得注意的是 如果你选的是英文界面（系统）设置的region& language界面中  manage install language上面要**只留下Chinese**才能使用搜狗 ，别问 问就是捯饬了半天才试出来\n\n  Ubuntu22.04可以参照[这篇帖子](https://askubuntu.com/questions/1406597/how-to-get-sogou-pinyin-ime-work-properly-in-ubuntu-22-04)里面的做法\n\n* **zsh**\n\n  ```bash\n  sudo apt install -y git zsh curl\n  sh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n  # 会提示切换到zsh终端，若没有切换成功可以输入chsh -s /bin/zsh后重启\n  # 自动补全插件\n  git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\n  # 语法高亮\n  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\n  # 进.zshrc把73行的plugins=(git)改为\n  plugins=(git zsh-syntax-highlighting zsh-autosuggestions)\n  ```\n\n  主题agnoster简洁不用安装，直接修改`.zshrc`11行`ZSH_THEME`字段的即可\n\n  ```\n  ZSH_THEME=\"agnoster\"\n  ```\n\n  输入`source ~/.zshrc`或重启终端即可生效\n\n  > 若有字体乱码需要下载字体\n  >\n  > ```\n  > sudo apt-get install fonts-powerline\n  > ```\n\n  主题powerlevel10k支持多种形式，可自行选择\n\n  ```bash\n  git clone --depth=1 https://gitee.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k\n  ```\n\n  ```text\n  ZSH_THEME=\"powerlevel10k/powerlevel10k\"\n  ```\n\n* **[conda](https://mirrors.bfsu.edu.cn/anaconda/archive/)**\n\n  ```\n  wget https://mirrors.bfsu.edu.cn/anaconda/archive/Anaconda3-2022.10-Linux-x86_64.sh\n  ```\n  \n  没有过多需求的情况下，直接安装python也是一个很好的选择\n  \n* **typora**\n\n  我发现[下载1.0](https://typora.io/releases/all)版本的也不会弹出收费推荐，舒服\n\n  这还有篇文章给了[0.9版本](https://k0tk0t.github.io/2021/03/31/%E5%9C%A8Ubuntu%E4%B8%8A%E5%AE%89%E8%A3%85Typora/)的哈哈\n\n  ```bash\n  wget https://download.typora.io/linux/typora_1.0.3_amd64.deb\n  ```\n\n* **神——[docker](https://yeasy.gitbook.io/docker_practice/install/ubuntu)**\n\n  安装docker\n\n  ```\n  # 如果curl不下来脚本，可以复制下来自己创建一个\n  curl -fsSL get.docker.com -o get-docker.sh\n  sudo sh get-docker.sh --mirror Aliyun\n  ```\n\n  换源\n\n  ```\n  sudo mkdir -p /etc/docker\n  sudo tee /etc/docker/daemon.json <<EOF\n  {\n   \"registry-mirrors\": [\n       \"https://docker.1panel.live\"\n   ]\n  }\n  EOF\n  sudo systemctl daemon-reload\n  sudo systemctl restart docker\n  ```\n\n  安装docker-compose\n\n  ```\n  sudo curl -L \"https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n  sudo chmod +x /usr/local/bin/docker-compose\n  ```\n\n* **命令行走代理**——[**proxychains**](https://m-ouse.github.io/post/proxychains%E9%85%8D%E7%BD%AE/)\n\n* **录屏软件**——kamaz\n\n  ```bash\n  sudo apt install kazam\n  ```\n\n* **[ubuntu优化](https://blog.zzsqwq.cn/posts/141/)**\n\n  战老师yyds！\n\n  > 可以设置主题+图标+开机启动项背景+鼠标样式等\n  >\n  > 我用的是\n  >\n  > 应用程序 Orchis-Green-Light\n  >\n  > 光标 Nordic-cursors            \n  >\n  > 图标 Zafiro-icons-Light-Blue-f\n  >\n  > shell WhiteSur-light\n  >\n  > 开机启动选项 Hoshimati_Suisei_motify\n  >\n  > 然后自己魔改了张开机启动背景\n\n  ![](images/%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E7%94%BB%E9%9D%A2.png)\n\n---\n\n选择性安装软件\n\n* **ros（不是**\n\n  做机器人相关项目才会需要\n\n  > 要不什么时候写个[教程](https://70lokirin.github.io/2022/10/17/ros/)？\n\n* **[nomachine](https://downloads.nomachine.com/linux/?id=1)**\n\n  远程桌面链接软件，配合3.5元的HDMI欺诈器能很好的图形化控制nuc等上位机\n\n  > 记得选下面的x86/adm64即**64位**的软件，上面是32位\n\n  **如果不是无网络局域网，感觉不如ToDesk或者向日葵或者UU远控**\n\n* **[scp](https://blog.csdn.net/yaxuan88521/article/details/118481936)**\n\n  对远端服务器直接进行复制粘贴\n\n  ```zsh\n  scp -r -P 316 ./xxx root@xx.xx.xx.xx:/home/xx\n  ```\n\n## 可能会遇到的问题\n\n* **GitHub sshkey怎么生成都是鉴权失败**\n\n  可能是端口问题：https://blog.csdn.net/alex_my/article/details/89336493\n\n  > 若wifi有使用了软路由有代理或自己开了代理 部分机场会ban22端口（防ddos） 所以会鉴权失败\n\n  ```bash\n  gedit ~/.ssh/config\n  # 填入如下内容\n  Host github.com\n  Hostname ssh.github.com\n  Port 443\n  ```\n\n* **usb端口突然没有，比如/dev/video0（笔记本相机）端口没有了**\n\n  进入bios关闭**Secure boot**即可\n\n  > 虽然你可能会说你肯定之前关闭了，但你再看一眼，就会发现很神奇的是enable\n\n* **ros拥有多个工作空间，在`.bashrc`中写了source但是没有用**\n\n  source需要按照工作空间创建顺序进行source\n\n  ~~在每一次source之后都加入--extend~~ **千万不要在后面加extend** 虽然source的时候是觉得方便了，但是你如果想通过取消掉这个source，可不只是简单的注释就行了\n\n\n\n![_H_X_2_K~W_1O_0Q___1_1X.png](https://s2.loli.net/2023/01/28/k7SmWnJ3etpQiOV.png)\n\n<div align=\"center\">危</div>\n\n一波简简单单的重装\n\n\n![653a9e7181c31465875b376e1949932b.png](https://s2.loli.net/2023/01/29/EbYqw5DRXLVcpkl.png)\n\n<div align=\"center\">舒服了</div>\n\n# Windows\n\n## **日常软件**\n\n| 名称                                                    | 说明                                               |\n| ------------------------------------------------------- | -------------------------------------------------- |\n| [QQ](https://im.qq.com/index/)                          | 其实自带的截屏很好用                               |\n| [微信](https://weixin.qq.com/)                          | 有内测版支持暗色模式了                             |\n| [网易云音乐](https://music.163.com/#/download)          | 可以自己下载音乐传到网易云盘然后就可以听没有的歌了 |\n| [WPS](https://www.wps.cn/)                              | 文档自动云同步真的还可以                           |\n| [谷歌浏览器](https://www.google.com/intl/zh-CN/chrome/) | 用谷歌账号同步所有数据，很爽                       |\n| [BandZip](https://cn.bandisoft.com/bandizip/)           | 解压缩的神，b站可以找到破解版，不破解有广告        |\n\n## **一点点技术软件**\n\n| 名称                                                         | 说明                                       |\n| ------------------------------------------------------------ | ------------------------------------------ |\n| [mihomo-party](https://github.com/mihomo-party-org/mihomo-party/releases/latest) | 代理软件的新神，我评价为                   |\n| [图吧工具箱](https://www.tbtool.cn/)                         | 无需多言 真正的神                          |\n| [小丸工具箱](https://maruko.appinn.me/)                      | 压制视频的神                               |\n| [格式工程](http://www.pcfreetime.com/formatfactory/cn/index.html) | 格式转换的神（不过好像说是违反了开源协议） |\n| [everything](https://www.voidtools.com/zh-cn/downloads/)     | 搜索文件的神                               |\n| [geek](https://geekuninstaller.com/download)                 | 卸载软件的神                               |\n| [spacesniffer](https://github.com/redtrillix/SpaceSniffer/releases/latest) | 磁盘分析的神（方便清理硬盘）               |\n| [potplayer](https://potplayer.daum.net/)                     | 视频播放的神                               |\n| [DiskInternals Linux Reader](https://www.diskinternals.com/linux-reader/) | 查看ubuntu的文件                           |\n| [BBdown](https://github.com/nilaoda/BBDown)                  | 命令行下载b站视频/音频的神                 |\n| [唧唧Down](http://client.jijidown.com/)                      | 图形化下载b站视频/音频的神                 |\n| [右键菜单管理](https://github.com/BluePointLilac/ContextMenuManager) | 非常好用                                   |\n| [termius](https://termius.com/download/windows)              | ssh链接软件，学生认证后多端同步很好用      |\n\n## **微软商店可下载**\n\n| 名称            | 说明                      |\n| --------------- | ------------------------- |\n| TranslucentTB   | 底部栏透明                |\n| Microsoft To Do | 做todolist 多端同步很好用 |\n\n## **百度网盘不限速的神**\n\n| 名称                     | 说明                           |\n| ------------------------ | ------------------------------ |\n| https://pan.f4team.cn/#/ | 需要进tg群获得动态密钥，无限制 |\n\n## 其他\n\n把windows powershell设置为预测历史指令自动补全\n\n```powershell\n# 允许运行脚本\nset-executionpolicy remotesigned\n# 寻找最新版本\nFind-Module PSReadLine -AllVersions | Select-Object -First 5\n# 我这里最新是2.3.6\nInstall-Module -Name PSReadLine -RequiredVersion 2.3.6\n# 把预测源目设置成历史\nSet-PSReadLineOption -PredictionSource History\n# 重启powershell即可\n```\n\n第一次重启后可能存在psreadline模块无法加载的情况参考[这个](https://www.miyil.com/vue/940.html)\n\n## 重装系统\n\n重装系统钱需要保存的：\n\n* **篡改猴/油猴脚本**，把安装的脚本存一下，重新安装后设置：扩展商店→篡改猴插件的详情→允许运行用户脚本→重启浏览器\n* **git公钥私钥**，`C:\\Users\\<用户名>\\.ssh`，xxx和xxx.pub，如果设置过密钥登录的话就保存一份\n\n用**winget**安装上述基本软件和一些其他软件，`list.json`内容在下面\n\n```\nwinget import .\\list.json --accept-package-agreements --accept-source-agreements\n```\n\n> 这样装有个缺点是有些软件不会创建快捷方式，比如ContextMenuManager等等\n>\n> 还缺少\n>\n> [wps](https://www.wps.cn/) 这玩意儿winget也能下但是特别特别慢\n>\n> [图吧工具箱](https://www.tbtool.cn/)\n>\n> [小丸工具箱](https://maruko.appinn.me/)\n>\n> [格式工程](http://www.pcfreetime.com/formatfactory/cn/index.html)\n>\n> [geek](https://geekuninstaller.com/download)\n>\n> [typora破解版](https://github.com/eglfiv/typora-activation)\n>\n> Microsoft To Do\n>\n> MATLAB\n>\n> CUDA\n>\n> VS stdio\n>\n> solidworks\n>\n> texlive\n\n```\n{\n\t\"$schema\" : \"https://aka.ms/winget-packages.schema.2.0.json\",\n\t\"CreationDate\" : \"2025-06-06T23:22:42.680-00:00\",\n\t\"Sources\" : \n\t[\n\t\t{\n\t\t\t\"Packages\" : \n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"Tencent.QQ.NT\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"Tencent.WeChat.Universal\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"NetEase.CloudMusic\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"Google.Chrome.EXE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"Bandisoft.Bandizip\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"Mihomo-Party.Mihomo-Party\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"voidtools.Everything\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"UderzoSoftware.SpaceSniffer\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"Daum.PotPlayer\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"BluePointLilac.ContextMenuManager\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"Termius.Termius\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"CharlesMilette.TranslucentTB\"\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"Bambulab.Bambustudio\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"Git.Git\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"Tencent.TencentMeeting\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"LocalSend.LocalSend\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"appmakes.Typora\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"hluk.CopyQ\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"OpenJS.NodeJS.LTS\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"JohnMacFarlane.Pandoc\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"JetBrains.CLion\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"OBSProject.OBSStudio\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"Sogou.SogouInput\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"Valve.Steam\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"Reqable.Reqable\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"JLC.LCEDA.Pro\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"Baidu.BaiduNetdisk\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"agalwood.Motrix\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"PicGo.PicGo.Beta\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"ByteDance.Feishu\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"ByteDance.JianyingPro\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"Ruihu.Apifox\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"Balena.Etcher\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"Telegram.TelegramDesktop\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"Python.Python.3.12\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"Microsoft.VisualStudioCode\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"Alibaba.QuarkCloudDrive\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"PackageIdentifier\" : \"Microsoft.WindowsTerminal\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"SourceDetails\" : \n\t\t\t{\n\t\t\t\t\"Argument\" : \"https://mirrors.ustc.edu.cn/winget-source\",\n\t\t\t\t\"Identifier\" : \"Microsoft.Winget.Source_8wekyb3d8bbwe\",\n\t\t\t\t\"Name\" : \"winget\",\n\t\t\t\t\"Type\" : \"Microsoft.PreIndexed.Package\"\n\t\t\t}\n\t\t}\n\t],\n\t\"WinGetVersion\" : \"1.10.390\"\n}\n```\n\n# Android\n\n## 日常软件\n\n太多了，不放了\n\n## 一点点科技软件\n\n| 名称                                                         | 说明                                                         |\n| ------------------------------------------------------------ | ------------------------------------------------------------ |\n| [Clash Meta](https://github.com/MetaCubeX/ClashMetaForAndroid) | 持续更新，好用                                               |\n| [Reex](https://www.52pojie.cn/thread-1814114-1-1.html)       | 跨平台视频播放器，在酷安可下载原版                           |\n| [immich](https://github.com/immich-app/immich)               | 自建 NAS 相册，很强大，[教程](https://www.himiku.com/archives/immich.html)or[官方教程](https://immich.app/docs/install/docker-compose) |\n| [MT管理器](https://mt2.cn/)                                  | 无需多言，平时用的最多的就是安装QQ发出来的.apk.1文件         |\n| [ToDesk](https://www.todesk.com/download.html)               | 电脑开机自启动，偶尔要远程一下挺方便的                       |\n| [Termius](https://termius.com/download/android)              | ssh链接软件，学生认证后多端同步很好用                        |\n| [Termux](https://termux.dev/cn/)                             | 适用于 Android 的终端模拟器                                  |\n| [Google Play 商店](https://play.google.com/store/games?hl=zh) | 下载软件很好用                                               |\n| [李跳跳](https://github.com/rongzhiy/LiTiaotiao)             | 跳广告的神                                                   |\n| [真实好友]((https://github.com/rongzhiy/LiTiaotiao))         | 检查微信单向好友                                             |\n| [Stellarium](https://play.google.com/store/apps/details?id=com.noctuasoftware.stellarium_free) | 看星空的神                                                   |\n| [LocalSend](https://localsend.org/zh-CN)                     | 局域网传文件的神                                             |\n| [Google 地图](https://play.google.com/store/apps/details?id=com.google.android.apps.maps&hl=zh) | 看地理图很好用                                               |\n| [Microsoft To Do](https://play.google.com/store/apps/details?id=com.microsoft.todos&hl=zh_TW) | 做todolist 多端同步很好用                                    |\n| [WakeUp课程表](https://www.wakeup.fun/)                      | 看课表很好用                                                 |\n\n## 网络监测软件\n\n| 名称       | 说明                      |\n| ---------- | ------------------------- |\n| cellularZ  | 看信道干扰                |\n| WiFi魔盒   | 功能很多                  |\n| 全球网测   | 测网速，花瓣不支持a15目前 |\n| Fing       | 查看局域网设备            |\n| 网络百宝箱 | 功能很多                  |\n\n## 我的搜索引擎解决方案\n\n在谷歌商店下载Chrome Beta和Chrome两个谷歌，两个用不同的默认搜索引擎，然后摆两个搜索小组件放在桌面上即可\n\n![image-20250321171916566](https://s2.loli.net/2025/03/21/IlDerEcHWzGPuns.png)\n","tags":["重装","Ubuntu"],"categories":["记录"]},{"title":"75元自制85w宿舍小冰箱","url":"/2025/05/26/29.small_fridge/","content":"\n夏日炎炎，饮水机没有制冷功能又想喝凉水怎么办，那就浅浅自制一个~\n\n<!-- more -->\n\n> 其实没什么用，开学估计要丢了hhh，纯玩\n\n# 效果图一览\n\n![dedc4a618dab0c6e9977933b6b411aea](https://s2.loli.net/2025/05/26/4o7dx5bNtW2jgln.jpg)\n\n# 材料准备\n\n| 名称              | 价格    |\n| ----------------- | ------- |\n| 铝箔纸            | 2.23元  |\n| 12708半导体制冷片 | 15.14元 |\n| 泡沫盒子          | 2.8元   |\n| 单铜管风扇        | 6元     |\n| 双铜管风扇        | 12元    |\n| 风扇快递费        | 9元     |\n| 三角插头          | 3.3元   |\n| 12V12.5A开关电源  | 24元    |\n\n总计：74.47\n\n<img src=\"https://s2.loli.net/2025/05/26/mbIjlnNS9G6CzPd.jpg\" style=\"width:auto; max-height:600px;\">\n\n# 制冷效果与功率\n\n室温25度时能降到10度，降温效果只有15度，其实效果才刚刚和网上百元的小冰箱（能降温11-17度不等，价格100-150元）打个平手，有点没到达预期，还是制冷片功率买低了\n\n标称制冷量70W，用米家插座实测加上三把风扇一共85W，一天约五毛钱，一个月约15元，耗电程度也算是还好？\n\n# 总结\n\n真要整的话感觉还是可以的，比现成小冰箱造价低效果好，功率差不太多。电源线建议加一块上1m的会方便很多\n\n另外建议稍微加一点预算，把半导体散热片选择更高功率的，制冷有望到达0-5度，比如现在是12708，127是指P-N 型热电偶对数量，08是指最大8A的电流，可以买个10（标称86W）或者12（标称103W），那样应该会很舒服\n\n电源选择我建议这样计算，70W的制冷片，三个风扇按15W算，刚好就是85W，85/0.6≈141，所以买的12V12.5A的150W电源，保证日常使用在额定功率的百分之60附近，别炸了。10A86W的制冷片就要170W，直接上12V15A的180W；12A103W的上12V16.5A的198W\n\n> 其实这么看还是up主说的方法简单，直接制冷片标称功率两倍买就行了\n\n组装比较简单，三角插头零火地接入开关电源，开原电源正负极上接入风扇和制冷片的正负极，买的风扇一般是3pinDC电压调速的，直接把正负接进来就行了，黄色的测速线不要了；制冷片有字的一面是制冷面，涂点硅脂接单铜管散热器，另一面涂点硅脂接双铜管，扎带扣紧就行了；内部贴上铝箔纸可能能提升一定的保温吧。\n\n# 参考\n\n参考视频：https://www.bilibili.com/video/BV1uz4y1b7bB","tags":["维修"],"categories":["记录"]},{"title":"记录一些东西参悟维修过程","url":"/2025/01/13/28.repair_electrical_appliances/","content":"\n主打一个参悟，电路理解全靠悟！（其实是靠纯猜x，还有看看视频）\n\n<!-- more -->\n\n# 电视机遥控器\n\n放寒假了，刚回到家捯饬了一下用电视机看 webdav 挂载的番剧，发现遥控器右键不太灵，框框一顿拆发现就是一个很简单的按钮，边上一圈是一个触点，中间凸起的是一个触点，按下按钮时中间凸起的凹陷下去接触电路板也就连通了，所以只要调整下位置，擦擦油就好了，ee 又 zz 啊。\n\n![744fe516-4e29-46e7-ab79-f625815f51dd.png](https://s2.loli.net/2025/01/13/P4hCcAmxNwTiyFD.png)\n\n# 遥控开关\n\n不是很灵敏了，也很简单，纽扣电池没电了而已了；然后这个面板固定是用的不可逆的卡扣，但是右下角卡扣的绷断了，所以部分按钮不好使了，刚好家里人之前买过一把胶枪，打个胶固定一下也好了。\n\n<img src=\"https://s2.loli.net/2025/01/13/yZxIC9lBiJHprOk.png\" style=\"\">\n\n# 电烤火炉\n\n然后妈又告诉我家里的一个电烤火炉也坏了，还是框框一顿拆！\n\n<img src=\"https://s2.loli.net/2025/01/13/P9akHpoNmcj1uBD.png\" style=\"\">\n\n稍显复杂，手里只有一支测电笔，也可以测通断，简单理一下发现是这样的，火线经过控制器按时间变化输出或不输出电压（原理在后面分析出来的），零线直接接电热丝，地线接设备外壳\n\n![image-20250113145816857](https://s2.loli.net/2025/01/13/IXwf4aheNVR21sc.png)\n\n用电笔测电热丝是通路，看了下电笔的参数是小于50欧就会响，电热丝电阻不高，应该是好的，所以大概率是控制器一直不输出电压，那还说什么，拆！先是参悟了一下旋钮开关，上面有一个六角螺母，刚好家里有老虎钳，轻松取下控制器，控制器有一个金属壳，而且一个元器件从内部有一颗螺丝把金属壳锁住了，研究了半天最后参悟出来应该是先把元器件用螺丝拧到金属壳上，然后用焊锡焊在板子上就封上了，话不多说，买个电烙铁和万用表，等个快递先。\n\n<img src=\"https://s2.loli.net/2025/01/13/6ZTYePVExqB9R3k.png\" style=\"\">\n\n框框一顿拆，然后用拍照搜商品、看板子上的标识、看元件身上的标识，找到了所有元件的tb链接。可恶，买的万用表的欧姆档是坏的，就测不了哪个元件是好的，重新买了还没到，算了，之前全部买一份先，不超过十块一共，还有几个电阻，我相信他们应该没坏。\n\n<img src=\"https://s2.loli.net/2025/01/13/uX1ez8ySDGPsxkf.png\" style=\"\">\n\n然后先研究研究原理，看板子后面的焊点我其实有点懵，比如右侧的那两个点是连锡的，我觉得这可能会有问题？（我是小白，啥也不懂ww，大佬的话应该知道这是为什么，不过我后面参悟出来了），下面那块连锡也很严重，而且有烧焦痕迹，可能就是那个元件坏了。\n\n> 参悟了很久之后突然发现为什么这个板子上这么多长方形的焊点，明明没有那么多元器件，最后突然发现板子的绿色有深有浅，我才意识到，一块浅色的代表他们是互相通的，所以图示的连锡没有一点的问题\n\n我想着先了解一下各个元件都是干什么用的，第一个是 BTA16-800B 双向可控硅，耐受 16A、800V，有三个引脚，T1、T2、G，当 G 对 T1、T2 有触发电压/电流时，T1到T2会导通，简而言之是一个开关\n\n第二个是 DB3 双向触发二极管，字面意思，是双向二极管，双向可导通，导通电压是30多伏\n\n第三个是 WH138 单联电位器带开关，也是三个引脚，ABC，AC 之间是一个固定电阻，如图是 500K 欧，B 随着旋钮选择而变化阻值，从 0 变化到 500K 欧，也就是一个滑动变阻器，还没看懂电路的时候，发现这里面的 AB 角是一直通的，我就在想是不是这个坏了，拆了半天研究了一下发现其实没问题，因 BC 之间的滑动变阻还是能正常用的，而这个电路只用了 BC，没问题啊，没问题啊\n\n我要非常感谢这个视频：[【电路实战-双向可控硅调压电路，结合示波器、实物、电路图讲解！】 ](https://www.bilibili.com/video/BV1Z7411974o)\n\n非常清晰易懂，而且和我手里的这块控制板非常像，基本一致，用示波器的那块直接恍然大悟，解释了这到底是如何控制用电器功率大小的，我一开始一直以为是串联一个可变电阻就可以了hhhh，其实是单项可控硅按时间进行导通，220V 50Hz 交流电每个周期内导通时间长与短就决定了用电器的有效时间，从而控制功率大小\n\n理一下电路板，然后学了一下嘉立创的画图功能，电路图如下，万事俱备，就等快递到了\n\n<img src=\"https://s2.loli.net/2025/01/13/HtyYT7PaO4dxhAs.png\" style=\"\">\n\n> 输入输出和T1 T2相对位置好像错了，算了，问题不太大\n\n当K1开关闭合时，C1电容逐渐进行充电，充电速度取决于电位器的阻值大小，阻值最小时是51k欧，最大是51k+1M和500k并联，阻值越小充电速度越快，在一个交流电的周期中有效输出时间会更长，当电容充电电压达到30多v足以让DB3双向触发二极管导通时，双向可控硅G1与T1有触发电压/电流，T1、T2导通，电器正常控制；当交流电电压归零时双向可控硅又截止，循环往复。从而实现通过电阻大小来控制一个周期中的导通时间，来控制电热丝的功率\n\n激动的心，颤抖的手，用电烙铁换上双向可控硅，没盖盖板先试了一下，oh，已经热了，看起来已经修好了，然后放下来又试了试，看到按钮装的不是很正，就想从下面用手再怼一怼，可没曾想，没上盖板，直接碰到了上面图片电路板的背面焊点（电路图中的 T1 T2，基本上就是 220v 火线），直接手一麻，本能的快速收回，才意识到被交流 220 电了，唉唉，**这才是切实体会到什么叫注意安全**，手麻麻的，吃饭的时候都还有点感觉。\n\n> 个人猜测被电了但是没跳漏保大概率是因为漏电电流不够大，没到漏保的阈值\n\n然后就感觉把背面的盖板上好，插上电还是能用的，刚好之前买过一根电笔，可以测与地的电压，我就想看看哪个点位有电，我就戳到盖板里面，没想到，**直接爆了一个小火花**，bangji 一声，家里灯也灭了，就知道跳闸了，哈人，我看弱电箱漏保和客厅的空开一起跳了，拔了电器，跳漏保之后要按一下按钮才能推上去，都打开家里电是正常了，但点烤火炉已经爆了个元件，还好，双向可控硅我买了两个，还能重新换上去。\n\n<img src=\"https://s2.loli.net/2025/01/20/j1DvmsQ6WrF3Jnq.png\" style=\"\">\n\n<img src=\"https://s2.loli.net/2025/01/20/oAZqFHKGTmIBxpt.png\" style=\"\">\n\n不过换上去之后电烤火炉没有并没有好，那就只能是还炸坏了其他东西，买了万用表，测了电阻，电位器，电容都是没有问题的，只有一个双向触发二极管不好测，因为导通电压有 30 多 v，不过问题不大，这个我也买了几个，换一个上去，终于成功拿下！\n\n<img src=\"https://s2.loli.net/2025/01/20/q65B8DOkAQRrlwZ.png\" style=\"\">\n\n跳闸和爆火花的原因大概率是因为我用电笔的前端把双向可控硅的 T1 G 之间连通了，击穿了双向触发二极管，双向可控硅有无法承受这么强大的电流，直接爆了，零火短路空开也显然会跳闸，只能说 心有余悸 雀食哈人，注意安全吧，后面再通电测试的时候，每一步都很小心，通电试的时候，做每一步之前都要先思考思考再行动。\n\n> 在一次长时间使用几小时后，他最终还是又爆了，可恶的三项可控硅。我觉得可能是后加的螺丝拧不紧，导致可控硅的热量无法传导到铁片上，导致热量过高所以爆炸了\n\n# 波轮洗衣机\n\n这个也是 ee 又 zz 啊，他有一个略微神奇的现象，就是开启后滚筒不旋转，但是用手拨一下滚筒，他就开始一直转了哈哈哈。了解了一下这种电机需要一个叫启动电容的东西，图中靠右下的长方体一黄一红连线元件，当这个电容坏的时候，就是这种表现状况。\n\n<img src=\"https://s2.loli.net/2025/01/20/vFy59hnIBkWwZs6.png\" style=\"\">\n\n观察一下他使用的是CBB61 5uF的电容，万用表测一下只有0.1uF，显然是坏了，网上买一个换上，轻松秒杀，包个热缩管，安安又全全\n\n<img src=\"https://s2.loli.net/2025/01/20/JlHAs2YhxIpcvGV.jpg\" style=\"\">\n\n# 条状吸顶灯\n\n自己买的灯一闪一闪的，一会儿暗一会儿亮，放了一个多学期今晚心血来潮想修，稍微研究了一下发现应该是开关坏了，拆开研究一下发现开关连通的状态下一会儿5欧，一会儿150欧，看来就是开关接触不良导致的。\n\n把开关拆开刮一刮然后重新装好，一测开关0.2欧，轻松秒杀\n\n![image-20250317021923835](https://s2.loli.net/2025/03/17/JD8LAGrfiguPQcn.png)\n\n![image-20250317021957403](https://s2.loli.net/2025/03/17/JEvtwW7pMQDZxVB.png)\n\n# 罗技G102鼠标\n\n滚轮经典失效，b站上有很多教程，就是滚轮那有点问题，给图示所示位置滴点油就行了，我这里用的是自行车油\n\n![image-20250321163301390](https://s2.loli.net/2025/03/21/OEuCLPX2hftrZ3N.png)\n\n# 滚筒洗衣机\n\n> 2025.8.19\n\n家里的洗衣机非常的响，脱水的时候像开拖拉机一样响，忍无可忍，无需再忍，准备冻手！\n\n最终花费了32.88元（轴承+水封）+3.6元（三叉套筒扳手）+57.88（三脚架）+9.25（T40内六角梅花扳手）+5.2元（长柄打火机）+1.9元（T40梅花六角批头）+0元（亲戚家借的电动螺丝刀）+10元（五金店借的角磨机）=120.71元，花费12天成功拿下\n\n网上其实有很多拆卸更换教程，有异响大概率就需要换轴承了，但是这种更换非常的麻烦，更换肯定要好几百，并且有很多师傅不修这个，所以，自己网上买自己动手吧！先在淘宝买了一个轴承，店名叫`好再来原装洗配`，发型号发给客服就能选到正确的轴承型号，后面也有很多问题客服都回答的很好，这家还是很推荐的\n\n最开始是按[这个教程](https://www.bilibili.com/video/BV1f44y1A7eP)拆卸下来的，后面是跟着客服发的[视频](https://v.youku.com/v_show/id_XNTE0NTc4NDM2MA==.html)弄的，拆卸最开头还没有太大的问题，也就拧拧螺丝，有一点滑丝也还好，对着教程一个一个拆就行了，中间有两颗螺丝不太一般，是处于一个凹槽侧边的位置，需要一个弯头的十字螺丝刀才行，一番思索，整了一个邪修，直接用电钻把洗衣机前面板钻了个孔，就能把螺丝拧下来了哈哈哈^_^\n\n![image-20250819180925269](https://s2.loli.net/2025/08/19/UvZjKB6GOlHa2zL.png)\n\n拆完之后看教程里面说三脚架裂了的话一定要换，不然轴承用不了几天，一看还真裂了，问客服也说是要换，就买了个新的等了几天\n\n![12a8147b355229021521073ebd7ce5ee](https://s2.loli.net/2025/08/19/qTXIl7wsdS19jUi.jpg)\n\n第一个难办的事情是轴承非常紧，很难敲的动，借了亲戚的一把锤子和用套筒抵住敲了很久，感觉丝毫没有动静，家里人轮流试，也没拿下，这个事情搁置了很久，我看了很多视频，都是暴力用锤子硬敲，力量亦有差距\n\n后来的某一天上午，就我一个人在家，我就像这个有这么难办吗，就一直敲、一直敲，终于，松动了，有点凸起了，也是成功敲下旧的换上新的了\n\n第二个难办的事情是三脚架的内六角梅花螺丝真的特别紧特别紧，看了网上说是用火烧会拧起来简单一点，网上都是用天然气罐接一个喷火器烧到螺丝发红，我们就用的酒精炉子烧的，也是勉强拆掉三颗螺丝，还剩三颗，我又买了两个长柄打火机，在想这样温度会不会高一些，但最后也是无济于事。又搁置了好多天，我问了问客服，他说第一个方法是用火烧，第二个方法是用角磨机切，我其实试了电钻，在想能不能用钻头把螺丝后面打穿，但钻头确实是打不掉螺丝，能打掉三脚架的铁。事不宜迟，决心试试用角磨机，买一个很不划算，故和爸一起去了附近的五金店借了一把，先磨了两颗，把后面的螺柱直接切掉了，螺丝变短了所以很好拧，最后一颗的时候，其实并没有切下来，只是因为角磨机把螺丝加热到碰都不能碰的热度了，其实还算是红烧法哈哈。所以其实还是之前的火烧法的加热程度不够\n\n感谢角磨机，感谢老板，老板说是不要钱，最后我和我爸还是给了十块，感谢解我心头之痛，历时十二天终于拆完了，当晚我就组装完成了，为了不打扰邻居所以第二天才测试，也是非常完美，几乎没有很大的声音，就是很正常的洗衣机旋转声\n\n> 值得一提的是，多了两颗螺丝<经典结尾哈哈哈>\n>\n> 另外角磨机使用其实很危险，我本来打算让老板帮忙切一切，不过他让我们自己弄，没有保护套没有护目镜没有口罩什么的安全措施，还是很危险的，不过小地方确实是这样的","tags":["维修"],"categories":["记录"]},{"title":"小米root与钉钉虚拟打卡记录","url":"/2024/11/05/27.xiaomi_root/","content":"\n玩玩借来的旧手机，好玩，爱玩！\n\n<!-- more -->\n\n# 前言\n\n建议先查看一遍极客湾经典视频[玩机必看！带你入坑安卓刷机，小白也能看懂的ROOT基础指南来啦！](https://www.bilibili.com/video/BV1BY4y1H7Mc/?share_source=copy_web&vd_source=414ff2d98f951f18440d4759c4c6f2af) ，能有个大概得了解，和一些驱动问题\n\n最终还是没有打算写成一个细致教程，而是寥寥几笔记录一下罢了\n\n# 常用命令行指令\n\n```\n# 用adb查看是否链接上设备\nadb devices\n# 正常系统时重启至fastboot模式\nadb reboot bootloader\n# 正常系统时重启至recovery模式\nadb reboot recovery\n----------------------------------\n# 用fastboot查看是否链接上设备\nfastboot devices\n# 刷入boot镜像\nfastboot flash boot boot.img\n# bootloader模式下重启至系统\nfastboot reboot\n```\n\n# 刷机过程\n\n* 小米备份数据 [b站视频教程](https://www.bilibili.com/video/BV1MevWehEoE)\n\n* 解`bl`锁 [Magisk图文教程](https://magiskcn.com/xiaomi-unlock)\n\n  > 小米14之前的澎湃os绕社区五级和答题验证\n  >\n  > [github仓库](https://github.com/MlgmXyysd/Xiaomi-HyperOS-BootLoader-Bypass/blob/master/docs/README-zh.md)  [酷安手把手图文教程](https://www.coolapk.com/feed/51431664)  [b站把手视频教程](https://www.bilibili.com/video/BV1EM4m1U7pq/)\n\n* 刷官改包或者老版本系统直接用[miflash](https://miuiver.com/miflash/)直接刷就行，最开始我先刷了一位佬做的澎湃os2，但是发现我找的up主做的第三方主题基本还没适配澎湃2，又刷回了1，然后发现有些软件不兼容，最后还是刷了MIUI12.5，真是应验了那句话，愿你刷机半生，归来仍是MIUI哈哈哈\n\n* 给recover分区刷入twrp系统，不同手机刷入方法不同，具体可参考[这个视频](https://www.bilibili.com/video/BV1RD4y1J7Ku)\n\n  米11指令为`fastboot boot twrp-3.7.0_11-0-venus.img`\n\n  自动进入twrp\n\n  高级→刷入当前的TWRP→确认（如果有清除dalvik选项就清除一下）\n\n  > 如果使用澎湃os2显示挂载失败 无法挂载/data/media/TWRP\n  >\n  > 这个twrp镜像无法刷入，请在酷安找到一个更新的米11的twrp镜像\n\n* [面具下载](https://github.com/topjohnwu/Magisk)\n\n* [获取root权限方法一  修补boot镜像后刷入boot](https://magiskcn.com/)\n\n* 获取root权限方法二↓  使用twrp刷入\n\n  在TWRP中刷入magisk模块。把magisk后缀改成zip放入手机，在TWRP中点击安装，选择zip文件即可，重启后在手机上安装apk即完成刷入\n\n* [备份字库](https://mrwei95.github.io/2024/08/16/Backup-Flash-Memory/)以防格机\n\n* 刷入各种模块\n\n* [使用LSPose框架](https://magiskcn.com/lsposed-install)\n\n  > Android15需要再酷安寻找更新的版本，LSP官方不支持，目前已不再更新\n  >\n  > 比如这个 https://www.123865.com/s/znKbVv-S52pd\n\n# 隐藏root\n\n[ZygiskNext](https://github.com/Dr-TSNG/ZygiskNext)\n\n> 使用这个关闭面具里面的Zygisk 隐藏性更高\n\n[Shamiko](https://github.com/LSPosed/LSPosed.github.io/releases/)  [使用白名单方法](https://magiskcn.com/shamiko-whitelist)\n\n> 经典隐藏root模块，很好用\n\n[TrickyStore](https://github.com/5ec1cff/TrickyStore)\n\n[PlayIntegrityFix](https://github.com/chiteroman/PlayIntegrityFix)\n\n# 检测root隐藏软件\n\n[momo](https://t.me/magiskalpha/529)\n\n> 我感觉过一下这个就够基本的使用了，如果要玩游戏怕被封号需要过一下下面的\n\n[Ruru](https://github.com/byxiaorun/Ruru)\n\n[Native Test](https://github.com/Dr-TSNG/NativeDetector/releases/tag/Mean-Minotaur)\n\nhunter  https://www.123865.com/s/S110Vv-0zu3A\n\n# 其他模块\n\n[广告屏蔽模块](https://github.com/zjyzip/AdClose)\n\n[让澎湃再次伟大](https://github.com/ReChronoRain/HyperCeiler)\n\nMIUI主题破解 安装第三方主题\n\nhttps://github.com/taamarin/box_for_magisk 底层的代理，可以让热点、usb数据共享也使用代理\n\n> ```\n> level=fatal msg=\"Parse config error: rules[512] [GEOIP,CN,DIRECT] error: can't download MMDB: context deadline exceeded\"\n> ```\n>\n> 可以前往[该仓库](https://github.com/MetaCubeX/meta-rules-dat)下载 `geoip.metadb`，并将其上传到与 config.yaml 相同的目录内再重新运行容器即可\n>\n> 按照`/data/adb/box/clash/config.yaml`的格式填入连接、修改规则即可，在magisk中启动模块，代理就成功启动了\n>\n> 访问`http://127.0.0.1:9090/ui`即可管理后台，修改节点了\n\n# FL\n\n* 安装软件`Fake Host`、`Fake Location_1.2.1.8`、`某软件`\n\n* 安装模块`XccVip-1.23`和`隐藏应用列表HMA-V3.3`，其实也就是`apk`，`XccVip`安装后不会显示在桌面上\n\n* `lsp`中启用两个模块，`XccVip`勾选`fake host`和`fake location`\n\n* 重启\n\n* 隐藏应用列表->应用管理->`某软件`和Fake location启用隐藏\n\n  隐藏应用列表->模块管理->创建黑名单模板->不可见勾选Fake location->应用于`某软件`->写一个模板名\n\n* 启动Fake Host、Fake location（位置模拟/线路模拟）和`某软件`，完成！\n","tags":["小米root","Fake Location"],"categories":["记录"]},{"title":"一些视觉代码使用的记录","url":"/2024/08/05/26.vison_note/","content":"\n做了这么久的比赛，虽然已经离队了，不过还是总结一下与视觉联调的时候总结的一些小问题\n\n<!-- more -->\n\n# 前言\n\n此篇仅做记录，对视觉算法等等涉入尚欠，想必会有很多纰漏与错误。比赛中主要的任务就是识别圆与神经网络分类，故从这两个任务进行记录。\n\n> 感谢Sigmoid学弟的补充\n\n# 识别圆\n\n### 算法\n\n具体使用与调参我也不懂，只是近日看学弟的代码发现六七个参数就能有比较好的效果了，微做感叹。\n\n> 以下由Sigmoid所述\n\n主要使用的算法是霍夫变换, 不用自己手搓, OpenCV 有内置的 `cv2.HoughCircles`,   对识别效果影响比较大的是 `dp`、`param1`、`param2` 这三个参数, 具体的作用就不细说了, 展开说细节还挺多的, 推荐视觉组的队员看一下霍夫变换的具体技术细节(网上有很多这种文章), 对霍夫变换检测圆的调参会有很大的帮助。\n\n主要说一下在具体任务场景中调参的原则:\n\n1. 固定 dp, 个人经验一般先把 dp 固定为 1, 即原图输入\n\n2. 固定 param2, param2的范围一般在 50-100, 一般将其设置为中位值 75\n\n3. 调整 param1, 在 50-150 范围内调整 param1, 调的越低越容易检测出圆。\n4. 如果 param1 降到了 50 还没有识别出圆或者效果依然不理想, 降低 param2, 重复步骤 3\n5. 一般情况下把 param1 和 param2 调整好了之后的效果就非常理想了, 如果还不理想, 就降低 dp 重复重复步骤 2 和 3\n\n必须要注意的一个点是, 在使用`cv2.HoughCircles`时, 不要把 RGB 图转成的 灰度图直接作为 src 输入, 灰度图一定一定要经过滤波(我一般都是高斯滤波, 比较普适)！因为霍夫变换的原理中是要检测轮廓的, 比赛中地面铺的那种板子有很多小纹路, 板子与板子之间也有拼接的缝隙, 如果不经过滤波, 这些奇怪的轮廓不仅会影响圆的识别效果, 而且会增大巨多开销。  \n\n在我们组所参加的机器人比赛中, 霍夫变换检测圆基本已经能满足需求了, 并且它是一种传统的视觉算法, 开销相比神经网络小了很多, 所以在有限算力的平台上实现圆的识别一定要把霍夫变换检测圆作为首选来考虑, 不要为了追求更高的稳定性而去选择神经网络, 性价比不高。\n\n### 标定\n\n> 参考[官方教程](http://wiki.ros.org/camera_calibration/Tutorials/MonocularCalibration)，[补充](https://blog.csdn.net/heyijia0327/article/details/43538695)\n\n这主要是需要使用相机内参矩阵计算**圆心距离无人机中心水平坐标差**，不过说起来，其实每次标定计算内参的时候，浮动还挺大的，上下浮动几十吧，不清楚到底是什么问题，不过用起来还可以，挺好的。以前总以为越清晰越好，现在感觉，就咱这识别任务，480p足以，糊一点还免的高斯模糊了（不是）\n\n1.安装usb_cam包\n\n```\nsudo apt install ros-noetic-usb-cam\n```\n\n2.启动相机\n\n```\nroslaunch usb_cam usb_cam-test.launch\n```\n\n> 若是使用自己的笔记本（有摄像头的话），大概率需要修改`/dev/video0`为`/dev/video2`或者`/dev/video4`，把下面的内容写入`usb_cam.launch`后使用`roslaunch ./usb_cam.launch`启动即可，或者`sudo vim /opt/ros/noetic/share/usb_cam/launch/usb_cam-test.launch`直接修改原launch也可以\n>\n> ```\n> <launch>\n>   <node name=\"usb_cam\" pkg=\"usb_cam\" type=\"usb_cam_node\" output=\"screen\" >\n>     <param name=\"video_device\" value=\"/dev/video0\" />\n>     <param name=\"image_width\" value=\"640\" />\n>     <param name=\"image_height\" value=\"480\" />\n>     <param name=\"pixel_format\" value=\"yuyv\" />\n>     <param name=\"color_format\" value=\"yuv422p\" />\n>     <param name=\"camera_frame_id\" value=\"usb_cam\" />\n>     <param name=\"io_method\" value=\"mmap\"/>\n>   </node>\n>   <node name=\"image_view\" pkg=\"image_view\" type=\"image_view\" respawn=\"false\" output=\"screen\">\n>     <remap from=\"image\" to=\"/usb_cam/image_raw\"/>\n>     <param name=\"autosize\" value=\"true\" />\n>   </node>\n> </launch>\n> ```\n\n3.准备[标定板](https://wiki.ros.org/camera_calibration/Tutorials/MonocularCalibration?action=AttachFile&do=view&target=check-108.pdf)，我使用的是A4纸打印的，矩形的边长是0.0244m，所以是`--square 0.0244 `\n\n> 图片是9x7的格子，标定使用的是8x6个内角点，所以下面是`--size 8x6`\n\n 4.启动标定程序\n\n```'\nrosrun camera_calibration cameracalibrator.py --size 8x6 --square 0.0244 image:=/usb_cam/image_raw camera:=/usb_cam\n```\n\n静置相机，把标定板粘贴在硬纸板/硬书上（防止弯曲），左右（x）、上下（y）、前后（size）、旋转（skew），各个距离都完善后进度条都变绿时点击CALIBRATE即可得出相机内参。\n\n> 旋转需要有各个角度，俯仰、偏航的旋转，而非竖直旋转\n\n### 相机内参使用\n\n有一个坐标系的事情需要说明，相机中的坐标系是右x下y，比赛的无人机一般是把相机水平朝下放置，而ROS一般坐标系是前x左y上z，所以**视觉的-x才是策略里的y，-y才是策略里的x**，可能这么说有点绕，看看下面的代码会好理解的多。\n\n```python\n# 相机内参\ncx = ...\ncy = ...\nfx = ...\nfy = ...\n# 识别圆获得的像素坐标\npixel_x = ...\npixel_y = ...\n# 计算策略代码中需要的圆目标xy\ntarget_x = - (pixel_y - cy) / fy\ntarget_y = - (pixel_x - cx) / fx\n```\n\n策略获得target_x、target_y后再**乘以相机离地面的高度**即可计算出圆的相对水平距离\n\n# YOLO\n\n> 以下由Sigmoid所述\n\n虽然人工智能大赛每年要求分类的数据集一直在变(去年是`minist`, 今年是 `cifar100`), 这些标准数据集有一个共同的特点就是分辨率很低(`minist` 是28x28, `cifar100` 是32x32)。但在训练的时候不要一味的追求输入高分辨率(比如直接放大10倍), 你可能觉得图像分辨率高了信息就多, 但是这种做法的缺陷很大, 一是源数据集量很大, 模型体量不足以让你把这样大分辨率的数据集很好的拟合上去; 二是分辨率高了以后信息量确实是多了, 但是这会导致原来两个类别但是相似的两张图片使得模型更加难以区分, 效果适得其反。根据个人经验, 放大2倍或者直接不放大的效果应该是最好的。\n\n第二个需要注意的点是, 不要去数据集的 benchmark 上找 SOTA 来用, 据我尝试过的 `cifar100` SOTA的经验来看, 这些 SOTA 为了提高测试集的准确度用了很多 trick, 从而使得预测结果的置信度最高才 0.2几并且在实际的任务场景中模型效果非常非常不理想, 因此建议不要这样做。\n\n关于 YOLO, 听说现在都出到十几代了, 但是常用的几个版本是 v5 和 v8,  v8带来的 `ultralytics`极大地简化了 YOLO 的训练的训练和部署, 在模型框架里 v8 移除了 v5 中一些 “冗余” 的层, 之所以加引号, 因为我们也不好说这些被移除的层到底有没有用, 视觉组的队员还是要从 v5 开始训练部署一遍的。\n\n不得不说, 虽然 YOLO 并不是某些常用数据集的 SOTA, 但是它强大的泛化能力和简便操作使得我们今天依然将它作为比赛首选, 之前我还专门看了一下 YOLO 的数据增强的代码, 用了很多方法来增强泛化性, 使得训练出的模型在实际场景中效果表现很好。目前 v8 兼具目标检测、图像分类、图像分割等多种模型, 我们可以根据需要进行搭配或者选择。总结一句话, 不管是检测任务还是分类任务, 一定先用 YOLO 跑，YOLO 不行再寻找别的模型。\n\n关于 YOLO v8 的使用, 直接看[官网](https://docs.ultralytics.com/)就可以, 操作巨简便, 几行代码就能训练自己的数据集。\n\n> 以下由我所述\n\n使用神经网络时的问题在于，我们的上位机使用的是NUC，用cpu硬跑yolov5能跑到10帧多，但是由于ros callback的机制原因，你可能会发现画面有非常大的延迟，详见[此处](https://qllokirin.github.io/2023/06/09/17.callback/)\n\n### 方法一\n\n不优雅，但能用，将输入给yolo的数据控制在10Hz，因为计算一帧的时间小于0.1s，所以能比较实时的输出结果，至少没有大延迟。\n\n### 方法二\n\n使用`while not rospy.is_shutdown()`，目测rospy会自动开一个线程及时调用回调函数，不论while中运行的是什么，花费了多少时间，参照下面的写法即可\n\n```python\ndef imgmsg_to_cv2(img_msg):\n    # ros图像转cv图像\n    ...\n    # 获取图像和消息的时间戳\n    return image_opencv, img_msg.header.seq  \n\ndef task(img_origin):\n    # 输入图片，使用模型进行推理的代码放在此处\n    ...\n\nimg_ros_data = None\nseq_current = None\n# 这个回调函数会实时调用，来了一个消息就会调用，不会被主线程卡住，只负责更新图像变量\ndef image_callback(data):\n    global img_ros_data, seq_current\n    img_ros_data, seq_current = imgmsg_to_cv2(data)\n\nif __name__ == \"__main__\":\n    rospy.init_node('yolo_node', anonymous=True)\n    # YoloTypeAndCoordinate 是自定义消息\n    info_pub = rospy.Publisher('/yolo/detect', YoloTypeAndCoordinate, queue_size=1)\n    img_pub = rospy.Publisher('/yolo/detect_img', Image, queue_size=1)\n    rospy.Subscriber('/usb_cam/image_raw', Image, image_callback)\n\n    # 获取上一次的时间戳，当时间戳相同（没有新图像发布）时不推理（不发布结果消息）\n    seq_last_time = None\n    while not rospy.is_shutdown():\n        # img_ros_data和seq_current都不是None也就是最开始启动的时候没有图像消息时也不推理（不发布结果消息）\n        if (img_ros_data or seq_current) is not None and seq_current != seq_last_time:\n            seq_last_time = seq_current\n            task(img_ros_data)\n```\n\n> yolo训练过程相信视觉的朋友都会，但后续我打算补一个详细流程，方便我自己以后可能用（\n\n# 降低开销\n\n> 以下由Sigmoid所述\n\n在比赛中, 开销最大的就是视觉模块, 除了上面的降低帧率来达到图像的实时处理之外, 可以从根本上降低模型的推理时间或者优化传统视觉算法的开销来解决这个问题(虽然现在还是没有优化到这个程度)。\n\n### 传统视觉算法\n\n比赛代码传统视觉算法部分开销最大的就是霍夫圆检测的开销, 直接在这给出结论 `dp` 越高, 开销越小; param1 越高开销越小; param2 越高开销越小。 所以在调整霍夫圆的参数时, 要同时结合上面的5个原则和这里的结论。\n\n还有就是图像输入前的滤波处理, 这一部分也很重要, 之前做过一个实验, 没有滤波的时候检测圆比有滤波的时候慢了一倍。\n\n其实优化传统视觉算法的提升空间很小, 在这里提这个优化传统视觉算法的原因是, 在实际的视觉任务中, 会发现传统视觉开销和模型推理开销并不是独立作用叠加的。举个简单的例子, 单独测试传统视觉的开销是 0.06s 一帧, 单独测试模型推理开销是 0.10s 一帧, 但是把这两个模块集成起来你会发现可能会变成 0.80s 一帧, 个人感觉应该是产生了资源竞争(内存频繁的置换)导致了这种现象的出现。但是如果把传统视觉开销优化到 0.03s 一帧, 你会发现两个模块集成起来的开销就成了 0.13s 一帧 。\n\n在实际的任务中, 优化传统视觉算法有时候会带来意想不到的效果。\n\n### 神经网络模型\n\n这部分有很多学问, 最直接的就是优化模型网络结构, 减少参数量, 会显著提高推理速度。v8 的目标检测模型有 n/s/m/l, 模型复杂程度依次增大, 在我们比赛的任务中, 其实 n 和 s 就已经够用了。\n\n此外, 还有很多提高推理速度的方法, 比如 C++ 和 TensorRT 部署模型加速推理, 进行量化处理等等, 记得在先进视觉比赛用过 TensorRT 部署, 但是模型转化后的识别效果直接砍了一半, 也可能是部署做法上有些细节没做到位, 值得研究的内容。\n\n# 题外话\n\n### ros如何在a功能包中使用b功能包定义的数据类型\n\n比如视觉自定义了一个消息类型传输结果内容，策略如何导入这个消息，以前一直在用`../../`什么的，当文件夹位置变化时需要修改，比较麻烦，建议用下面的方法，还可以防止`catkin_make`多线程编译报错\n\n1.在自己的功能包的 `CMakeLists.txt`添加对b包的依赖\n\n```\nfind_package(catkin REQUIRED COMPONENTS\n  roscpp\n  rospy\n  std_msgs\n  b_package\n)\n\n```\n\n2.在 `package.xml` 文件中添加对 b包的依赖。\n\n```\n<depend>b_package</depend>\n```\n\n3.导入头文件\n\n```c++\n#include <b_package/YourMessageType.h>\n```\n\n```python\nfrom b_package.msg import YourMessageType\n```\n\n","tags":["视觉"],"categories":["记录"]},{"title":"N100双网口小主机使用docker版openwrt做主路由（PPPoE拨号）超详细！！！！","url":"/2024/04/11/25.N100_op/","content":"\n踩了好多好多大坑，感觉用N100在docker中使用openwrt并且WAN口进行PPPoE拨号的教程不是太多，给我折磨完了\n\n<!-- more -->\n\n# 前言\n\n最近入手了一个 699 双网口的 N100 小主机，自己有内存和硬盘，装上就开始酷酷捯饬，装上 Ubuntu22.04，双网口的第一步当然是 openwrt，启动！\n\n相同情况的教程的确有点少，酷酷踩坑，感觉可能是没人用 docker openwrt 当主路由，而且 WAN 口还是 PPPoE 拨号\n\n先罗列一下参考过的教程\n\n**能用，好用的教程**\n\n- [x] https://rupu.net/archives/docker-openwrt\n\n  > 神中神，主路由且双网卡，不同之处是我是PPPoE拨号上网且他的lan口是**无线网卡**（这个很重要，有个大坑）\n\n- [x] https://blog.csdn.net/qq_38251691/article/details/128356619\n\n  > 神，**一定需要手动设置 ip 地址和网关**，参考一些教程会设置为.x.2害死我了，第一次连接IP、子网掩码、网关的静态设置非常重要，因为镜像的LAN口默认不会开启DHCP，需要手动设置静态IP进入openwrt后台后开启DHCP\n\n- [x] https://blog.csdn.net/gongchenyu/article/details/134724333\n\n  > docker旁路由，有参考价值，有宿主机通信\n\n- [x] https://rehtt.com/index.php/archives/236/\n\n  > 宿主机通信详解，非常的棒\n\n- [x] https://post.smzdm.com/p/awzodmpp/\n\n  > IPV6设置，我使用的是[ImmortalWrt](https://github.com/SuLingGG/OpenWrt-Rpi)，WAN6选设备的时候没有@WAN或者pppoe-WAN，但其实可以直接在文件里面改\n  \n- [x] https://github.com/lisaac/blog/issues/4#issuecomment-603069862\n\n  > 三网口（卡）及以上需要注意顺序\n\n**与我情况不同**\n\n- [ ] https://zhwebsite.com/2024/01/28/%E5%9F%BA%E4%BA%8Edebian-12%EF%BC%8C%E5%88%A9%E7%94%A8docker%E7%9A%84openwrt%E6%90%AD%E5%BB%BA/\n\n  > 是N100双网口但是指令有问题但未提及宿主机通信问题，且网关的指令都会报错（也可能是我Ubuntu22.04要求必须.x.0）\n  \n  旁路由：\n  \n  - [ ] https://zy.hn/2023/02/23/deploy-openwrt-with-docker/\n  \n    > 经测试，纯网卡似乎不能做旁路由，纯网线是可以的，也可能是我操作有问题\n  \n  - [ ] https://openwrt.ai/docker%E7%89%88openwrt%E6%97%81%E8%B7%AF%E7%94%B1%E5%AE%89%E8%A3%85%E8%AE%BE%E7%BD%AE%E6%95%99%E7%A8%8B/\n  \n    （虽然这个网站的镜像构建很好用，但是这篇教程指令都有问题）\n\n# 镜像选择\n\n**1.下载镜像后导入**\n\n官网：https://archive.openwrt.org/releases/23.05.3/targets/\n\n资源站：https://github.com/kiddin9/openwrt-packages\n\n资源站：https://openwrt.ai/?target=x86%2F64&id=generic（最下面）\n\n> 选`xxx-rootfs.tar.gz`，是可解压固件,一般用于Docker\n>\n> ```\n> gunzip xxx-rootfs.tar.gz\n> docker xxx-rootfs.tar openwrt:rootfs\n> ```\n>\n> 如 https://archive.openwrt.org/releases/23.05.3/targets/x86/64/openwrt-23.05.3-x86-64-rootfs.tar.gz\n\n**2.docker镜像拉取**\n\n`docker pull sulinggg/openwrt:x86_64`，这个镜像虽然不维护了但是还是很棒，预装了很多插件，本教程使用这个进行演示\n\n**3.自己编译**\n\n# OP 启动！\n\n### 一、开启网口混杂模式\n\n**1.查看网口名字**\n\n```\n➜  ~ ifconfig\nenp2s0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet6 fe80::c07f:75dc:901a:49b6  prefixlen 64  scopeid 0x20<link>\n        ether 00:e0:4c:08:6a:4f  txqueuelen 1000  (以太网)\n        RX packets 0  bytes 0 (0.0 B)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 38  bytes 6249 (6.2 KB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n        device memory 0x80c00000-80cfffff  \n\nenp4s0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet6 fe80::6bb:2302:767e:7b3d  prefixlen 64  scopeid 0x20<link>\n        ether 00:e0:4c:08:6a:50  txqueuelen 1000  (以太网)\n        RX packets 0  bytes 0 (0.0 B)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 35  bytes 5650 (5.6 KB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n        device memory 0x80900000-809fffff  \n\nlo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        inet6 ::1  prefixlen 128  scopeid 0x10<host>\n        loop  txqueuelen 1000  (本地环回)\n        RX packets 474  bytes 36598 (36.5 KB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 474  bytes 36598 (36.5 KB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nwlp1s0: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500\n        ether f8:89:d2:69:42:df  txqueuelen 1000  (以太网)\n        RX packets 0  bytes 0 (0.0 B)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 0  bytes 0 (0.0 B)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n```\n\n如上，我的网口是`enp2s0`和`enp4s0`，`wlp1s0`是无线网卡，先不管\n\n我这里选择`enp2s0`是LAN口负责本地分派IP，`enp4s0`为WAN口负责拨号上网\n\n**2.开启网口混杂**\n\n```\nsudo ip link set enp4s0 promisc on\nsudo ip link set enp2s0 promisc on\n```\n\n然后上面的`ifconfig`输出后面会新增`PROMISC`字段，就是开启成功\n\n```\nenp2s0: flags=4419<UP,BROADCAST,RUNNING,PROMISC,MULTICAST>  mtu 1500\nenp4s0: flags=4419<UP,BROADCAST,RUNNING,PROMISC,MULTICAST>  mtu 1500\n```\n\n**3.开机自自动**\n\n一重启网口混杂就会消失，所以需要写进开机脚本，这里我用`systemctl`实现\n\n先写脚本，`vim /home/{your_name}/sh/network_op.sh`，写入下面的内容，**your_name**替换成你的\n\n```\nsudo ip link set enp4s0 promisc on\nsudo ip link set enp2s0 promisc on\n```\n\n再新建system，`sudo vim /etc/systemd/system/network_op.service`，写入下面的内容，**your_name**替换成你的\n\n```\n[Unit]\nDescription=Enable op network\n\n[Service]\nType=oneshot\nExecStart=/usr/bin/sh /home/{your_name}/sh/network_op.sh\nUser=root\nGroup=root\n\n[Install]\nWantedBy=multi-user.target\n```\n\n运行一次服务并设置开启自启动\n\n```\nsudo systemctl start network_op\nsudo systemctl enable network_op\n```\n\n### 二、创建网络并启动OP\n\n这里我们使用 docker 的 macvlan，从物理网口虚拟出一个新的网口，并且挂载进 openwrt 镜像中\n\n```\n# 创建 LAN 口虚拟网络，指定网段为 100.x，网关是 100.1，设备使用 enp2s0，名字叫 op_lan\n# （如果要修改名字请看完上面的《三网口（卡）及以上需要注意顺序》）\ndocker network create -d macvlan --subnet=192.168.100.0/24 --gateway=192.168.100.1 -o parent=enp2s0 op_lan\n# 创建 WAN 口网络，我是 PPPoE 拨号所以网关网段什么的都不指定了\ndocker network create -d macvlan -o parent=enp4s0 op_wan\n# 启动 docker openwrt，我使用的是 sulinggg/openwrt:x86_64 镜像，设置自启动，名字叫 openwrt，把 op_lan 连接进去\n# 有些教程会在这里加上 --ip 直接设置成 .100.2，但我感觉 op 就是网关，所以这里不指定，直接在 op 里面设置，占住 100.1的 ip\ndocker run --restart always --name openwrt -d --network op_lan --privileged sulinggg/openwrt:x86_64 /sbin/init\n# 再把 op_wan 也连接进去\ndocker network connect op_wan openwrt\n```\n\n实际过程\n\n```\n(base) ➜  python_and_sh docker network create -d macvlan --subnet=192.168.100.0/24 --gateway=192.168.100.1 -o parent=enp2s0 op_lan\ne5c68630a0198f2985a7313c68dbcae0165a60b867e8efa6b9694fb39cc42ed2\n(base) ➜  python_and_sh docker network create -d macvlan -o parent=enp4s0 op_wan\nd284f0d8cde3ac57faae92ab2f2739b4aace7064f7f5bf0556077e51785969e2\n(base) ➜  python_and_sh docker run --restart always --name openwrt -d --network op_lan --privileged sulinggg/openwrt:x86_64 /sbin/init\nbbe19438aa00be18e2feb1d38ca860a7eeb42e90b756ebaf393f4ce11c7ceac6\n(base) ➜  python_and_sh docker network connect op_wan openwrt\n(base) ➜  python_and_sh docker network ls\nNETWORK ID     NAME      DRIVER    SCOPE\n97dae32aa936   bridge    bridge    local\n5fca31148366   host      host      local\n07b5461851d7   none      null      local\ne5c68630a019   op_lan    macvlan   local\nd284f0d8cde3   op_wan    macvlan   local\n(base) ➜  python_and_sh docker ps -a     \nCONTAINER ID   IMAGE                     COMMAND        CREATED          STATUS          PORTS     NAMES\nbbe19438aa00   sulinggg/openwrt:x86_64   \"/sbin/init\"   13 seconds ago   Up 12 seconds             openwrt\n```\n\n### 三、配置LAN&WAN网络\n\n接下来要进入容器内修改配置\n\n```\n# 进入openwrt镜像内部\ndocker exec -it openwrt bash\nvim /etc/config/network\n```\n\n把 lan 改为下面的参数，删掉多余的字段\n\n```\nconfig interface 'lan'\n        option type 'bridge'\n        option ifname 'eth0'\n        option proto 'static'\n        option netmask '255.255.255.0'\n        option ip6assign '60'\n        option ipaddr '192.168.100.1'\n```\n\n重启网络\n\n```\n/etc/init.d/network restart\n```\n\n**！！！！！然后第一个小坑，固件默认 lan 口不开启 DHCP，所以插上 lan 口需要自行设定 IP 和网关！！！！！**\n\n![1.png](https://s2.loli.net/2024/04/11/ovJMdKpPZEuaz5x.png)\n\n然后浏览器输入`192.168.100.1`即可进入 openwrt 的后台管理页面\n\n> 这么说起来我当时直接输了我自己密码就登进去了，难道他是自动把第一次输入的密码当密码？如果没有的话就试试root、pass、password什么的\n\n我们先把 **lan 口 DHCP 打开**，网络->接口->lan->修改->最下面->忽略此接口->`取消勾选`，高级设置->`强制`也勾选上，`保存&应用`\n\n`网络`->DHCP/DNS->基本设置->取消勾选`重绑定保护`，**不然一些域名解析的结构是`192.x`和`10.x`的保留地址不会被返回！！！！！！**`仅本地服务业`也可以关了\n\n再**配置 wan 口**，添加新接口\n\n![2.png](https://s2.loli.net/2024/04/11/7lruCSX6k3WsJKM.png)\n\n填入账号和密码 **！！！！在 wan 的防火墙设置 选中 wan！！！！**，不然一切端口转发都会失效\n\n> 有时候会自动选中 但有时候不会\n\n如果卡住可以重启docker，`docker restart openwrt`\n\n这时候 wan 口可以正常拨号获得 IP，LAN 口也会自动分配 ip 了，但是，**宿主机是无法使用网络**，我们需要给宿主机也分配一个`192.168.100.x`的地址\n\n### 四、宿主机使用 openwrt 的网络\n\n这里我们使用 ip 指令给网卡创建 macvlan，因为 macvlan 的安全机制，宿主机与容器内不能通过 macvlan 数据互通，但是 macvlan 之间可以互通\n\n```\n# 先创建一个名叫 me_to_op 的 macvlan，使用设备 enp2s0\nsudo ip link add me_to_op link enp2s0 type macvlan mode bridge\n# 把宿主机的 ip 设置为 192.168.100.100\nsudo ip addr add 192.168.100.100 dev me_to_op\n# 启动 me_to_op\nsudo ip link set me_to_op up\n# 添加路由\nsudo ip route add 192.168.100.1 dev me_to_op\n# 修改默认路由\nsudo route add default gw 192.168.100.1 me_to_op\n```\n\n配置完成之后就可以互相 ping\n\n**宿主机到 openwrt**：`ping 192.168.100.1`\n\n**openwrt 到宿主机**：`docker exec -it openwrt bash -c \"ping 192.168.100.100 -c 3\"`\n\n这时候路由正确（`route -n`）但是**域名解析不对**，能 ping ip 但是不能上网，我们接着配置 DNS\n\n```\nsudo sh -c 'echo \"nameserver 192.168.100.1\" > /etc/resolv.conf'\n```\n\n> 改` /etc/systemd/resolved.conf`的 dns 字段是更加规范的操作，但是怕以后换网络环境忘记了，所以直接改`/etc/resolv.conf`\n\n宿主机联网测试：`curl baidu.com`\n\n```\n(base) ➜  ~ curl www.baidu.com\n<!DOCTYPE html>\n<!--STATUS OK--><html> <head><meta http-equiv=content-type content=text/html;charset=utf-8><meta http-equiv=X-UA-Compatible content=IE=Edge><meta content=always name=referrer><link rel=stylesheet type=text/css href=http://........................\n```\n\n为了使上面的修改重启后一直生效，修改`/home/{your_name}/sh/network_op.sh`文件为如下内容\n\n```\nsudo ip link set enp4s0 promisc on\nsudo ip link set enp2s0 promisc on\n\nsudo ip link add me_to_op link enp2s0 type macvlan mode bridge\nsudo ip addr add 192.168.100.100 dev me_to_op\nsudo ip link set me_to_op up\nsudo ip route add 192.168.100.1 dev me_to_op\nsudo route add default gw 192.168.100.1 me_to_op\n\nsudo sh -c 'echo \"nameserver 192.168.100.1\" > /etc/resolv.conf'\n```\n\n**Tips：两个怪问题**\n\n* 1.**LAN 口不插东西宿主机就 ping 不通 192.168.100.1**，就是这么的神奇，必须得要 LAN 口有一个设备，不然就是 ping 不通，我的理解是 LAN 口不插东西就没有被激活，所以上面设置的 macvlan 没有生效，比如接个电脑是可以的，接个交换机（交换机不接其他东西）也是可以的，只要 LAN 口灯亮着就是可以的，没亮就是不行的\n\n  > 其实还有个方案是不用`enp2s0`而用`wlp1s0`，也就是用网卡开一个macvlan，然后就不用一直插一个东西了\n  >\n  > ```\n  > sudo ip link set enp4s0 promisc on\n  > sudo ip link set enp2s0 promisc on\n  > sudo ip link set wlp1s0 promisc on\n  > sleep 10\n  > \n  > sudo ip link del me_to_op\n  > sudo ip link add me_to_op link wlp1s0 type macvlan mode bridge\n  > sudo ip addr add 192.168.200.200 dev me_to_op\n  > sudo ip link set me_to_op up\n  > sudo ip route add 192.168.200.1 dev me_to_op\n  > sudo route add default gw 192.168.200.1 me_to_op\n  > sudo sh -c 'echo \"nameserver 192.168.200.1\" > /etc/resolv.conf'\n  > ```\n  >\n  > 这里加了`sleep 10`是因为不知道为啥会设置不成功，加上就好了\n\n* 2.**LAN 口下的网络不能正常访问域名解析到 WAN 口 IP 上的内容**，具体点来说是，我的 openwrt 的 80 端口转发到了宿主机`192.168.100.100`的 80 上，然后由 nginx 反代，`op.xx.xx`代理到 op 的管理页面，`files.xx.xx`代理到 GoWebDav 上，跟 WAN 口同网段的`10.x.x.x.`的设备可以正常使用，但是 LAN 口下的设备用域名不能访问，而直接端口 + IP 是可以的，需要做如下改动（是与桥接网络过滤器有关的内容，具体原因不是很清楚）\n\n  ```\n  1.ssh连接openwrt系统后，编辑/etc/sysctl.d/11-br-netfilter.conf文件。\n  net.bridge.bridge-nf-call-arptables=0\n  net.bridge.bridge-nf-call-ip6tables=0\n  net.bridge.bridge-nf-call-iptables=0\n  确认后面的值是0，如果不是，需要改为0\n  2.编辑/etc/sysctl.conf文件。文件内容可能是空的，把上面的内容复制进sysctl.conf文件，保存退出。\n  3.ssh内输入sysctl -p命令，查看输出结果是不是上面提到的那三行内容。\n  4.重启\n  ```\n\n> 参考教程：https://www.right.com.cn/forum/forum.php?mod=redirect&goto=findpost&ptid=8192269&pid=16637078\n>\n> 部分教程提及了 80 端口转发的`NAT 环回`，**请勿关闭**\n>\n> ```\n> NAT环回（NAT loopback）是指在网络中使用网络地址转换（NAT）时，当内部主机尝试通过其外部公共IP地址访问在同一内部网络中的另一台主机时发生的情况。简单来说，当内部主机试图通过公共IP地址访问自己所在的内部网络中的另一台主机时，数据包被NAT路由器接收并重新发送给内部网络中的相应主机，这种情况就被称为NAT环回。这种行为可能会影响网络性能和行为，因此需要在NAT路由器上进行适当的配置来处理这种情况。\n> ```\n>\n> 一旦关闭`NAT 环回`，所有的访问到 WAN 的 IP 会直接打到 op 后台，不会被端口转发，宿主机上的 nginx 将无法生效\n\n### 五、插件&其他一些使用\n\n---\n\n#### 系统\n\n**1.管理权**\n\n`Dropbear 实例`按需修改\n\n**2.挂载点&启动项**\n\n我这里需要持久化挂载一块硬盘到 openwrt 里面，试了下挂载点的操作不生效，我就直接把`mount /dev/sda1 /mnt/sda1`写到启动项最下面的本地启动脚本里面了\n\n---\n\n#### 服务\n\n**1.微信推送**\n\n微信pushplus不限制条数，好用。但在 op 的实际推送中感觉用处不大，IPV4 和 IPV6 变动可以用 DDNS解决。\n\n**2.DDNS/动态DNS**\n\n修改->启用，然后按需修改即可，我这里 IPV4 来源选的是`接口`->`pppoe-wan`，`查询主机名`和`域名`都直接填`xxx.xxx.xxx`就行，成功配置后`上次更新` `下次更新`那会变成两行时间，出现问题可以查看日志\n\n> 如果你的域名是`192.x`或`10.x`等保留地址，全局设置->`允许非公网 IP`**一定要勾选上！！！！！！！！**\n\n---\n\n####  NAS\n\n**1.GoWebDav**\n\n简单使用，点击即用，但是有个开关叫`只读模式`，但是我没发现应该怎么往上上传😭\n\n**2.网络共享**\n\nSamba，好用，踩了点小坑，**如果要在 WAN 口同网段下使用需要把 445 和 139 端口转发到内部 192.168.100.1 的 445 和 139**，[排错参考教程](https://www.cnblogs.com/chentiao/p/16696051.html)\n\n先进行命令行操作：\n\n```\n# 更新源\nopkg update\n# 安装软件\nopkg install shadow-common\nopkg install shadow-useradd\n# 添加名叫smbkirin的用户\nuseradd smbkirin\n# 为smbkirin设置密码\npasswd smbkirin\n# 添加smbkirin到Samba中\nsmbpasswd -a smbkirin\n# 重启Samba\nservice samba restart\n```\n\n然后在网页控制界面中添加文件夹，名称随便取，路径看你定，用户用上面的，新文件0666（可读可写不可执行），目录0777\n\nWindows 下载资源管理器输入`\\\\{IP}`即可访问，可以映射到网络驱动器方便使用\n\n---\n\n#### 其他的\n\n**1.使用IPV6**\n\n> 如果你的网络不发放 IPV6，改了也没有的\n\n在 openwrt 中安装组件\n\n```\nopkg update\nopkg install ipv6helper\n```\n\n修改`vim /etc/config/network`追加如下内容\n\n```\nconfig interface 'wan6'\n        option proto 'dhcpv6'\n        option ifname 'pppoe-wan'\n        option reqaddress 'try'\n        option reqprefix 'auto'\n```\n\n\n\n详细解释 ipv6：https://post.smzdm.com/p/awzodmpp/\n\n> 如果要实现 ipv6 转发到 ipv4 端口，socat软件包能直接在`软件包`里面点一下安装，[socat 教程](https://zhuanlan.zhihu.com/p/559034124)\n>\n> 如果要监听 80 和 443 端口，因为被`uhttpd`占住了所以需要改一下设置，让`uhttpd`不监听 IPV6 地址\n>\n> ```\n> # 查看uhttp监听情况\n> netstat -tlnp | grep uhttpd\n> # 修改配置，注释掉ipv6的监听\n> vi /etc/config/uhttpd\n> # 重启uhttpd\n> /etc/init.d/uhttpd restart\n> # 再次查看\n> netstat -tlnp | grep uhttpd\n> ```\n>\n> 如果要在 LAN 网络下使用 IPV6 域名解析，`网络`->`DHCP/DNS`->`高级设置`->`禁止解析 IPV6 DNS 记录`\n>\n> 测试端口通断`nmap -6 {IPV6 地址} -p 80,4438080,20000,30004 -Pn`\n>\n> clash 开着会影响 ipv6 地址的访问，无敌了，后面发现原因是会域名代理，如果你买的机场的这个节点有 IPV6，甚至可以用代理脸上，即使你自己没有 IPV6 网络\n>\n> 不知道为啥我的 IPV6 防火墙没生效，可以直接访问内网的设备，发现 IPV4 也是一样的，防火墙没有阻断，有点奇怪，[这个教程](https://zhuanlan.zhihu.com/p/620831429)有 nmap 使用方法，哎不管了，开就开吧\n\n**2.加入无线网卡**\n\n> 题外话一句，我买的 N100 自带 AX101 网卡，是 WiFi6 但是很垃圾 ，最重要的是官方没有适配驱动，在 Ubuntu22.04 系统上开机即可使用，但是带宽甚至跑不满百兆，个人猜测是识别成了其他网卡能用但是调度不好，跑不满千兆也能理解，但是跑不满百兆就有点离谱了。\n>\n> 最后从室友的泡水机上取了个 MT7921，无线发射带宽实测刚好 100M，能用还行\n\n有尝试使用 macvlan 等操作挂进 openwrt，不过想了想好像用处不大，最终的方法是直接开一个热点，把`192.168.100.100`获得的网络共享出去\n\n```\n# 使用nmcli启用WiFi\nsudo nmcli device wifi hotspot ifname {网卡名称，如wlp1s0} con-name {在nm中的名字} ssid {WiFi名字} password {密码}\n# 如下\n# sudo nmcli device wifi hotspot ifname wlp1s0 con-name nmcli-wifi ssid n100-wifi password 123456789\n```\n\n> 也是重启会失效，所以加入之前写的开机脚本里\n\n**最终的脚本内容**，为了以防万一又加入了两句删除指令`sudo ip link del me_to_op`  和 `nmcli connection delete nmcli-wifi`\n\n```\nsudo ip link set enp4s0 promisc on\nsudo ip link set enp2s0 promisc on\n\nsudo ip link del me_to_op\nsudo ip link add me_to_op link enp2s0 type macvlan mode bridge\nsudo ip addr add 192.168.100.100 dev me_to_op\nsudo ip link set me_to_op up\nsudo ip route add 192.168.100.1 dev me_to_op\nsudo route add default gw 192.168.100.1 me_to_op\n\nsudo sh -c 'echo \"nameserver 192.168.100.1\" > /etc/resolv.conf'\n\nsudo nmcli connection delete nmcli-wifi\nsudo nmcli device wifi hotspot ifname wlp1s0 con-name nmcli-wifi ssid n100-wifi password 123456789\n```\n\n因为使用的是热点，所以`ifconfig`中无线会变成一个`10.x`的网段，链接上WiFi的设备也会获得`10.x`的网段，不过跟我的 WAN 口地址不冲突，所以我也就不管了，应也该可以改网段的。**（后记：这样似乎能连上但不能上网，我已经换成下面的方式了）**\n\n> **如果要把 WiFi 挂进 openwrt 而非上面那样，则需操作如下**\n>\n> **先按上面的方法把 WiFi 打开后再使用下面的操作**\n>\n> ```\n> docker network create -d macvlan --subnet=192.168.200.0/24 --gateway=192.168.200.1 -o parent=wlp1s0 op_wifi\n> docker network connect op_wifi openwrt\n> ```\n>\n> 修改`/etc/config/network`\n>\n> ```\n> config interface 'lanwifi'\n>      option type 'bridge'\n>      option ifname 'eth2'\n>      option proto 'static'\n>      option netmask '255.255.255.0'\n>      option ip6assign '60'\n>      option ipaddr '192.168.200.1'\n> ```\n>\n> 同样设置防火墙到 LAN\n>\n> 似乎这样做链接上 WIFI 的设备先会得到`10.x`的 IP，然后变成一个`192.168.200.x`的 IP，我感觉应该找一找 WiFi 热点能发送但是不分配 IP 的方案，然后直接让 op 来发 IP，跟 LAN 就一样的了，而且这样就不会像 LAN 一样还的插个东西才能工作。或许还可以考虑一下都分进 100 网段里面，两个 DHCP 服务器各发各的，或许也不会冲突？\n\n# 后记\n\n从购入到今天刚好十天，终于捯饬的差不多了，爽！从昨天开始狂写 4K 字的教程，必须狠狠地记录！我终将成为 op 高手！\n\n以及感谢 [zzsqwq](https://blog.zzsqwq.cn/) 的分析排错，神！还有 KirCute 的一问：“这灯怎么没亮”，从而想到 LAN 口不插东西就不工作，无敌！\n\n> 最后看到这个视频[【正片】面对校园网的多设备检测，「我」的解决方案是——](https://www.bilibili.com/video/BV1yr4meeENt/) 真的很强啊\n","tags":["openwrt"],"categories":["教程"]},{"title":"gitea+Drone CI实现hexo博客自动部署","url":"/2024/03/22/24.gitea+DroneCI/","content":"\n基地的git仓库发生了一些变动，只有一个gitea仓库留下来了，博客仓库还在，故此番折腾完成从仓库自动更新博客网页\n\n<!-- more -->\n\n请自行安装`docker`与`docker-compose`，遇上了几个大坑，费我一天时间，气死了气死了气死了\n\n# 一、部署gitea\n\n### 1.启用ssh支持\n\n你可以参看[官方教程SSH 容器直通](https://docs.gitea.cn/installation/install-with-docker/#ssh-%E5%AE%B9%E5%99%A8%E7%9B%B4%E9%80%9A)或者直接使用下面的指令\n\n* 创建一个名叫`git`的账户\n\n  ```\n  sudo adduser git\n  ```\n\n* 查看`USER_UID`和`USER_GID`的值\n\n  ```\n  id git\n  ```\n\n* 创建 SSH 密钥对\n\n  ```\n  sudo -u git ssh-keygen -t rsa -b 4096 -C \"Gitea Host Key\"\n  ```\n\n* 打开`/usr/local/bin/gitea`写入以下内容  `sudo vim /usr/local/bin/gitea`\n\n  ```\n  ssh -p 2222 -o StrictHostKeyChecking=no git@127.0.0.1 \"SSH_ORIGINAL_COMMAND=\\\"$SSH_ORIGINAL_COMMAND\\\" $0 $@\"\n  ```\n\n* 添加权限\n\n  ```\n  sudo chmod +x /usr/local/bin/gitea\n  ```\n\n* `sudo -i`进入管理员输入下面的指令\n\n  ```\n  echo \"$(cat /home/git/.ssh/id_rsa.pub)\" >> /home/git/.ssh/authorized_keys\n  ```\n\n  `ctrl`+`D`退出管理员模式\n\n### 2.docker 启动\n\n`docker-compose.yml`文件\n\n* `USER_UID/USER_GID`按上面查询的修改\n\n* 注意`./gitea`是放置gitea数据文件的地方，如果基地有遗传数据，修改路径即可\n\n```\nversion: \"3\"\n\nnetworks:\n  gitea:\n    external: false\n\nservices:\n   server:\n    image: gitea/gitea:latest\n    container_name: gitea\n    environment:\n      - USER_UID=1001  # 这是git用户的uid，详见https://docs.gitea.cn/installation/install-with-docker/#ssh-%E5%AE%B9%E5%99%A8%E7%9B%B4%E9%80%9A\n      - USER_GID=1001  # 这是git用户组的gid\n    restart: always\n    networks:\n      - gitea\n    volumes:\n      - ./gitea:/data\n      - /home/git/.ssh/:/data/git/.ssh\n      - /etc/timezone:/etc/timezone:ro\n      - /etc/localtime:/etc/localtime:ro\n    ports:\n      - \"8080:3000\"\n      - \"127.0.0.1:2222:22\"\n```\n\n启动docker\n\n```\ndocker-compose up -d\n```\n\n> 需要用ngix反代域名到8080端口\n\n### 3.修改参数\n\n配置文件在`/gitea/conf/app.ini`里面加入\n\n```\n[webhook]\nALLOWED_HOST_LIST = *\n```\n\n`[sever]`字段中含有域名的填写，如果后续有域名一直对不上的情况，请检查一下\n\n# 二、启动Drone CI\n\n### 1.在gitea中获得参数\n\n像如下生成ID和密钥\n\n![drone.png](https://s2.loli.net/2024/03/24/npxmqocueVUKIWk.png)\n\n生成会得到ID和密钥\n\nID就是`DRONE_GITEA_CLIENT_ID`\n\n密钥是`DRONE_GITEA_CLIENT_SECRET`，后面会用\n\nLinux下使用`openssl rand -hex 16`可获得一个32位的token，就是`DRONE_RPC_SECRET`\n\n### 2.启动Drone\n\n```\ndocker run \\\n  --volume=/var/lib/drone:/data \\\n  --env=DRONE_GITEA_SERVER={你的gitea地址，如https://git.gitea.cn} \\\n  --env=DRONE_GITEA_CLIENT_ID={上面生成的ID} \\\n  --env=DRONE_GITEA_CLIENT_SECRET={上面生成的密钥} \\\n  --env=DRONE_RPC_SECRET={上面生成的32位token} \\\n  --env=DRONE_SERVER_HOST={drone的地址，如drone.drone.cn} \\\n  --env=DRONE_SERVER_PROTO={协议，如https} \\\n  --env=DRONE_GIT_ALWAYS_AUTH=true \\\n  --publish=6080:80 \\\n  --publish=6443:443 \\\n  --restart=always \\\n  --detach=true \\\n  --name=drone \\\n  drone/drone:2\n```\n\n> **所有字段不需要引号，直接写**\n>\n> 如果出现了什么错误需要删除重启，建议`sudo rm -rf /var/lib/drone `清一下之前产生的东西\n>\n> 需要用ngix反代域名到6080端口，用HTTPS也是6080端口\n\n### 3.启动drone-runner\n\n```\ndocker run -d \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -e DRONE_RPC_PROTO={协议，如https} \\\n  -e DRONE_RPC_HOST={drone的地址，如drone.drone.cn} \\\n  -e DRONE_RPC_SECRET={上面生成的32位token} \\\n  -e DRONE_RUNNER_CAPACITY=2 \\\n  -e DRONE_RUNNER_NAME=blog_auto \\\n  -p 6030:3000 \\\n  --restart always \\\n  --name runner \\\n  drone/drone-runner-docker:1\n```\n\n> 6030端口可以随便改\n\n查看日志，正常运行\n\n```\n ➜  ~ docker logs runner   \ntime=\"2024-03-22T11:17:25Z\" level=info msg=\"starting the server\" addr=\":3000\"\ntime=\"2024-03-22T11:17:25Z\" level=info msg=\"successfully pinged the remote server\"\ntime=\"2024-03-22T11:17:25Z\" level=info msg=\"polling the remote server\" arch=amd64 capacity=2 endpoint=\"https://drone.xxxxx.cn\" kind=pipeline os=linux type=docker\n```\n\n### 4.访问Drone\n\n访问`{drone的地址，如drone.drone.cn}`，会自动跳转到gitea进行鉴权，点击红色按钮授权即可\n\n选择你的仓库点击`ACTIVATE REPOSITORY`即启动了工作流\n\n### 5.编写脚本文件\n\n在HEXO博客仓库根目录下提交`.drone.yml`文件，内容如下\n\n```\nkind: pipeline\ntype: docker\nname: default\n\nsteps:\n- name: Hexo Build\n  image: node:12-alpine\n  commands:\n  - npm config set registry https://registry.npmmirror.com\n  - npm install\n  - npm run build\n\n- name: SCP File Transfer\n  image: appleboy/drone-scp\n  settings:\n    target: /home/blog/blog/\n    source: ./public\n    host: \n      from_secret: ssh_host\n    port: \n      from_secret: ssh_port\n    username: \n      from_secret: ssh_username\n    password:\n      from_secret: ssh_password\n    rm: true\n  when:\n    branch:\n    - master\n    event:\n      exclude:\n      - pull_request\n  \ntrigger:\n  event:\n  - push\n```\n\ntarget修改为服务器上的某一文件夹，ngix反代到博客网址即可\n\n### 6.返回Drone配置参数\n\n博客仓库->Settings->Secrets->New secret，勾选`Allow Pull Repuest`\n\n配置`ssh_host`、`ssh_port`、`ssh_username`、`ssh_password`四个参数\n\n**现在，当有推送时会编译博客，当pr成功时会将博客内容复制到目标文件夹，ngix反代完成实时更新**\n\n> 第一次点new build是会没有反应的，第一次启用后需要在仓库中添加`.drone.yml`后用个push，让自动完成更新一次\n\n点击右上角new build可以测试\n\n# 三、使用OwnCloud\n\n> 顺便搭了个校园网局域网云盘，这玩意儿有点小坑，权限问题\n\n这里我需要把一个机械硬盘持久化挂载在在某一目录并让 owncloud 使用\n\n* `sudo vim /etc/fstab`追加如下内容让硬盘挂载持久化\n\n  ```\n  UUID=7E524C65524C23ED /home/v5/disk_hdd ntfs defaults,utf8,uid=33,gid=33,dmask=007,fmask=007  0 2\n  ```\n\n  * `/home/v5/disk_hdd`：修改为你想挂载的路径\n  * `33`：修改为`id www-data`返回的值\n  * `007`：意味770，只允许`www-data`用户访问，不让其他用户访问（设置为770是他的要求，试了个网上的参数改为false也没作用只好按他说的做）\n  * 用`ll`和`df -h`可以查看权限和挂载结果\n\n* 启动docker\n\n  ```\n  docker run -p 7070:80 -d -v /home/v5/disk_hdd/owncloud:/var/www/html --name=owncloud --restart always owncloud\n  ```\n\n  * `/home/v5/disk_hdd/owncloud`：修改为owncloud使用的文件夹\n  * `7070`：需要ngix反代到域名\n\n* 如果直接操作文件夹`owncloud/data/{user_name}/files`增加文件，需要进行如下操作在网页中才能看见\n\n  * `docker exec -it owncloud /bin/bash`进入容器\n  * `su www-data -s /bin/bash -c 'php occ files:scan --all'`更新索引文件夹\n  * `ctrl`+`D`退出容器\n\n# 总结\n\n我踩的第一个坑是docker run的时候每个字符串加了引号（或许是这个，不是很确定），然后域名当时改了要用`git.`，一直写的是`gitea.`，然后一直鉴权失败\n\n第二个坑是gitea的app.ini，可恶，还是域名改了的问题，要从`gitea.`换成`git.`，当时就看到Drone运行的时候，我明明docker启动传的参是的`git.`，但是他就从`gitea.`仓库里面拉，一直鉴权失败\n\n然后就是如果之前哪出问题了要重新run Drone一定要`sudo rm -rf /var/lib/drone `，不然还是会和之前一样\n\n参考教程：\n\nhttps://blog.moon.re/2021/02/17/Hexo-on-CI-CD-%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98%E6%94%BB%E7%95%A5/\n\nhttps://zhuanlan.zhihu.com/p/467226209\n\nhttps://koomu.cn/fstab-mount-with-uid-gid-fmask-dmask/\n","tags":["hexo","Drone CI"],"categories":["教程"]},{"title":"宿舍遥控开关整改计划","url":"/2024/02/19/23.remote_control_switch/","content":"\n在宿舍上床之后总是想开灯玩手机和室友一起打会儿游戏，故做此改造\n\n<!-- more -->\n\n# 前言展示\n\n废话不多说，先上效果图\n\nV1.0 参考[网上的教程](https://mp.weixin.qq.com/s/OXfIHrkb7TqSFu3QoLLQTg)\n\n![1.jpg](https://s2.loli.net/2024/03/19/o4KtzT13LxfJZ7W.jpg)\n\nV2.0 考虑到宿舍有两个灯，这不直接整上双开关\n\n![2.jpg](https://s2.loli.net/2024/03/19/wsXIKEVMWP3BLUv.jpg)\n\nV3.0 舵机的固定方法和板子的固定方法改进，爽！\n\n![3.jpg](https://s2.loli.net/2024/03/19/m43bnkZTFUYIW8R.jpg)\n\n控制方式一开始使用了别人示例的点灯科技 APP，但感觉不够酷，所以使用 [NoneBo](https://nonebot.dev/) 机器人框架接入了QQ机器人，这样室友也能用了。\n\n![_IR0U_D~DY5@9X~GN01Y8BH.png](https://s2.loli.net/2024/03/19/b1LAYiaDxleU3f5.png)\n\n> 开灯1、关灯1、开灯2、关灯2可以单独操控一个舵机\n\n# 具体过程\n\n想来想去本次过程似乎也没有太多可以记录的，总体流程为我向我的 QQ 机器人发送消息，经由[自己编写的插件](https://github.com/qllokirin/nonebot-plugin-8266-light)处理后，通过 MQTT 通信话题收发机制（说起来跟 ROS 十分的相似），向 ESP 8266 开发板发送消息，ESP 8266 接受消息后控制 PWM 波的输出从而驱使舵机发生旋转。\n\n值得注意的是，建议把[机器人插件](https://github.com/qllokirin/nonebot-plugin-8266-light/blob/90941530511879cd110a1e5e7089134c5ab3f997/MQTT.py#L10)中的`topic`（\"test/status\"）和`topic_reply `（\"test/reply\"）更换成随意的另外名字并把 [esp 8266 的代码](https://github.com/qllokirin/nonebot-plugin-8266-light/blob/master/esp8266/esp8266.ino)中相应的值改成你更改后的名字，如果都在用相同的话题，显然，A 的机器人会控制 B 的开关。第二点是把 wifi 换成你的账号密码。\n\n# 舵机供电\n\n舵机建议供电是 3V~7V 似乎，一般推荐 5V，但是 ESP8266 上只有 3.3V，带一个勉强能用，带俩很吃力，基本没力了，总电流变大，板子迟早是会有问题的（或许）。所以想了个办法，原本的 micro-USB 还是给板子供电，然后再拉一根 micro-USB，把 micro-USB 端剥开，取出里面的 0V 和 5V 电线，用来给舵机供电。其中要注意 0V 必须和板子共 GND，理论上来说这个 0V 插到板子的 GND 上即可共地，舵机取电从其他几个 GND 拉就行了，但是我没成功，很奇怪，可能是我的 0V 虚接了。我现在共地是用了一个有两个 USB-A 的排插，刚好合适。\n\n# 如果你想复刻\n\n[3D打印件下载地址](https://wwp.lanzoue.com/iTo2F1rwk80j)\n\n[QQ机器人插件](https://github.com/qllokirin/nonebot-plugin-8266-light/tree/master)<---[机器人搭建教程](https://www.bilibili.com/video/BV1984y1b7JY/)\n\n[ESP 8266 板子的代码](https://github.com/qllokirin/nonebot-plugin-8266-light/blob/master/esp8266/esp8266.ino)","tags":["遥控开关"],"categories":["教程"]},{"title":"家庭网络拓扑整改日记","url":"/2024/02/14/22.home_network_upgrade/","content":"\n千兆家庭宽带只能跑100兆，这是为什么呢，加之父母房间网络较卡，决定整改一番\n\n<!-- more -->\n\n# 前言\n\n整改的起初动力有两个，一是我的房间和父母房间都离 WiFi 较远，信号雀食有点难以使用；二是只有我房间的电脑能跑满千兆，家里的WiFi 只有百兆，总感觉很难受。\n\n信号弱的问题很好理解，毕竟隔了两堵墙，然后路由器是 TP-LINK 的的一款百元路由器，的确不能苛责太多。\n\n百兆的问题看下面的网络拓扑即可理解。这里先说一个电信师傅上门装 IPTV（搜台的那种电视盒子）常用的一个方法，就是水晶头一分为二，八芯水晶头变成两个四芯水晶头，主要原因是家庭网络一般弱电箱到客厅只会有一根预埋网线，要同时传输网络和 IPTV，对于上门师傅最方面的方法便是一分二。但是这样有一个可大可小的问题，四芯的水晶头理论传输速度只有 100 兆，所以，有点难受，可能家里使用问题不大，但是总是感觉很难受。\n\n> 绘图软件：https://www.processon.com/\n\n![修改前网络拓扑 _1_.png](https://s2.loli.net/2024/02/14/6E1WPYwLk8ZF5cB.png \"未整改前网路拓扑图\")\n\n<center style=\"font-size:17px;color:#C0C0C0\">未整改前网络拓扑图</center> \n\n![2.jpg](https://s2.loli.net/2024/02/20/DBUxXfkzKY7WFCc.jpg)\n\n<center style=\"font-size:17px;color:#C0C0C0\">四线水晶头接1236芯即为百兆</center> \n\n# 信号弱的问题\n\n果然，解决问题最快的方法是氪金，花了 356 买了一个红米 ax6000，在 100 兆的带宽下，我和父母的房间用 5G 频段 WiFi，基本上无卡顿流畅看视频了。或许你想问，穿墙不是 2.4G 效果应该更加好吗？据我测试，在路由器接入带宽只有百兆的情况下，2.4G 在较远处的带宽只有二三十兆了（就 3MB/s 左右的速度），刷视频必然是时不时卡一下，虽然信号是强，但奈何不了带宽太低。后面查了一下发现一个说法，2.4G 是用手按着水龙头让水喷的更远，但是水量变小了，所以看起来信号比 5G 更强，但实际体验完全不如 5G。其实买红米 AX6000 有一方面是因为他的 2.4G 是有独立模块的，想着信号会更好，参考的是这个[视频](https://www.bilibili.com/video/BV1wv4y1w74C)，但视频里的路由器接入带宽是千兆，2.4G 在较远处也能跑到百兆，而我的**路由器目前接入宽带只有百兆**，才造成了这差别。\n\n> 题外话一句，ChatGPT 是真的强，下面的图是它画的\n>\n> A房间离路由器一堵墙，厕所斜穿两堵墙，B房间斜穿三堵墙，C房间两堵墙\n\n![信号.png](https://s2.loli.net/2024/02/14/5JCgKOhoU3qskMX.png)\n\n由此可以看出，2.4G 的信号强度一直高于 5G，但是 5G 的带宽一直高于 2.4G，在 B 房间优势尤为明显，-80dBm 的信号算是能用不卡的边缘，手机看个 b 站没有问题。目前这个情况下，2.4 G 对我家是一点用没有。后面用 WiFi 魔盒分析信号干扰，基本都是 2.4G 的 WiFi，5G 频段的只有三四个，考虑到 2.4G 信道少的情况，这也可能是导致 2.4G 在我家表现远不如 5G 的原因，当然路由器接入带宽没有达到千兆是更为主要的原因。\n\n> 测试时还发现 2.4G 容易发生无法测试的情况，需要重新打开软件（我使用的是花瓣测试）\n\n# 千兆带宽百兆网速的问题\n\n网上教程学习了个遍，发现如果既要客厅放一个 IPTV 电视盒子，其他房间还有电脑需要连接到弱电箱，似乎只有一种解决办法，就是买两台带有 VLAN 的交换机，梭哈是一种智慧，梭哈！\n\n> 如果房间里面没有电脑需要连接到弱电箱，可以直接让光猫把 IPTV 和网络数据经由同一个口传输到客厅的路由器，在由客厅路由器的 IPTV 分流功能把电视盒子的数据单独传出来。需要光猫改桥接让路由器拨号，据说一个光猫只能拨号一个，所以其他房间里面的电脑无法在通过连接光猫上网\n\n加入两台 VLAN 交换机的网络拓扑图如下\n\n![修改后网络拓扑 _3_.png](https://s2.loli.net/2024/02/20/12SlJ9woZYOn53u.png)\n\n交换 1 口负责数据传输，2 口是IPTV，3 口是网络拨号，一边从光猫出，一边进路由器拨号上网，45 是路由器 lan 口，接上4 5的设备会被路由器分配 ip 即可上网，不同的颜色是不同的 VLAN，iptv 直播无法观看需要把两台交换机的 igmp 监听关闭，光猫的 DHCP sever 在如上图所示的 3VLAN 模式下可以不关闭，光猫桥接，路由器取消 LAN WAN 自适应并且路由器拨号，参考了这个[教程](https://www.bilibili.com/video/BV1SA411E75D)\n\n> HG系列光猫管理员密码参考这个[教程](https://www.bilibili.com/read/cv21044770/)成功了\n\n~~不过可惜的是，春节快递停运，估计这个假期无法实现了，等下一次放假回家吧~~ 无敌了，京东永远的神！便宜几块钱还有春节极速发货第二天就到了，买了四根网线两个交换机（水星 SG 105 Pro），还买了点水晶头和一把压线钳自己压水晶头。整个组装过程很顺利，设置好交换机，重新给网线打水晶头，把所有线接好，成功千兆了，目前已经稳定使用好几天了，千兆，好！\n\n> 压的时候还发现很久之前买的一根成品网线的线序竟然是错的，不是 A 类也不是 B 类\n\n我发现 2.4GHz 的wifi在客厅也只有百兆左右，到了信号最差的 B 房间还是只有二十兆左右，看来那句，\"2.4G就是给家里智能家具用的\"没有一点的毛病\n\n# 关于 IPV4&IPV6\n\n经典路由器 IPV4 地址是 100.x，是电信内网，公网 IPV4 要打电话什么的我就没弄，目前也没需求。\n\n但是实测 IPV6 是可以的，与 IPV4 不太，IPV6会给路由器下的每个设备分派公网 IPV6，比如我在我笔记本的 4000 端口开了一个网页，只要有 IPV6 的网络都可以用`[笔记本 IPV6 地址]:4000`这个地址进行直接访问（IPV6 地址需要用中括号括起来）。然后配合 ddns 就可以给家里设备放到网上了，不过目前我家也没其他设备了，后续就没有接着折腾了。不过有一点有点奇怪，就是我用路由器的 IPV6 地址无法直接进入他的后台（WAN 和 LAN 的地址都试过了），起初以为是运营商把 80 和 443 给 ban 了，但我把我的博客在我本地开到 80 端口，`[笔记本 IPV6 地址]`就可以直接访问了，很神奇，不懂。猜测可能是红米路由器的有关设置限制住了。\n\n# 效果图\n\n\n\n# 成果图↓\n\n虽然有点乱 但感觉还不错\n\n![5.jpg](https://s2.loli.net/2024/02/20/6ioxFAcOrgM28eI.jpg)\n\n![23.jpg](https://s2.loli.net/2024/02/20/OIqRlE6zG3YkL25.jpg)","tags":["家庭网络"],"categories":["记录"]},{"title":"华硕天选2笔记本优化","url":"/2023/08/18/21.computer_optimize/","content":"\n无独显直连电脑性能优化，提高独立显卡调用，有时候看 b 站直播都能卡，受不了了现在终于解决了，很舒服\n\n<!-- more -->\n\n# 前言\n\n电脑是高考结束之后买的华硕天选 2，R7 5800H + RTX 3060，7499入手，就从现在看来当时买还是不太亏的，便宜有现货，就是性能丐一点，没有独显直连，屏幕不是特别好，但是我也看不出来，无所谓。我记得最开始用应该是没什么问题的，后面重装过几次系统，Windows 和 Ubuntu 都重装过，可能是因此发生了一些变化导致现在看 b 站直播都能卡。\n\n> 目前是用了一根TypeC转dp的线外接显示屏，这样是可以独显直连的，让核显睡觉去吧\n\n# 原因分析\n\n![2.png](https://s2.loli.net/2023/08/19/bkAcDEraPuIH4iW.png)\n\n习惯性打开任务管理器看一眼，cpu 和内存占用很正常，百分之五十以下，显卡是两张，一张 RTX 3060，6G **专用 GPU 内存**，一张 AMD 芯片自带核显，512MB **专用 GPU 内存**。经后面分析，就是这个 GPU 的缓存被大量占用导致电脑卡的不行，上面是打开 tim wallpaper 火绒 clash 四个应用的内存占用，99 MB，下面是再加上 B 站直播，436MB，已经卡死了，鼠标卡的非常难以操作，**已经到了不能正常使用的地步**\n\n![6.png](https://s2.loli.net/2023/08/19/WDjaHEyXoQJsG9q.png)\n\n但 3060 基本以 0 的占用在呼呼睡大觉，麻了。似乎只有在打游戏的时候才会调用独显。\n\n![5.png](https://s2.loli.net/2023/08/19/nLiMV5PuCKSY89a.png)\n\n# 问题解决\n\n还是搜索的魅力，我换了很多关键词，`华硕天选2优化` `提升显卡性能` `独显直连`等等。首先华硕天选 2 是不支持独显直连的，只能采用混合模式或者核显模式，混合就是让Windows自行决定用什么显卡，那后面就想到是不是能让谷歌浏览器只使用独显就好了，再经理一番搜索之后终于，找到[这篇文章](https://www.bilibili.com/read/cv6266330?spm_id_from=333.999.0.0)。里面的几种方法建议都操作一下。我的电脑起作用的是下面这个，非常有用。调整完之后看 B 站直播开原画，核显占用 228 MB/512 MB，独显0.2/6 GB。\n\n![3.png](https://s2.loli.net/2023/08/19/Nq7L6AU8fpkJs1S.png)\n\n还有一点是 Windows 的任务管理器左边的百分比显示一般是指 3D 一栏，专用 GPU 内存利用率要在右边看。\n\n![4.png](https://s2.loli.net/2023/08/19/9yrxlpOtASJQu1P.png)\n\n# 总结\n\n感觉这个问题解决的难点在于如何搜索，在不能独显直连的限制下是否能想到指定某软件使用独显，否则难以搜索出对应的教程。我搜索了两三天才解决好😭\n\n> 不过我看评论区也有说切换之后更卡的，猜测可能是显卡不支持 B 站默认 av1 视频的解码，可以尝试在右下角小齿轮-更多播放设置-更改播放策略试试（未验证）\n>\n> 此外提一点是华硕天选 2的外接显示屏独显直连需要使用 type-c 转 DP 的线，转 HDMI 似乎也可以。就是连笔记本不能连 HDMI 口，不然还是核显，确实是十分抽象的。\n\n“Windows将双显卡的调用策略放到了系统级的设置中，于是导致Nvidia控制面板这一软件层面的设置不起作用了”\n\n\"windows10 2004， Chrome 83 亲测有效。刚重装了系统，以前都可以的，很可能是windows最新版的锅，真的时不时给你整些幺蛾子出来\"\n\n评论区有人这么说，感觉倒很合理，解释了为什么一开始我用着没问题，现在出问题了，因为Windows有更新我都是直接更的。\n\n","tags":["笔记本优化"],"categories":["记录"]},{"title":"第一次自组机！","url":"/2023/08/14/20.new_computer/","content":"\n给家里装一台两千左右的电脑，圆我装机梦了，爽爽\n\n<!-- more -->\n\n# 前言\n\n> 现在回来再看这台机子还是太保守了，看多了垃圾佬的视频，就应该多捡点极高性价比的配件哈哈哈，同价位爆杀这台电脑\n\n高三大学的时候就有个装机梦了，自己装个主机多炫酷，难道不觉得这很酷么，还可以 diy 配件选些漂亮的装饰，不过之前一直没钱没机会。这次家里算是有一点点需求（？），姐姐的老笔记本有点卡，工作的时候有点慢，有时候用起来不方便，然后配个能打英雄联盟的电脑，我也可以不带笔记本回家了，一身轻。\n\n话不多说先上全部配件表\n\n| 配件 | 型号                          | 购买地点              | 价格         |\n| ---- | :---------------------------- | --------------------- | ------------ |\n| cpu  | i312100f                      | tb/浪险电竞装机馆     | 板u一起989元 |\n| 主板 | 微型 H610M BOMBER DDR4        | tb/浪险电竞装机馆     | 板u一起989元 |\n| 显卡 | 微型 RX6500XT 4G              | tb/华硕电脑优品商城   | 899元        |\n| 散热 | 雅浚 E1 PRO                   | tb/玉米高端电竞馆     | 39元         |\n| 固态 | 铠侠 rc20 1t                  | tb/固态硬盘之家       | 269元        |\n| 内存 | 天策光威 8g*2 3200            | jd/光威京东自营旗舰店 | 175元        |\n| 电源 | 鑫谷核动力 超级战舰 S7 400w   | jd/鑫谷京东自营店     | 159元        |\n| 机箱 | 先马风致 240 白色带两红叶风扇 | tb/先马旗舰店         | 149元        |\n\n总计2679元\n\n# 选购\n\n当时跟我姐小提了一下我的想法，姐也说感觉需要一台快一点的电脑，我就直接开始正式选购了。\n\n首先想着核显可能还是不太能行，想整张入门级显卡，首先先看了各大up本月装机推荐，1k多都是不带独显的配置，推荐的第一款带独显的配置全都是 i3-12100f + RX6500 XT 的组合，后面也了解到 RX6500 XT 基本是无矿的（似乎是 4g 显存没人愿意拿来挖矿），首发价 1k5 左右如今降八九百的价格，应该还是能勉强战一下 3A 中低画质（虽然我也不玩），天梯图和 GTX 1660 排同行，但是 GTX 1660 价格低得多，大抵因为都是矿卡（笑）。这 CPU 打个 LOL、CSGO应该是轻轻松松。然后根据几个 up 推荐的散热、内存条、固态、电源、机箱做了下对比，选择了我认为性价比高一点的几个，其中固态都推荐的是 512g，但是我感觉战未来还是得 1t 就买了 1t。\n\n说一下购买渠道的选择，第一次装为了稳定性就没有去闲鱼淘二手，只在某宝、某京、某多三家比价，说实话看到有些配件多比宝还贵是我没想到的，官方店的话两边价格一样，那我为什么不选某宝呢，也响应一下[战 sir 的号召](https://blog.zzsqwq.cn/posts/why-should-boycott-pdd/)，没有在某多买。还有一点神奇的是，天策光威内存条售价最低的竟然是某东的官方自营店，我还挺吃惊的，电源是~~易燃易爆品~~，也是加十块上了某东官方自营，其余的都在某宝买的非官方旗舰店，大抵应该或许不会翻车 吧。\n\n等待\n\n快递三四天才能到，好慢好慢好慢好慢，等不及了（）。\n\n乘着兴趣又看了下电脑相关配置、电脑城坑人黑幕、低价垃圾佬神机、纯白海景房之类的。又研究了下我家的老电脑，发现 CPU 现在只要九块（i3 2310M）就能买到（笑），但 2g 内存条和 640g 机械硬盘竟然都是三星的，还挺意外，同款内存条五十块，机械硬盘一百多。\n\n家里老电脑开机之后硬盘占用一直是百分之百，内存占用百分之八九十，如果要升级的话可以 20 块买个随机发货的 2.5 寸 SATA 120g 固态硬盘，固态的速度还是远超机械，然后拆机之后发现内存条可以加一根，花 20 买个 ddr3 2g 内存条，到时候应该会能到可以到能正常使用的水平。不过我并没有这样做，因为家里我姐还有一台老笔记本比这个好一点，我选择把这台老电脑的三星机械硬盘放在新主机上哈哈哈。\n\n![2](https://s2.loli.net/2023/08/17/3hVCYj4SwvGQ9Bk.jpg)\n\n> 只打开一个浏览器内存和磁盘读取就拉满了哈哈哈\n\n还有我姐的老笔记本，她说开机的时候有点卡，能勉强正常使用，我一看，原来是，开机自启动鲁大师和 360 安全卫士，欧，相当的炸裂，把能卸的都卸了，能开机禁用的都禁用了之后，开机之后就不用等一会儿才能用了，CPU A9 9410，内存 8g，自购西数 240g 2.5寸 SATA口 固态硬盘，开个浏览器 CPU 占用百分之五六十，内存硬盘都无压力，正常能用，就反应慢点。\n\n# 装机\n\n激动人心的实操环节！之前也看过同学装，也看过很多教程，大抵应该是没有什么问题的。\n\n算是一次点亮？因为装的时候就差显卡没到，尝试点亮但是没开开，debug 灯是 VGA 亮着，我才意识到这套配置没核显，不过问题不大，显卡一来装上就开开了\n\n### **启动！**\n\n十点钟正式开装，十二点半的时候装好准备点亮了，装了两个半小时，可能算快的了？\n\n![3](https://s2.loli.net/2023/08/17/ZMwI18axPRLeJhK.jpg)\n\n![4](https://s2.loli.net/2023/08/17/6oX4UBxzhgnTfPb.jpg)\n\n![5](https://s2.loli.net/2023/08/17/jYXfUn7OKeg9dPF.jpg)\n\n请一手鲁大师抽烟，显卡跑分不太高，不知道是 PCIE4.0 没起用还是什么，或者 4GB 缓存就只有这么高跑分，专业软件也不测了，娱乐大师也就图一乐。\n\n> 在网上看了看别人的都是十八九万分，老版鲁大师能跑 26 万分，网上说是鲁大师的问题，实际使用一样的，好好好。用 GPU-Z 看了一下也确实是 PCIE 4.0，安心了。\n>\n> 因为主板不带 WiFi 和蓝牙，买了个 PCIE 口的自己装了下，不过装的时候才发现 USB2.0 只有一个九针口，机箱前面板也有一个 USB 2.0 的要接，买了一个一分二的转接口尝试解决一下\n\n目前打了下英雄联盟，稳定两百多帧，感觉没什么问题，挺好。等快递的时候时候一直在捯饬我自己的电脑，不断地搜索之后竟然也解决了之前一直困惑我很久的一个问题，好上加好，具体是天选 2 没有独显直连，所以正常使用会一直用集显，独显就在睡大觉，当显存（集显只有 512M，但是独显有 6G）用满了就会很卡，下次好好写写再细说，~~说不定整个视频~~。\n\n","tags":["装机"],"categories":["记录"]},{"title":"img镜像制作与烧录","url":"/2023/06/23/19.img/","content":"\n之前有制作也有烧录过 nano 的镜像，这次又遇到了一个相关的问题，费了点时间解决了，小做记录\n\n<!-- more -->\n\n**烧写有风险，误操作数据易丢失**\n\n# 前言\n\n这里的 nano 是指 [Jetson Nano](https://developer.nvidia.com/embedded/jetson-nano-developer-kit)，就是一台小型计算机，普通的笔记本电脑的硬盘一般是固态硬盘或者机械硬盘，而 nano 使用的是 sd 卡，这有一个好处是可以很容易的通过更改 sd 卡的内容对 nano 的系统进行备份或者烧录，毕竟只需要拿下来并放到读卡器里即可。比如进行大批量售卖同一内容的 nano 时，只需要配好一张卡里面的环境，然后用这张卡制作一个镜像，其他的 sd 卡只需要猛猛的烧录就行了。或者你需要对自己的 nano 进行备份以防不时之需。\n\n# 使用dd进行镜像制作\n\n> 网上详细教程很多，这里写着主要方便自己以后用，所以写的很简陋\n\n插⼊要备份的SD卡（TF卡），找到对应的设备名，⼀般来说会是 `/dev/sdb`或者`/dev/sda`\n\n```\nsudo fdisk -l\n```\n\n查看分区是否有挂载，一般在最后⼀⾏显⽰有挂载就先卸载\n\n```\ndf -h\n```\n\n卸载挂载，`/dev/sdb`注意替换\n\n```\numount /dev/sdb1\n```\n\n使⽤**dd**备份镜像\n\n```\nsudo dd if=/dev/sdb conv=sync,noerror of=空闲的某个路径/镜像名.img bs=4M\n```\n\n> 如果你的 sd 卡是 64g，那么制作出来的镜像也是 64g，所以一般用下面的压缩指令 \n\n**使用dd备份镜像并且压缩**\n\n```\nsudo dd if=/dev/sdb conv=sync,noerror bs=4M | gzip -c > 空闲的某个路径/镜像名.img.gz\n```\n\n> 64g 的镜像压缩之后一般在 10g 左右\n\n# 使用**dd**烧写镜像\n\n`/dev/sdb`注意替换\n\n```\nsudo dd if=空闲的某个路径/镜像名.img of=/dev/sdb bs=4M status=progress\n```\n\n解压并且烧录\n\n```\ngunzip -c 空闲的某个路径/镜像名.img.gz | sudo dd of=/dev/sdb bs=4M status=progress\n```\n\n> 速度取决于读卡器的速度，如果是 usb3.0 的读卡器只需要半小时，平均速度50mb/s，usb2.0 的读卡器需要几个小时\n>\n> status=progress可以显示实时进度\n\n![image-20230309163423770.png](https://s2.loli.net/2023/06/23/fJ7PaKn3ArSM8xg.png)\n\n结束时会是这样，没有error则是成功\n\n如果提示**dd: error writing '/dev/sdb': No space left on device**中文是**dd: 写入'/dev/sdb' 出错: 设备上没有空间**\n\n经过多种方法的尝试，我最终还是认为：**镜像制作在 64g 的 sd 卡 A 上制作，烧录在 64g 的卡 B 上，但是看磁盘信息，卡 B 比卡 A 少了一点点内存（64 和 64 亦有区别），导致烧录失败，解决办法为给新sd卡烧录一个[原版镜像](https://developer.nvidia.com/embedded/downloads)，再重新配环境**\n\n> 卡 A 的**卡**大小63,864,569,856kb\n> 卡 A 制作出的**镜像**大小63,866,667,008kb\n> 卡 B 的**卡**大小63,831,015,424kb\n> 卡 B 制作出的**镜像**大小63,833,112,576kb\n>\n> 看起来卡 B 制作出的镜像应该能烧录到卡 A 上，但是当时并未尝试\n\n更新：保存镜像的时候可以只保存某部分分区，让总体积小一点，烧写的时候如果无法往一块更大的磁盘上直接烧写，可以尝试创建一个一样的分区往分区里烧。\n\n此外如果使用 jetson 的 emmc + ssd 的组合，向 ssd 中烧录镜像后需要将 emmc 也烧录一个与保存镜像那个 ssd 对应的 emmc 版本，核心版本一样\n\n# 近期遇到的一个问题\n\n由于某些情况我得到了一份 sd 卡的镜像，是 `xxx.gz`，我需要查看里面的内容，但是我手里没有 sd 卡，无法烧录，但是镜像是可以挂在的，所以我现将这个压缩包解压得到一个 120g 的无后缀名文件，我兴高采烈的一手双击，提示没有选择打开方式，我反手改后缀名为 img，我心想就这，不是轻松解决，但是他提示：`Cannot mount block device /dev/loop read-only`，搜索到相关问题是[这个](https://serverfault.com/questions/839898/cannot-mount-block-device-dev-loop-read-only?newreg=a92584edac764f9b97f9a65c41592794)，但报错还是一样\n\n其实一般情况下 .img/iso 镜像应该是可以直接双击挂载的，不知道这个为什么不行，接下来我的搜索关键词一直是**挂载 镜像**，试了半天最后看了一眼标题，**Ubuntu挂载ISO文件**，我再看了一眼 dd 制作的镜像，g，原来是 img，加上关键词 img，很容易搜到[这篇文章](https://zhou-yuxin.github.io/articles/2015/Linux%E6%8C%82%E8%BD%BDimg%E7%A3%81%E7%9B%98%E9%95%9C%E5%83%8F%E6%96%87%E4%BB%B6/index.html)，原来主要是要指定 offset 的值，不过也好，解决了就行\n\n # 使用再生龙PE系统进行烧录\n\n当硬盘总体积小时，可以用上面的方法将镜像全部打包，然后用dd烧录；或者逐个分区进行烧录（或许还要修分区表什么的？未尝试过）但如果镜像比目标硬盘大或者整体大小偏大，使用再生龙进行烧录是个不错的选择，一个安装了基础ros px4环境的镜像只有4g左右，烧录起来也十分的快。\n\n下载再生龙镜像：https://clonezilla.nchc.org.tw/clonezilla-live/download/\n\n烧录进行推荐使用[balenaEtcher](https://etcher.balena.io/)或者ventoy\n\n再生龙有device-device和device-image等众多模式，可以把硬盘系统保存到镜像文件、把镜像烧录到新硬盘中，操作和普通pe差不多，说明非常详细\n\n如果要将一个系统进行打包，ubuntu的话使用系统自带的disks调整硬盘空间，把没有使用的空间都变为free space，这将直接决定到打包后的镜像到底能刷入多大的硬盘之中，只能大于等于已经使用过的分区。所以如果你有一个1t的ubuntu，把不用的空间压缩打包， 是可以刷入一个512甚至256的硬盘中的\n\n> ubuntu自己不能操作自己的分区，因为正在被使用，windwos操作不用ubuntu的分区，因为会报错\n>\n> 所以只能用启动盘使用try ubuntu进行操作，或者把要操作的硬盘外接入另一个ubuntu中\n\n打包好镜像后，烧录的时候值得注意的一点是（我使用的是还原镜像文件到本机硬盘，还原到分区我没有使用过），有一个k0和k1模式，k0是一比一等比克隆，也就是如果本来的镜像（指去除free space的大小，而非硬盘大小）只占用200g内存，复制完也会只有200g，多的就是free space；k1的话就会自动扩充free space，把free space纳入`/`分区，非常好用\n\n\n\n","tags":["记录"],"categories":["记录"]},{"title":"对 ROS 中 callback 机制进行一点探索","url":"/2023/06/09/17.callback/","content":"\n# 对 ROS 中 callback 机制进行一点探索\n\n<!-- more -->\n\n### 前言\n\n之前在使用 YOLO 时，因为我们使用的是 GPU 算力很低（或者说无）的 nuc 运行的，最大速度是 0.1s 一帧，也就是 10Hz，但是相机一般都有 30Hz，当时出现了很奇怪的延时，就是 YOLO 运行的结果总是比相机话题中的画面明显慢的多（秒为单位），当时**错误的理解为队列长度设置为 1，就可以一直保证是最新的消息**，所以一直没有很好的解决。当时是把相机的帧率转到只有 10Hz，再让 YOLO 跑，就没有延时了，当时没管，最新想起来了，就配合 ChatGPT 写了点代码测试了一下。\n\n### 实验过程\n\n先用python写了个发布者和订阅者，发布者一秒一发，1 2 3 4 ... ，这样一个一个发下去\n\n接受者使用 rospy.spin() 一直运行 callback 函数，callback 函数中延时 5s，模拟回调函数花费时间很长\n\n```\n#!/usr/bin/env python\nimport rospy\nfrom std_msgs.msg import String\nrospy.init_node('publisher_node')\npub = rospy.Publisher('my_topic', String, queue_size=10)\n\nrate = rospy.Rate(1)  # 发布频率为1Hz\n\nmessage = 0\nwhile not rospy.is_shutdown():\n    message = message + 1\n    rospy.loginfo(message)\n    pub.publish(str(message))\n    rate.sleep()\n```\n\n```\n#!/usr/bin/env python\nimport rospy\nfrom std_msgs.msg import String\nimport time\ndef callback(data):\n    time.sleep(5)\n    rospy.loginfo('I heard %s', data.data)\n\nrospy.init_node('subscriber_node')\nrospy.Subscriber('my_topic', String, callback)\nrospy.spin()\n\n```\n\n结果如下：\n\n```\n[INFO] [1686216384.496250]: 1\n[INFO] [1686216385.496821]: 2\n[INFO] [1686216386.496821]: 3\n[INFO] [1686216387.496814]: 4\n[INFO] [1686216388.496830]: 5\n[INFO] [1686216389.496828]: 6\n[INFO] [1686216390.496855]: 7\n[INFO] [1686216390.503832]: I heard 2\n[INFO] [1686216391.496830]: 8\n[INFO] [1686216392.496856]: 9\n[INFO] [1686216393.496890]: 10\n[INFO] [1686216394.496953]: 11\n[INFO] [1686216395.496850]: 12\n[INFO] [1686216395.508812]: I heard 3\n[INFO] [1686216396.496810]: 13\n[INFO] [1686216397.496806]: 14\n[INFO] [1686216398.496805]: 15\n[INFO] [1686216399.496846]: 16\n[INFO] [1686216400.496842]: 17\n[INFO] [1686216400.512905]: I heard 4\n[INFO] [1686216401.496842]: 18\n[INFO] [1686216402.496794]: 19\n[INFO] [1686216403.496824]: 20\n[INFO] [1686216404.496812]: 21\n[INFO] [1686216405.496868]: 22\n[INFO] [1686216405.520205]: I heard 5\n\n```\n\n回调函数的运行机制是，当有一个消息过来时，就执行回调函数，没有则不执行，这里依照此原则一个一个执行，于是从 1 2 3 4 ... 一个一个进行接受。显然，这样无法达到我们希望消息实时更新的想法。\n\n这时候加上队列长度为会变成如下结果，令 queue_size=1\n\n```\n[INFO] [1686216536.836731]: 1\n[INFO] [1686216537.837433]: 2\n[INFO] [1686216538.838505]: 3\n[INFO] [1686216539.838197]: 4\n[INFO] [1686216540.838405]: 5\n[INFO] [1686216541.838377]: 6\n[INFO] [1686216542.838640]: 7\n[INFO] [1686216542.845194]: I heard 2\n[INFO] [1686216543.838433]: 8\n[INFO] [1686216544.837319]: 9\n[INFO] [1686216545.837338]: 10\n[INFO] [1686216546.838616]: 11\n[INFO] [1686216547.838296]: 12\n[INFO] [1686216547.853294]: I heard 7\n[INFO] [1686216548.838559]: 13\n[INFO] [1686216549.837330]: 14\n[INFO] [1686216550.838616]: 15\n[INFO] [1686216551.838163]: 16\n[INFO] [1686216552.838629]: 17\n[INFO] [1686216552.860943]: I heard 12\n[INFO] [1686216553.838344]: 18\n[INFO] [1686216554.838617]: 19\n[INFO] [1686216555.837327]: 20\n[INFO] [1686216556.837750]: 21\n[INFO] [1686216557.838477]: 22\n[INFO] [1686216557.868910]: I heard 17\n```\n\n从结果来看，队列长度里面储存的内容是在上一次 callback 执行时更新的，**如果callback花费很长时间，这个队列为一的消息并不是最新的**，而是上一次 callback 运行时候的值，而不写队列长度则会把所有的数据全部储存，一个一个依次读取\n\n显然，两种结果都不是想要的结果\n\n由于 python 没有 spinOnce 机制，于是我测试了 c ++ 的 ros::spinOnce() 函数，其效果与队列长度设置为1更新机制一样，即使用的消息是上一次执行callback保存的值\n\n```\n#include <ros/ros.h>\n#include <std_msgs/String.h>\n#include <chrono>\n#include <thread>\nvoid callback(const std_msgs::String::ConstPtr& msg)\n{\n    std::this_thread::sleep_for(std::chrono::seconds(5));\n    ROS_INFO(\"c++ I heard: [%s]\", msg->data.c_str());\n}\n\nint main(int argc, char** argv)\n{\n    ros::init(argc, argv, \"subscriber_node\");\n    ros::NodeHandle nh;\n\n    ros::Subscriber sub = nh.subscribe<std_msgs::String>(\"my_topic\", 1, callback);  // 设置队列长度为10\n\n    while (ros::ok()){\n        ros::spinOnce();\n    }\n//    ros::spin();\n\n    return 0;\n}\n\n```\n\n```\n[INFO] [1686236228.724176]: 1\n[INFO] [1686236229.725438]: 2\n[INFO] [1686236230.725013]: 3\n[INFO] [1686236231.725994]: 4\n[INFO] [1686236232.725972]: 5\n[INFO] [1686236233.726002]: 6\n[INFO] [1686236234.726026]: 7\n[ INFO] [1686236234.727809610]: c++ I heard: [2]\n[INFO] [1686236234.732852]: python I heard 2\n[INFO] [1686236235.725834]: 8\n[INFO] [1686236236.726048]: 9\n[INFO] [1686236237.725904]: 10\n[INFO] [1686236238.725657]: 11\n[INFO] [1686236239.725623]: 12\n[ INFO] [1686236239.730360900]: c++ I heard: [7]\n[INFO] [1686236239.741026]: python I heard 7\n[INFO] [1686236240.725924]: 13\n[INFO] [1686236241.726004]: 14\n[INFO] [1686236242.726119]: 15\n[INFO] [1686236243.726149]: 16\n[INFO] [1686236244.725790]: 17\n[ INFO] [1686236244.730969842]: c++ I heard: [12]\n[INFO] [1686236244.746302]: python I heard 12\n```\n\n### 解决方法\n\n* 1. 使用`while not rospy.is_shutdown():`，实测会来了一个消息就会开始执行callback\n\n  直接上代码\n\n  ```\n  #!/usr/bin/env python\n  import rospy\n  from std_msgs.msg import String\n  import time\n  a = ' '\n  def callback(data):\n      global a\n      a = data.data\n  \n  rospy.init_node('subscriber_node')\n  rospy.Subscriber('my_topic', String, callback, queue_size=1)\n  \n  while not rospy.is_shutdown():\n      time.sleep(5)\n      rospy.loginfo('python %s', a)\n  ```\n  \n  输出\n  \n  ```\n  [INFO] [1686239068.123173]: 1\n  [INFO] [1686239069.124314]: 2\n  [INFO] [1686239070.124508]: 3\n  [INFO] [1686239071.124797]: 4\n  [INFO] [1686239072.124445]: 5\n  [INFO] [1686239073.124328]: 6\n  [INFO] [1686239073.138271]: python 6\n  [INFO] [1686239074.124528]: 7\n  [INFO] [1686239075.124556]: 8\n  [INFO] [1686239076.124529]: 9\n  [INFO] [1686239077.124631]: 10\n  [INFO] [1686239078.124316]: 11\n  [INFO] [1686239078.146387]: python 11\n  [INFO] [1686239079.124611]: 12\n  [INFO] [1686239080.124351]: 13\n  [INFO] [1686239081.124512]: 14\n  [INFO] [1686239082.124566]: 15\n  [INFO] [1686239083.124489]: 16\n  [INFO] [1686239083.154269]: python 16\n  [INFO] [1686239084.124850]: 17\n  [INFO] [1686239085.124540]: 18\n  [INFO] [1686239086.123901]: 19\n  [INFO] [1686239087.124629]: 20\n  [INFO] [1686239088.124192]: 21\n  [INFO] [1686239088.159253]: python 21\n  ```\n  \n  把费时间的程序放在while中即可，spin 负责一直更新参数\n  \n  > https://blog.csdn.net/qq_16583687/article/details/55263148\n  \n* 2.双线程\n\n  > https://blog.csdn.net/lizhiyuanbest/article/details/104710653\n\n### 结论\n\n这主要对于视觉代码提出了要求，如果使用重型网络，只有10hz的处理速度，则需要使用`while not rospy.is_shutdown()`、或者修改图像消息的帧率、或者使用多线程更新图像\n\n如果是传统视觉，一般处理速度较快，30hz 到100hz 左右，这时候基本保证消息是实时的。当消息处理能力大于话题消息频率时，十分推荐使用spin函数\n","tags":["ros"],"categories":["教程","记录"]},{"title":"一篇有魔力的文章","url":"/2023/04/25/16.clash/","content":"\nmagic 碰都不能碰的滑梯\n\n<!-- more -->\n\n# 前言\n\n因为懂得都懂的原因，有一道墙，迫使之前的我只知道百度搜索引擎，但了解到谷歌搜索引擎的好之后，那是真的好。\n\n> 国内建议使用必应搜索引擎，爆杀百度的\n\n我个人使用梯子经历大概是 免费的软件->hxd分享的节点 我第一次用上了clash->找白嫖机场->合租机场->找便宜机场->找白嫖机场->找性价比高的机场（便宜且速度快的新兴小机场）+ 多家不限时机场备用，啊 白嫖多是一件美事，最近找到一篇文章分享了很多可以有免费流量的机场，~~我在想这些白嫖机场合一块，说不定比便宜机场还好用，在试了在试了，这也是写这篇文章的原因~~\n\n> 不过现在用上了好用便宜的付费机场，已经回不去白嫖节点了\n\n# 使用\n\n### 简易版\n\n* ~~**下载 clash**~~\n\n  还在用已经删库的clash for windows和clash for Android？我的建议是速速拥抱新生软件，好用的一，也有Linux的deb安装包\n\n  PC端：[**Clash Verge**](https://github.com/zzzgydi/clash-verge)      **[mihomo-party](https://github.com/mihomo-party-org/mihomo-party)**\n\n  > 教程：[Clash Verge Rev使用指南](https://duangks.com/archives/167/)  \n\n  安卓端：**[ClashMetaForAndroid](https://github.com/MetaCubeX/ClashMetaForAndroid)**\n  \n  > 教程：  [Clash Meta for Android使用指南](https://duangks.com/archives/169/)\n* 机场推荐\n\n  [xfltd](https://xfltd.org/#/register?code=B2lHhzSt)\n\n  [TaiShan](https://www.taishan.pro/#/register?code=Mh5RXLdX)\n\n* 花钱买机场也是个不错的选择，主要是速度会快，体验比较稳定，但是价位有多有少，便宜的几块一个月，中等的一二十一个月，贵的也有100多一个月的\n\n  大多数机场有一个普遍的发展规律，刚起家，人很少—>便宜，带宽负荷暂时较小—>大量推广—>人数变多，负荷增加—>涨价涨价涨价/不涨价但是越来越慢，毕竟人数变多了，典型代表有蜂巢（七元一月涨到现在的二十五元一个月）、一元机场（11一年保持到现在但是人数爆多，tg群已经有7w人了，其实更加恐怖的是我在很多国内应用的软件的评论区多次看到过有人推广，感觉要不太行了）\n\n  大体来说，越贵的越好，但是有些比较虚高，太便宜的机场也不指望多稳定，能用就行，想找性价比的高（价格低，稳定，速度快、不会跑路）的就得多逛逛\n\n\n### 折腾白嫖版\n\n如果你想白嫖**且愿意折腾**，就用用下面的方法，但是速度应该没多快的\n\n* **生成订阅转换链接**\n\n  这里我们用奶昔订阅转换网址：https://nexconvert.com/\n\n  * 将下面的内容填入`订阅链接`一栏\n\n    ```\n    https://sub.pmsub.me/clash.yaml |\n    https://sub.sharecentre.online/sub |\n    https://git.io/emzclash |\n    https://cdn.jsdelivr.net/gh/oslook/clash-freenode@main/clash.yaml |\n    https://sub.sharecentre.online/sub |\n    https://raw.fastgit.org/freefq/free/master/v2\n    ```\n\n    > 此外下面俩个，但总感觉每日更新且地址会变，不太好操作\n    >\n    > https://freenode.me/f/freenode 每日会更新\n    >\n    > https://github.com/abshare/abshare.github.io 有每日公益节点 但是几个小时一更新 有点不好嫖\n    \n  * `远端配置`填\n\n    https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Full.ini\n\n  * 点击`生成订阅链接`获得转换后的clash订阅链接\n\n* 按照简易版导入 clash，这时候上个 google、github 应该没什么问题了\n\n### 规则集说明\n\n上面的订阅转换我们填入了一个规则集—https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Full.ini\n\n来自一个一直在维护的[项目](https://github.com/ACL4SSR/ACL4SSR/tree/master)，这个规则集能帮助你判断哪些网站需要走代理，哪些不需要代理，这也就是我们说的**规则代理**，在clash中的connections中可以查看\n\n常用匹配规则有 `DOMAIN-SUFFIX`（域名后缀匹配）、`DOMAIN`（域名匹配）、`DOMAIN-KEYWORD`（域名关键字匹配），比如你登录谷歌然后点 `Connections` 然后搜索 google\n\n![1.png](https://s2.loli.net/2023/04/29/YDFjBILlOEz6qfh.png)\n\n可以看到他的 Rule 是 DomainKeyword (google) 然后先进入了` 🚀 节点选择`的规则组，我在 `🚀 节点选择`规则组中选择了 `♻️ 自动选择`规则组，`♻️ 自动选择`规则组是使用了 `url-test` 也就是测速然后选择一个延迟最快的，然后选到了一个节点\n\n![2.png](https://s2.loli.net/2023/04/29/BwyZY4NOmzLHnlb.png)\n\n  ![3.png](https://s2.loli.net/2023/04/29/sFGyqNA7Bj1x5gT.png)\n\n为了让规则说明更加的清楚，下面用一份示例说明一下\n\n```\nport: 7890\nsocks-port: 7891\nallow-lan: true\nmode: Rule\nlog-level: info\nexternal-controller: :9090\nproxies: \n  - { name: 节点一, xxxxxx }\n  - { name: 节点二, xxxxxx }\nproxy-groups:\n  - name: 🚀 节点选择\n    type: select\n    proxies:\n      - ♻️ 自动选择\n      - 🚀 手动切换\n      - DIRECT\n  - name: 🚀 手动切换\n    type: select\n    proxies:\n      - 节点一\n      - 节点二\n  - name: ♻️ 自动选择\n    type: url-test\n    url: http://www.gstatic.com/generate_204\n    interval: 300\n    tolerance: 50\n    proxies:\n      - 节点一\n      - 节点二\n  - name: 🐟 漏网之鱼\n    type: select\n    proxies:\n      - 🚀 节点选择\n      - 🚀 手动切换\n      - ♻️ 自动选择\n      - DIRECT\n      - 节点一\n      - 节点二\nrules:\n - DOMAIN-KEYWORD,google,🚀 节点选择\n - MATCH,🐟 漏网之鱼\n```\n\n* `allow-lan`：是否允许局域网共享，true 可以让局域网其他设备使用`ip:端口`使用你的代理，使用clash软件可以在首页设置\n\n* `proxies`：代理链接，买机场的代理买的就是这个字段，通过 http、socks5、ss、ssr、vmess、trojan等协议传输数据\n* `proxy-groups`：规则组设置，这里我们设置了四个规则组做示例：🚀 节点选择、🚀 手动切换、♻️ 自动选择、🐟 漏网之鱼\n* `rules`：规则设置，这里我们仅用两个规则做演示\n\n在clash界面他看起来是这样的\n\n![4.png](https://s2.loli.net/2023/04/29/Gv4fHkxNZ3RbgYI.png)\n\n**流程演示1：**\n\n* 假如我们访问 www.google.com 先从rules 中从上往下依次匹配规则，根据域名关键字（DOMAIN-KEYWORD）匹配到了google，所以该网站流量进入`🚀 节点选择`规则组，`🚀 节点选择`是 select 模式，即需要用户自行选择一个节点/规则组\n\n* 在`🚀 节点选择`规则组中我们选择了`♻️ 自动选择`规则组，而`♻️ 自动选择`规则组是 url-test 模式，该规则组会依据延迟选择延迟最低的一个节点（不过有说法是延迟低的带宽小，未验证，不知道）\n\n* 再按之前的方法在 connections 中验证一下\n\n  ![image-20230429151009315.png](https://s2.loli.net/2023/05/01/M1iCsjo9yPaxcL6.png)\n\n**流程演示2：**\n\n* 假如我们访问的是其他网站，比如 www.baidu.com 因为在规则中没有匹配，于是最终匹配到了`MATCH,🐟 漏网之鱼`，MATCH 是全匹配，意思没有写在规则的网站都会进入这里，一般默认选择节点选择，但是也可以指定到 DIRECT（直连，即不走代理）\n\n**总结：**\n\n所以，用大佬的规则就完了（\n\n这里有个好东西，把这几个勾上有时候能解决几个问题，就是在切换节点/代理文件/模式时会切断所有的connection\n\n![image.png](https://s2.loli.net/2023/06/02/H5fzCS2JbM7eEWK.png)\n\n# docker版clash\n\n当前路径下放置`config.yaml`\n\n前几行参考示例：\n\n```\nmixed-port: 7890\nallow-lan: true\nbind-address: '*'\nmode: rule\nlog-level: info\nexternal-controller: '0.0.0.0:9090'\nproxies:\n```\n\n运行docker\n\n```\ndocker run -d --name clash-client --restart always -p 7890:7890 -p 7891:7891 -p 9090:9090 -v ./config.yaml:/root/.config/clash/config.yaml  dreamacro/clash\n```\n\n运行yacd面板\n\n```\ndocker run -p 1234:80 -d --rm --name yacd haishanh/yacd\n```\n\n访问`IP:1234`，填写`http://IP:9090`即可\n\n使用`proxychains4`时填写`http 127.0.0.1 7890`\n\n或者直接执行`export http_proxy=http://127.0.0.1:7890`\n","tags":["clash","魔法"],"categories":["教程","记录"]},{"title":"vocaloid歌曲展厅（x","url":"/2023/03/22/15.vocaloid/","content":"\n虚拟歌姬？很喜欢的啦\n\n<!-- more -->\n\n# 前言\n\nvc歌曲专栏？ 我还是很喜欢有带有解读的歌曲，作者本人也好，热评也好，都行， 因为有时候我自己无法解读歌曲的意思，但又想知道  这时候有一个热评/原作者 给我一指点  我会更喜欢这首歌曲\n\n有时候或许是很简单的事但我也无法瞬间get，比如前几天学姐邀请我们去吃蛋糕，当时我想着刚吃完晚饭又很晚，便拒绝了，过了一会儿越想越不对，然后才是突然意识到应该是过生了邀请我们去吃生日蛋糕，然后才说我们马上来\n\n**[【洛天依原创曲】致还未遇见的你【桐叶_tongye / PV付】](https://www.bilibili.com/video/BV1Nt411y7uc)** \n\n致你，依稀记得我曾写过一首致歉呢，当时感觉文笔还不错哈哈哈，\t“天依选择”毅然坚信“你”的存在，并且在找寻着“你”，想象着“你”，期盼着“你”，而我只会在原地等待吧，等待奇迹的发生，这也终将无果吧\n\n**[【心华原创】浅滩青鸟【心华八周年·心时八景-哔哩哔哩】](https://www.bilibili.com/video/BV1WA411r7X8)**\n\n很好听的一首歌，不过只有4k播放量，可惜了，曲子很特别，轻柔的风格之中也有十分特别曲调（真的不会夸作曲和编曲www但确实真的很好），听得时候总是听得很入神，有一种夏日度假的感觉，词作也对有关于”我“的故事进行了探讨，其中“陌生的街道右转弯”时常不自觉的哼起\n\n**[【起氏双子五周年】如果仅靠谎言将我的世界照亮【COPYx坐标Px流绪】【原创手书pv付】](https://www.bilibili.com/video/BV1YW4y1U71A)**\n\n”如果仅靠谎言将我的世界照亮，欲盖弥彰，不如将黑夜寸寸延长“，如果是我，我可能真的希望仅靠谎言将我的世界照亮，那样就好，那样就足够了...\n\n不过歌中的剧情应是自己用谎言照亮自己的一瞬间，“为什么这份灿烂只能存在一瞬间”，和我之前仅凭歌词的理解有些不同\n\n**[【诗岸·原创】参考答案：略](https://www.bilibili.com/video/BV1os421w738?spm_id_from=333.1245.0.0)**\n\n“再一次谈到自己的年龄，前缀是「我才」还是「我已经」” 十分精彩的作词与编曲，这一句让我感觉一亮，很惊艳。若是相同的问题给我，我的回答是「我才」还是「我已经」呢\n\n**[“在闪烁星光下相聚吧！”此刻Memories【洛天依XBDF2024十周年主题曲】](https://www.bilibili.com/video/BV1ds421A7EX?spm_id_from=333.1245.0.0)**\n\n“指尖滑过的色彩，汗滴奏出的节拍” 味儿好足，好喜欢！纯白的曲子确实是牛的，听的很爽\n","tags":["vocaloid","歌"],"categories":["分享"]},{"title":"路由器安装openwrt","url":"/2023/03/20/14.openwrt/","content":"\n路由器直接走代理，听着就很酷\n\n<!-- more -->\n\n# 前言\n\n基地的网络可以直接用魔法，刚入队的时候就感觉很神奇，现在终于有机会自己试试了。现在快退役了，丰富一下教程内容。\n\n> 基地目前（2024.3.4）拥有一个红米 AC2100、两个友善 Nanopi R2S 软路由、一个 J1800 x86 2核4G 小主机\n\n# 红米 AC2100刷openwrt\n\n像这种路由器也叫**硬路由**，cpu 算力不高，但是无线性能好。要刷成openwrt系统会经历下面的过程：\n\n红米自带系统->`BREED`->`OpenWrt`\n\n[这个教程](https://supes.top/%e7%ba%a2%e7%b1%b3-%e5%b0%8f%e7%b1%b3-ac2100-%e5%88%b7breed%e5%92%8copenwrt%e6%95%99%e7%a8%8b/)很详细。热门路由器在网上搜索都可以找到相应的教程，不过值得注意的是，硬路由因为本身性能不高，低价位的路由器刷成 openwrt 系统后可能会出现**卡顿、断流**等情况，所以这个路由器基本闲置了。\n\n# 友善 Nanopi R2S 软路由刷入OpenWrt系统\n\n> 接口：\n>\n> 一个 type-C 供电口\n>\n> 一个 WAN 口（连接学校的网口）\n>\n> 一个 LAN 口（连接局域网设备，如路由器、电脑）\n>\n> 一张 SD 卡\n\n* 我习惯使用大佬的[固件定制网站](https://openwrt.ai/)，搜索 R2S，自定义固件里面把 OpenClash（clash的openwrt插件版）安装上，后台地址和后台密码按需修改，在校园内建议修改为192.168.x.1\n* 将 R2S 上的 sd 卡拿下来放入 sd 卡中插入电脑\n\n* 我这里使用烧录软件[balenaEtcher](https://github.com/balena-io/etcher/releases/tag/v1.18.11)将镜像烧录到 sd 卡中，一步一步按提示操作即可\n* 插入 sd 卡并开机，LAN 口与自己的电脑连接，你将被分配一个 192.168.x.x 的 ip，访问 192.168.x.1 或者 /op 即可访问 openwrt后台\n\n> 就普通使用而言，编译固件、ssh、命令行 opkg等等都用不到，如果愿意请自行折腾\n\n# J1800 x86刷openwrt\n\n> 接口：\n>\n> 一个 12V DC 供电\n>\n> 一个 LAN1 口\n>\n> 一个 LAN2 口\n>\n> 一个 HDMI 口\n>\n> 一个 VGA 口\n\n因为它的硬盘不方便/不能像 R2S 一样可以直接接入电脑进行烧录，所以我们选择借助 PE 系统，在 J1800 上运行 pe 系统然后将镜像烧录到原本的硬盘里\n\n* 我习惯使用大佬的[固件定制网站](https://openwrt.ai/)，搜索 x86/64，自定义固件里面把 OpenClash（clash的openwrt插件版）安装上，后台地址和后台密码按需修改，在校园内建议修改为192.168.x.1\n* 烧录 PE 系统，我使用的是[优启通](http://upe.net/) PE 系统\n* 将[烧录软件WinDiskFlash](https://github.com/namazso/WinDiskFlash/releases/tag/v1.1) 和 openwrt 镜像放入 u 盘之中\n\n* 开机乱按进入 BIOS，选择以 u 盘启动\n* 试一试两个LAN 口与自己的电脑连接，接入其中一个时你将被分配一个 192.168.x.x 的 ip，那个就是真正的 LAN 口，另外一个是 WAN 口，访问 192.168.x.1 或者 /op 即可访问 openwrt后台\n\n### 重启解决百分之99的问题！！！！\n\n今天总算是又领悟到这句话的真谛了，一开始上传新固件也是一直报错，一个重启再上传就好了\n\n打开openclash结果主程序一直显示未运行，捯饬半天各种检查各种搜索，结果一个重启又好了\n\n遇到` * opkg_download: 请检查网络设置, 确保本设备网络可用.`也是多运行几次，重启然后再多运行几次就好了\n\n神奇\n\n# 命令行安装插件\n\n> 可选\n\n自行安装插件的时候麻烦还挺多，因为完全不了解，有些README读起来有困难，比如`uname -a`看到你是mips架构结果你找了半天发现newifid2.zip里面放的就是mipsel的.ipk东西\n\n传输文件我看网上用sftp用的多，但是我之前习惯了scp，我感觉scp似乎更方便，指令像这样`scp *.ipk root@192.168.7.1:/package`\n\n我试了老半天`luci-app-unblockmusic`这个解锁网易云音乐的插件，结果发现最近一次commit是三年前，估计是已经用不了了\n\n# OpenClash的使用\n\n上网设置\n\n* `网络`->`接口`，WAN 口设置为 PPPOE 拨号，输入学号密码，在学院楼的话账号是不用充钱的\n\n  LAN 口的静态地址千万别改，不然就可以考虑重新刷机了（或许设置静态地址也能连上？没试过）\n\nopencalsh设置\n\n* `服务`->`OpenClash`，最下方 启动！然后查看运行日志，但必然会碰到[这个问题](https://www.right.com.cn/forum/thread-8272767-1-1.html)，如果是 x86 或者其他架构在[这里](https://github.com/vernesong/OpenClash/releases/tag/Clash)找\n* 其余的就是上传订阅了，剩下的自行探索一下\n\n> OpenClash 与 IPV6 极不兼容，使用 IPV6 的情况下容易发生问题（官方自己说的）\n>\n> 代理发生问题时刻尝试关闭 IPV6 相关设置\n\n# 附录\n\n最近在研究规则代理的问题，因为有时候总会有代理走不上的情况，个人用的话开个全局或者用proxychains也还行，但是挂在路由器上的代理要是规则没写好，那就g\n\n简单来着只要进入https://nexconvert.com/\n\n1写你在机场买的节点链接（担心安全问题就不要用，用不怕，怕不用）\n\n2远程配置写https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Full.ini\n\n3然后把链接复制到clash，下载即可\n\n> 这样只是优化你的规则，并且会抹掉最前面的dns字段，在openclash上使用时可能会造成一些问题\n>\n> 不过我现在已经不用订阅转换了，最开头自己写规则是因为当时作者还没有把 ChatGPT 相关网站加进去，现在已经有了。还有一方面是订阅转换的网站不开代理不一样连得上，有时候还挺难受的\n\n~~自定义规则：https://yattazen.com/tutorial/clash-custom-config.html~~\n\n~~图形化编辑教程：https://www.jamesdailylife.com/clash_2022~~\n\n~~clash官方说明：https://docs.cfw.lbyczf.com/contents/ui/profiles/rules.html~~\n\n看来之前的风波真挺大，教程全没了\n\n# Q&A\n\n* 链接到wifi后图标如下显示无法连接到Internet，但是可以上网\n\n  ![MA2V~V8_F1__KD7_OEF_MOD.png](https://s2.loli.net/2023/04/01/AmEVuGYWKIR4iln.png)\n\n  https://github.com/vernesong/OpenClash/issues/6\n  \n  https://github.com/vernesong/OpenClash/issues/2239\n  \n  解决方法\n  \n  ```\n  DOMAIN-SUFFIX,msftconnecttest.com,🚀 节点选择\n  DOMAIN-SUFFIX,msftncsi.com,🚀 节点选择\n  ```\n  \n  需要让这两个网站走代理，修改规则即可\n  \n* 重启 openclash 插件之后无法科学上网，打开谷歌或者有关提示 dns 解析错误或者 ip 找不到，有时候等待十几分钟或几个小时就好了\n\n  最终的解决办法是在配置文件前面添加上dns字段。原因是订阅转换之后导致自带的dns字段被抹掉了，openclash日志显示会自动补全，但是可能自动补全的这个无法使用。但日志时不时输出一句更新内核失败，从 raw.github 什么什么的链接失败，可能也会有点影响，github 上有一个相关的 issue 可以解决那个问题\n\n  下面是订阅转换之后的配置文件\n\n  ```\n  port: 7890\n  socks-port: 7891\n  allow-lan: true\n  mode: Rule\n  log-level: info\n  external-controller: :9090\n  proxies:\n  \t……………………\n  \t……………………\n  ```\n\n  只需要加上dns字段即可\n\n  ```\n  port: 7890\n  socks-port: 7891\n  allow-lan: true\n  mode: Rule\n  log-level: info\n  external-controller: :9090\n  dns:\n    enable: true\n    ipv6: false\n    listen: 127.0.0.1:8853\n    enhanced-mode: fake-ip\n    nameserver:\n      - https://223.5.5.5/dns-query\n      - https://223.6.6.6/dns-query\n      - https://doh.pub/dns-query\n    fake-ip-filter:\n      - \"*.lan\"\n      - stun.*.*.*\n      - stun.*.*\n      - time.windows.com\n      - time.nist.gov\n      - time.apple.com\n      - time.asia.apple.com\n      - \"*.ntp.org.cn\"\n      - \"*.openwrt.pool.ntp.org\"\n      - time1.cloud.tencent.com\n      - time.ustc.edu.cn\n      - pool.ntp.org\n      - ntp.ubuntu.com\n      - ntp.aliyun.com\n      - ntp1.aliyun.com\n      - ntp2.aliyun.com\n      - ntp3.aliyun.com\n      - ntp4.aliyun.com\n      - ntp5.aliyun.com\n      - ntp6.aliyun.com\n      - ntp7.aliyun.com\n      - time1.aliyun.com\n      - time2.aliyun.com\n      - time3.aliyun.com\n      - time4.aliyun.com\n      - time5.aliyun.com\n      - time6.aliyun.com\n      - time7.aliyun.com\n      - \"*.time.edu.cn\"\n      - time1.apple.com\n      - time2.apple.com\n      - time3.apple.com\n      - time4.apple.com\n      - time5.apple.com\n      - time6.apple.com\n      - time7.apple.com\n      - time1.google.com\n      - time2.google.com\n      - time3.google.com\n      - time4.google.com\n      - music.163.com\n      - \"*.music.163.com\"\n      - \"*.126.net\"\n      - musicapi.taihe.com\n      - music.taihe.com\n      - songsearch.kugou.com\n      - trackercdn.kugou.com\n      - \"*.kuwo.cn\"\n      - api-jooxtt.sanook.com\n      - api.joox.com\n      - joox.com\n      - y.qq.com\n      - \"*.y.qq.com\"\n      - streamoc.music.tc.qq.com\n      - mobileoc.music.tc.qq.com\n      - isure.stream.qqmusic.qq.com\n      - dl.stream.qqmusic.qq.com\n      - aqqmusic.tc.qq.com\n      - amobile.music.tc.qq.com\n      - \"*.xiami.com\"\n      - \"*.music.migu.cn\"\n      - music.migu.cn\n      - \"*.msftconnecttest.com\"\n      - \"*.msftncsi.com\"\n      - localhost.ptlogin2.qq.com\n      - \"*.*.*.srv.nintendo.net\"\n      - \"*.*.stun.playstation.net\"\n      - xbox.*.*.microsoft.com\n      - \"*.ipv6.microsoft.com\"\n      - \"*.*.xboxlive.com\"\n      - speedtest.cros.wr.pvp.net\n  proxies:\n  ```\n\n  这里还有一份dns设置\n\n  ```\n  mixed-port: 7890\n  allow-lan: true\n  bind-address: '*'\n  mode: rule\n  log-level: info\n  external-controller: '127.0.0.1:9090'\n  dns:\n      enable: true\n      ipv6: false\n      default-nameserver: [223.5.5.5, 119.29.29.29]\n      enhanced-mode: fake-ip\n      fake-ip-range: 198.18.0.1/16\n      use-hosts: true\n      nameserver: ['https://doh.pub/dns-query', 'https://dns.alidns.com/dns-query']\n      fallback: ['https://doh.dns.sb/dns-query', 'https://dns.cloudflare.com/dns-query', 'https://dns.twnic.tw/dns-query', 'tls://8.8.4.4:853']\n      fallback-filter: { geoip: true, ipcidr: [240.0.0.0/4, 0.0.0.0/32] }\n  proxies:\n  ```\n\n  应该都是可以的，我只试了前者。切换之后用了一会儿之后，再使用没有dns字段的配置文件也可以正常使用代理了，可能是，他自己记住了？也或许不是这个 dns 的问题\n\n\n\n一些相关链接\n\nhttps://www.right.com.cn/forum/forum.php?mod=viewthread&tid=8276453&highlight=%B6%A8%D6%C6openwrt\n\nhttps://github.com/kiddin9/OpenWrt_x86-r2s-r4s-r5s-N1\n\nhttps://supes.top\n\nop/\n","tags":["路由器","openwrt"],"categories":["记录"]},{"title":"第一次去livehouse","url":"/2023/02/05/13.shuangsheng/","content":"\n双笙的幻彩国巡演来西安啦，运气真好~\n\n<!-- more -->\n\n# 前言\n\n怎么说呢，算是对高中的我进行一个还愿吧，曾经，谁没有幻想过能见一见自己喜欢的歌手呢，想听现场演唱，现在机会摆在面前，当然是直接去啦！高中那段时间，晚上用MP3偷偷听你的歌或许是最惬意的时光吧，感谢有你的陪伴~\n\n# 关于livehouse\n\nlivehouse就是在小场馆内开演唱会，突出优点是氛围感很强，离歌手也比较近\n\n一定要早点去！！！！！一定要早点去！！！！！\n\n比如双笙这场是19.30开始，我后面看到兑票处写的是17.00开始兑票，所以17.00之前早点去排队，简而言之建议提前两三个小时到（或更早），不然站到后面被挡住了真的小不适\n\n因为livehouse都是站着，先到站前面，后来就只能站后面，然后VIP票和普通票是分开的，前面是VIP 后面是普通票，建议还是加钱买张VIP，前面看的更清楚\n\n对了，兑票有还挺有意思，他是给你手背上印一个章，但是你是看不到印子的，我当时还看了好几眼哈哈哈（店员肯定一眼看出我是第一次来），因为那个是夜光的，进去的时候会打光看手上有没有那个章\n\n# 现场\n\n现场感觉两三百人，现成听还是感觉挺不一样的，简单来说就是听的很爽，不过中间那音响不知道为啥有点电流噪音，有点小g，我看双笙好像也注意到了，弄了一下耳麦和后背的线，至于说唱功什么的，我自己纯纯跑调大师的什么，不太懂这些，反正 好听很稳就行啦。场间的互动也好有意思哈哈哈，有喝水唱歌（不过最后还是没唱出来哈哈 可能是怕卡到喉咙影响后面唱歌吧）还有现场花笙米高声表白（双笙:“不要男妈妈”哈哈哈）哦对了 读弹幕抽奖的时候看到一个人提到了饼饼，不过双笙一看id是“饼饼炸了”哈哈哈哈就没念他，估计他肠子都悔青了 悲\n\n《朝汐》《循》几首很有回忆感的歌一起来，都是感到一哆嗦，毕竟，那几首歌陪伴了我的高中生活，太温柔啦，现在想来还是很喜欢，一直在列表里面听着\n\n我一定要吐槽一下普通区周围的竟然不喊安可 可恶 没有喊安可的livehouse是不完整的，之前看了轻音的演唱会，当时看到全场一起喊安可的时候，很震撼我，我就想着一定要喊一次安可，前面VIP区还是比较给力，一直在喊，我们那片我感觉就我一个人在喊（）没事，勇敢祈菱 不怕社死，喊一回安可才算是来了livehouse哈哈\n\n# 最后的话\n\n好啦，幻彩国又过了一站，我也该  也该好好面对开学考试了哈哈哈哈\n","tags":["双笙","livehouse"],"categories":["生活"]},{"title":"docker学习","url":"/2023/01/09/11.docker/","content":"\n最近的比赛要用到docker，去学习了下怎么用，感觉这玩意儿是真的强\n\n<!-- more -->\n\n# 前言\n\ndocker！yyds！真的好用，一键部署\n\n我学习的是这个教程：https://yeasy.gitbook.io/docker_practice\n\n教程里前六章为基础内容讲解比较详细，可以自行阅读，下面记载一下指令方便后续查阅\n\n# 指令\n\n### 镜像\n\n**拉取镜像**\n\n```bash\n docker pull [选项] <域名/IP>[:端口号] <用户名>/<软件名>\n 如：\n docker pull ubuntu:18.04\n```\n\n**运行镜像**\n\n```bash\ndocker run -it --rm ubuntu:18.04 bash\n```\n\n* `-it`： `-i`：交互式操作，`-t`呼出一个终端\n\n* `--rm`：容器退出后随之将其删除\n\n* `ubuntu:18.04`：这是指用 `ubuntu:18.04` 镜像为基础来启动容器\n\n* `bash`：放在镜像名后的是 **命令**\n\n**列出镜像**\n\n```bash\n# 正在运行的\ndocker image ls\n# 所有的\ndocker image ls -a\n```\n\n**删除镜像**\n\n```bash\ndocker image rm [选项] <镜像1> [<镜像2> ...]\n```\n\n**commit构建镜像**\n\n```bash\ndocker commit [选项] <容器> <命名>\n\ndocker commit \\\n    --author \"watashi\" \\\n    --message \"修改了xx\" \\\n    webserver \\\n    nginx:v2\n```\n\n> 作者建议使用Dockerfile构建镜像，不推荐commit\n\n### 容器\n\n**新建**\n\n```bash\ndocker run ubuntu:18.04 /bin/echo 'Hello world'\n```\n\n* `-d`：后台运行，`docker container logs <容器>`可以查看输出\n\n**改变容器状态**\n\n```\ndocker container start/stop <容器> \n```\n\n**进入容器**\n\n```bash\ndocker attach <容器>\n```\n\n使用<kbd>ctrl</kbd>+<kbd>d</kbd>或者`exit`退出时容器会关闭，使用<kbd>ctrl</kbd>+<kbd>p</kbd>然后<kbd>ctrl</kbd>+<kbd>q</kbd>退出时容器不会关闭\n\n```\ndocker exec -it <容器> bash\n```\n\n退出时容器不会关闭\n\n**导出容器**\n\n```bash\ndocker export <容器id> > ubuntu.tar\n```\n\n**导入容器快照**\n\n```bash\ndocker import <文件>/<url> [命名(可选)]\n```\n\n**删除容器**\n\n```bash\n docker container rm <容器>\n```\n\n","tags":["docker"],"categories":["记录"]},{"title":"Ubuntu20.04如何使用EasyConnect进入校园网","url":"/2023/01/08/10.easyconnect/","content":"\n软件只适配到Ubuntu18.04，20.04需要弄一点东西\n\n<!-- more -->\n\n# Ubuntu20.04如何使用EasyConnect进入校园网\n\n### 现有docker容器[docker-easyconnect](https://github.com/Hagb/docker-easyconnect)\n\ndocker！yyds！一键部署\n\n配合[SwitchyOmega](https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif)会有比较好的体验，不然一直切换有点麻烦  [SwitchyOmega讲解](https://switchyomega.org/) \n\ndocker 启动\n\n```bash\ndocker run --rm --device /dev/net/tun --cap-add NET_ADMIN -ti -p 127.0.0.1:1080:1080 -p 127.0.0.1:8888:8888 -e EC_VER=7.6.3 -e CLI_OPTS=\"-d vpnaddress -u username -p password\" hagb/docker-easyconnect:cli\n```\n\n>替换掉下面三个字段即可\n>\n>vpnaddress：学校服务器地址，如`https://vpn.nwpu.edu.cn`\n>\n>username：账号\n>\n>password：密码\n\n看的successful字段即为登录成功，按Ctrl c即可关闭docker，重新开始\n\n**持久化登录**\n\n```bash\ntouch $HOME/.easyconn\n\ndocker run --restart always --device /dev/net/tun --cap-add NET_ADMIN -ti -p 127.0.0.1:1080:1080 -p 127.0.0.1:8888:8888 -e EC_VER=7.6.3 -e CLI_OPTS=\"-d vpnaddress -u username -p password\" -v $HOME/.easyconn:/root/.easyconn hagb/docker-easyconnect:cli\n```\n\nCtrl c退出即可，容器不会关闭\n\n配置SwitchyOmega，校园网的网站使用`http 120.0.0.1 8888`，其他的走clash代理`http 127.0.0.1 7890`或者直连\n\n命令行使用` export https_proxy=http://127.0.0.1:8888`可以让终端走代理\n\n> 不过用ssh的git clone无法克隆下来仓库，不太懂\n>\n> 但如果使用**proxychains**填写`http 127.0.0.1 8888`则可克隆ssh的仓库 怪\n> \n> ```bash\n> $ proxychains4 git clone git@git.x.git\n> [proxychains] config file found: /etc/proxychains4.conf\n> [proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4\n> [proxychains] DLL init: proxychains-ng 4.14\n> 正克隆到 'x'...\n> [proxychains] DLL init: proxychains-ng 4.14\n> [proxychains] Dynamic chain  ...  127.0.0.1:8888  ...  git.x:22  ...  OK\n> [proxychains] DLL init: proxychains-ng 4.14\n> remote: Enumerating objects: 1817, done.\n> remote: Counting objects: 100% (32/32), done.\n> remote: Compressing objects: 100% (31/31), done.\n> ```\n\n# 直接使用软件（不推荐）\n\n前言：首先下载一下软件，[64位Ubuntu](http://download.sangfor.com.cn/download/product/sslvpn/pkg/linux_767/EasyConnect_x64.deb) `sudo dpkg -i EasyConnect_x64.deb `安装   [其他版本](https://vpn.tju.edu.cn/com/installClient_en.html#auto-service)\n\n>但软件本体只适配到Ubuntu18.04\n>吐槽一下：这[官网](https://bbs.sangfor.com.cn/plugin.php?id=service:download&action=view&fid=100000001552254#/100001589167895/all/0/0)上我是真没找到Linux版本，我们学校提供的网站的Linux下载又放了个空连接，麻\n>找了半天谷歌上搜到了天津大学的下载界面，但是最抽象的是，从主界面进去，根本找不到这个下载界面\n\n### 安装后无法打开，原因是Harfbuzz版本太低\n\n* **单击打开easyconnect没有反应**\n\n  在`/usr/share/applications `中找到`EasyConnect.desktop`后发现它的命令行启动方式是`/usr/share/sangfor/EasyConnect/EasyConnect`\n\n  执行后报错\n\n  ```bash\n  $ /usr/share/sangfor/EasyConnect/EasyConnect\n  \n  (EasyConnect:64314): Pango-ERROR **: 15:45:06.256: Harfbuzz version too old (1.3.1)\n  \n  [1]    64314 trace trap (core dumped)  /usr/share/sangfor/EasyConnect/EasyConnect\n  ```\n\n  **提示Harfbuzz版本太低**，论坛上有人提出这个问题，但目前也只适配ubuntu也至适配到18.04，原因可能是electron太老，最终提出的解决方案是**把pango的版本降低**，为了不对系统造成影响，因此只把低版本的pango给easyconnect用即可\n\n* **解决:降级pango**\n\n  先查看easyconnect目前使用的pango\n\n  ```bash\n  $ ldd /usr/share/sangfor/EasyConnect/EasyConnect | grep pango\n  \tlibpangocairo-1.0.so.0 => /usr/lib/x86_64-linux-gnu/libpangocairo-1.0.so.0 (0x00007f9713518000)\n  \tlibpango-1.0.so.0 => /usr/lib/x86_64-linux-gnu/libpango-1.0.so.0 (0x00007f971337e000)\n  \tlibpangoft2-1.0.so.0 => /usr/lib/x86_64-linux-gnu/libpangoft2-1.0.so.0 (0x00007f97116d8000)\n  ```\n\n  ~~下载适配ubuntu18.04的[libpangocairo](https://packages.ubuntu.com/bionic/amd64/libpangocairo-1.0-0/download)、[libpango](https://packages.ubuntu.com/bionic/amd64/libpango-1.0-0/download)、[libpangoft2](https://packages.ubuntu.com/bionic/amd64/libpangoft2-1.0-0/download)，解压deb，然后解压里面的data.tar.xz，找到上述所写三个文件移入`/usr/share/sangfor/EasyConnect`目录下即可~~\n\n  为了方便，可以使用我已下载好的压缩包https://wwcm.lanzoub.com/ifd9c0kfvgmf 解压后放置在主目录下\n\n  输入下面的指令把三个文件移入`/usr/share/sangfor/EasyConnect`\n\n  ```bash\n  sudo cp ~/usr/lib/x86_64-linux-gnu/libpango-1.0.so.0 ~/usr/lib/x86_64-linux-gnu/libpangocairo-1.0.so.0 ~/usr/lib/x86_64-linux-gnu/libpangoft2-1.0.so.0 /usr/share/sangfor/EasyConnect/\n  ```\n\n  再次查看即会发现发生变化\n\n  ```bash\n  $ ldd /usr/share/sangfor/EasyConnect/EasyConnect | grep pango\n  \tlibpangocairo-1.0.so.0 => /usr/share/sangfor/EasyConnect/libpangocairo-1.0.so.0 (0x00007f1538cd4000)\n  \tlibpango-1.0.so.0 => /usr/share/sangfor/EasyConnect/libpango-1.0.so.0 (0x00007f153893c000)\n  \tlibpangoft2-1.0.so.0 => /usr/share/sangfor/EasyConnect/libpangoft2-1.0.so.0 (0x00007f1536a95000)\n  ```\n\n  然后**点击图标启动**或**命令行启动**`/usr/share/sangfor/EasyConnect/EasyConnect`都是可以的\n\n\n\n参考链接：https://www.cnblogs.com/cocode/p/12890684.html\n\nhttps://unix.stackexchange.com/questions/589993/pango-error-harfbuzz-version-too-old\n\nhttps://www.cnblogs.com/panpanwelcome/p/12877902.html\n\nhttps://packages.ubuntu.com/\n","tags":["EasyConnect"],"categories":["教程"]},{"title":"感谢与二次元情投","url":"/2023/01/01/09.animation/","content":"\n感受一个个故事的悲欢离合\n\n<!-- more -->\n\n# 前言\n\n“你在哪看番？”，“肯定不是b站”，或许经常是这样的，因为众所周知的原因，b站的番会有剪切、圣光、黑幕、补画等众多情况，所以小网站或许是最佳选择，但很多网站只有720p，画质牺牲了有点亏，所以分享下我用的（或许你也可以找种子找资源，下下来看）\n\n* 种子\n\n  目前参照[这篇教程](https://blog.revincx.icu/posts/watch-anime-like-a-geek/)，使用[ani-rss](https://github.com/wushuo894/ani-rss)订阅mikan计划的番剧配合qb自动下载本季度番剧，老番一般都在经典字幕组[VCB-Studio](https://vcb-s.com/)上找合集，会有大佬保种，人很好，谢谢他们\n\n* [omofun](https://www.omofun.top/)\n\n  画质似乎是1080，有长按加速，可拖动屏幕拉进度，ui清爽无广告，只是，估计是太良心了，最近服务器崩了几次了，希望还能活着吧\n\n  > 目前 app 端新增很多广告，不过还能接受，画质很高，速度还可以，但是网页端画质拉的一\n\n* [稀饭](https://dick.xfani.com/)\n\n  新晋神中神，网页端画质独一档，速度可以，实在不行开梯子稳的一，暂未试过app\n\n* [age动漫](https://www.agemys.net/)\n\n  经典老牌，基本没崩过，长按不能加速，进度条拖动不习惯，但是稳定\n\n* [樱花](https://www.yhpdm.net/)\n\n* [风车](http://www.dmlaa.com/)\n\n# 相合之物\n\n留存与心底的温热，浅浅的泛起涟漪，只要静静的享受这样一次次的吹拂就好\n\n初见像是林中偶遇的小鹿，缤纷而美好（一果酱可爱捏），林中待久了，恬静、平和占据了身心，才知这应是款款而过的溪流，声音澄澈而又未曾间断\n\n动画中的一个俩个的关键节点，又总能像溪流拍打出有节奏的韵律一般，轻敲我的门扉，亦或会心一笑，亦或心头一热，都让人流连忘返（特别是一果对和态度地悄然变化，总有种难以言说的喜悦呢\n\n所以 第二季 gkdgkd！！\n\n一果酱可爱捏\n\n# 魔法少女小圆\n\n最喜欢小圆啦！我不像众多圆学家有那么多细致入微又精彩的分析，也是没有那个能力啦，语文都读不明白的我，只知道，**无论如何，怀揣希望**，这便是小圆带给我的理念，总是想着好的方面，纵使遇见挫折、经历崩溃，但还是怀揣着希望，“还能去拯救那个没有被qb骗的我吗”，最后一集中也是实现宏大的理想\n\n# 花开伊吕波\n\n日常番，时间沉淀出韵味，越看越好看的类型，到15集往后才有感觉18集还是多少集感觉是神回，了解到一个故事之后，越陷越深，看完26集之刻，才知自己已然沉沦\n\n# 终将成为你\n\n前几集的细腻感，相当的惊艳，第一集看完就深深的被吸引住了，还有侑一直无法感受到的特别感/dokidoki/悸动，也刻画的相当仔细，侑的心跳没有给出回应，作为观众的我也感受到很可惜（虽然我也未曾感受到就是了\n\n中间几集有关系复杂化趋向，不过还没有大乱，可以接受\n\n最后戏剧结局的修改算是意料之中，一直在埋伏笔，但十一集的处理很不错，自然而然的，不加修饰的，所有都是那么的真切\n\n> 后续还是很触动，被这个标题一直吸引思索着，参看了[一些文章](https://zhuanlan.zhihu.com/p/370421197)后，我认为应该是——你终将成为你，这句话由侑来说，说给灯子，但灯子在舞台剧实现前一直认为是想成为作为姐姐的“你”，在侑的努力下，灯子终将做好自己\n>\n> 作为观众，我有一丝想念——“侑终将成为灯子”，这指的是灯子见侑时感受到的特别感，让侑也感受一下吧\n> 但看文章介绍的后续漫画，可能因为产生了**依恋**，害怕失去，才选择了告白（未看完原作，仅通过部分画面推断）因为不是很习惯看漫画/小说，所以大概率不太会去补完\n\n> bh番我目前还看了牵牛花与加濑同学和citrus~柑橘味香气~，牵牛花与加濑同学受限于篇幅（动画直接从成功告白开始），感情铺垫略显急促，但可以一看\n> 柑橘味香气感觉很诡异，性格很奇怪的芽衣，一言不合就__，后期还塑造了一个“反派”，观感不太好，相比之下我更喜欢都是好人的番，要不就是彻彻底底的反派也可以，表面一套，内心一套的反派看着不太舒服\n\n---\n\n最近这个很火 我也填了下\n\n![_神奇海螺__动画生涯个人喜好表_.jpg](https://s2.loli.net/2023/02/13/Sow8sEPFWgNR16Z.jpg)\n\n---\n\n# 斩·赤红之瞳！\n\n很震撼，只有震撼二字，后面了解了一下漫画和动画剧情有所不同，这里不多解析因为剧透将会极大的影响漫画观感，如果你在什么都不知道的情况下看完全篇，只有震撼二字\n\n# 安达与岛村\n\n看了《终究》之后又找了几部硬百合一起都看了\n\n初入 wc 精美人设\n\n细品几集 我超 刻画太细腻了\n\n再康几集 内心描述太到位了\n\n说起来安达或许某一方面跟初中的我有一点相似\n\n岛村的心境刻画的很好 \n\n内心的描述太细致了，让人切身感受\n\n边框的电影感的切换也很喜欢 \n\n# 听爸爸的话\n\n看这个总是想起一些事情呢。\n\n略微有点《学园孤岛》的感觉，微小的幸福之下，一直存在的巨大的隐患，让人担心，但眼前又是轻松的美好，我本想说是小确幸，但是一想到可能又有奇奇怪怪的事情发生，“确”这个字，说不出口\n\n13集和ova相当的放飞\n\n> 看完后开补萝莉作了：\n>\n> 萝莉的时间\n>\n> 之前看的有：\n>\n> 龙王的工作\n>\n> 天使的3p\n\n# 零之使魔\n\n露易丝&小狗\n\n# 白箱\n\n标志性番剧，一部讲述番剧是如何制作的番剧。之中谈及梦想，我会想想当下刚保完研，听信学长选择的导师是否是较好的选择，没有转去计院是否会是遗憾，会不会到头来跟考上研的朋友并无区别，甚至选择的导师比我这位更好…………就像剧中喵森一样，先完成努力完成最终话/先把研究生好好读完再说吧~\n","tags":["番"],"categories":["生活"]},{"title":"组装一台四旋翼无人机","url":"/2022/12/08/08.uav/","content":"\n最近实习课，可以造机器人，就选了造无人机\n\n<!-- more -->\n\n# 前言\n\n金工实习本来是造鸭嘴榔头的，被有幸抽到机器人课程里面了，本来是造小车（不过那个很抽象，甚至有一节课是叫你把上学期别人造的小车拆了然后自己打个板子然后把麦轮装上），老师说也可以自己选，他刚好有电机和飞控（是去年有一群学生公费买的，不过最后炸机了  悲），挺好的，之前一直做软件，现在有机会做一下机械和硬件的活\n\n# 前置学习\n\n* SolidWorks 2020\n\n  3D打印，基本的打印件设计，老师那有好几台打印件，可以自己画好之后去打印。老师专门强调只能打自己画出来的~~打手办的想法打消力~~\n\n* CAXA\n\n  二维设计，画好图之后可以用激光切割，老师那可以切木板、亚克力板之类的，最后选5mm亚克力板作飞机板材，强度不如碳板，但勉强能用了\n\n# 组装\n\n> 飞控：px2.4.8\n>\n> 遥控器：AT9S PRO\n>\n> 接收机：R6DSM\n>\n> 电机：X2820-5\n>\n> 电调：天行者60A\n>\n> 电池：6s 3300mA 格式\n>\n> 板子：5mm亚克力板（激光切割）\n\n画打印件的时候遇到过一些问题，比如M3的螺丝要画3.2mm才比较好穿进去，或者像最开始使用的是航空层板，太软了，电机都往下垂，又或者打印件尺寸不对或者孔位没有沟通好之类的。不过最后慢慢摸索都弄好了\n\n![photo_2022-12-11_20-56-48.jpg](https://s2.loli.net/2022/12/11/5UZJc6QChLspMF8.jpg)\n\n<div align=\"center\">成品图</div>\n\n飞机整体显得有点抽象，但是 能飞就行，结课就好\n\n# 飞控调试\n\n按照[这个教程](http://pix.1yuav.com/)能完成百分之90\n\n不过遇到了一些问题：\n\n* **Compass not calibrated** **没有成功进行校正罗盘**\n  ![3N_0X1CMG8_6QXN_RIMGB_W.png](https://s2.loli.net/2022/12/10/87OZPw3gUHDEiTn.png)\n\n  那不让飞控检查罗盘就好了！在如下设置中取消所有勾，只选择电池检查\n\n  \n\n  弄好之后飞控是蓝灯常亮或缓慢闪烁，代表可以起飞，之前一直是黄色\n  \n* **遥控器**的pitch和起降是反的\n\n  在模式里面改为1\n  \n* 遥控器解锁飞机**无法进入怠速模式**\n\n  我这个情况教程里面没有说，还挺神奇，开机之后灯多色闪烁，电机快速响几下，结束之后飞控灯显示蓝色缓慢闪烁，电机不响了，算是正常开机\n\n  然后右下拨油门解锁飞控，蓝灯进入常亮模式，代表解锁成功，但是没有进入怠速模式\n\n  > 后面查了一下，是在飞控中设置了取消怠速模式\n  >\n  > MOT_SPIN_ARMED参数 70是怠速 0是不怠速\n  >\n  > 但是我看了下我的飞控里面没有这个参数 可能是固件太老了 但问题不大 不改就不改\n  >\n  > http://www.modouwo.com/Tutorial/Detail/13602/43\n  >\n  > 这个开着比较好 安全一点\n\n# 试飞\n\n下次课老师可能把桨叶给我们 炸不炸机就看下次了（有点小激动\n\n> 好耶 炸机了  从天而降 摔得稀烂\n\n![YYN@FUTHJ8QE_N0_R8QC98O.jpg](https://s2.loli.net/2023/03/02/pDlQj4USKF8VcYW.jpg)\n\n只能说很奇怪 奇怪，飞起来之后油门拉到底 还是一直在往上飞，幸好飞的很高很高的时候不知道因为什么原因掉下来了，只能说还好掉下来了，不然会发生什么真不敢想\n\n我之前有试过遥控器的油门，应该是没问题的   就是不装桨叶，油门推上去就开始转，推下来就不转了\n\n> 之前也去室外飞了下我们的飞机，感觉出问题可能在遥控器的设置上，当时用的是定高模式，但感觉用自稳模式可能会更好\n>\n> 定高就是油门会有一个死区，也就是油门放在中位，飞机就会悬停，但悬停原理是要得到较为准确的高度信息，当没有校准或者旋转视觉定位但是视觉定位并没有开启的时候，感觉可能会出现问题\n>\n> 自稳的话是根据油门自己去控制\n\n# 感悟\n\n金工这个课被抽到做机器人还是挺好的，学了下sw，CAXA，就这一点感觉已经赚了，课程刚开始还是挺懵的状态，什么都不会，什么都不知道，但是老师带着我们一步一步学习， 由不懂到慢慢熟悉，学会sw基本操作之后自己打印自己画出来的东西，这种感觉是奇妙的，从屏幕中走入现实，是之前想都不敢想的事情，谢谢老师让我们有这样的机会。CAXA也是差不多的感觉，看起来是很高级的软件，跟着老师慢慢学习就会渐入佳境。看到激光切割机的时候也是挺震撼的，老师细致的讲解和演示也很到位。最后切割自己做出的的成品也挺有成就感的。\n\n学完基础软件就是就要开始实际操作了，默认项目是做一个小车，因为之前有在基地做过飞机相关的东西，老师那也有之前留下来的东西，所以就做四旋翼无人机了。在这之中学到的最多的当然是团队合作，分开画板子的时候要协商孔位的位置，以及飞机整体的布局需要讨论，以及飞控等等，经历很多坎坷之后勉强能用遥控器驱动电机了，确认完电机转向之后去试飞了，不过嘛，这个px2.4.8的飞控没有安全开关（就是打下来之后飞机马上停转）感觉有点不太安全，而且已经停产好几年了，最新的已经出到px6c了，有担心过会不会出安全问题，不过最后还是从高空摔下来了，还好的一点是没出现什么安全事故，有一点不甘心，但还是感谢所经历的这一切\n\n","tags":["无人机组装"],"categories":["教程"]},{"title":"ubuntu20.04安装PX4","url":"/2022/11/20/07.px4-autopilot/","content":"\n\n\npx4_firmware编译老报错，记录一下遇到的问题\n\n<!-- more -->\n\n> 环境：ubuntu20.04+ros-noetic+gazebo11\n\n* [依赖安装](#依赖安装)\n* [ros安装](#ros安装)\n* [mavros的安装](#mavros的安装)\n* [python](#python)\n* [PX4配置](#PX4配置)\n* [报错](#报错)\n* [mavros简介](#mavros简介)\n\n# 依赖安装\n\n```bash\nsudo apt install ninja-build exiftool ninja-build protobuf-compiler libeigen3-dev genromfs xmlstarlet libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev gawk\n```\n\n# ros安装\n\n```bash\n# 设置软件库\nsudo sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list'\n# 设置软件库（清华源）\n# sudo sh -c '. /etc/lsb-release && echo \"deb http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/ `lsb_release -cs` main\" > /etc/apt/sources.list.d/ros-latest.list'\n# 设置KEY\ncurl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -\n# 更新软件列表\nsudo apt update\n# 安装完整ROS包\nsudo apt install ros-noetic-desktop-full\n# 添加环境变量\necho \"source /opt/ros/noetic/setup.bash\" >> ~/.bashrc\n# 使用zsh则添加\n# echo \"source /opt/ros/noetic/setup.zsh\" >> ~/.zshrc\n```\n\n输入`source ~/.bashrc`或重启终端即可生效\n\n# mavros的安装\n\n```bash\n# 安装mavros包\nsudo apt install ros-noetic-mavros ros-noetic-mavros-extras\n```\n\n下载扩展内容\n\n```bash\n# 执行脚本 安装依赖\n# 容易因为网络问题下载不下来 多次执行直到全部succeed 建议科学上网\nsudo /opt/ros/noetic/lib/mavros/install_geographiclib_datasets.sh\n```\n\n> 若脚本一直下载失败可以考虑下载压缩包\n>\n> [点击下载GeographicLib.zip](GeographicLib.zip)\n>\n> 解压压缩包\n>\n> ```\n> unzip GeographicLib.zip\n> ```\n>\n> 先清理目标文件夹\n>\n> ```\n> sudo rm -rf /usr/share/GeographicLib\n> ```\n>\n> 将文件夹移动到`/usr/share/`下\n>\n> ```\n> sudo mv GeographicLib /usr/share/\n> ```\n>\n\n# python\n\n```bash\npip install rospkg\n```\n\n* 1.装了**conda**的话直接运行即可\n\n* 2.`pip -V`和`python -V`正常显示版本则代表已安装好\n\n* 3.`pip -V`或`python -V`显示command not found\n\n  可以用`sudo apt install python3 python3-pip`安装一下python3 \n\n> 或者使用conda或者源码编译python又或者使用ubuntu的工具进行管理，自行搜索一下\n>\n> 图方便使用第三步的指令即可\n\n大概率还需要安装以下几个依赖\n\n```\npip3 install --user packaging\npip3 install --user toml\n```\n\n# PX4配置\n\n```bash\n# 克隆px4仓库\ngit clone https://github.com/PX4/PX4-Autopilot.git\n# 进入目录\ncd PX4-Autopilot\n# 新建名为1.11.3的分支，切换到v1.11.3的版本（tag）\ngit checkout -b 1.11.3 v1.11.3\n# 子模块更新（因为px4仓库里面放了很多其他的仓库，这步在代理不稳定时极容易失败，最好能一次全部通过,也可以使用下面的网盘下载好解压后直接执行下面的编译操作）\ngit submodule update --init --recursive\n# 编译（极容易报错）\nmake px4_sitl_default gazebo\n```\n\n> [夸克网盘](https://pan.quark.cn/s/2650872edf53)\n>\n> [百度网盘](https://pan.baidu.com/s/19KValVqzDl0bvXqIHnX_Ag?pwd=zmov )\n>\n> [123网盘](https://www.123pan.com/s/CVqajv-9DqWd.html)（推荐，不限速）\n>\n> 使用`sha1sum PX4-Autopilot.zip`计算压缩包**SHA1校验值**ea08780db25e277fc287147445360a15458392ae\n\n编译完成会有如下文字\n\n<font color=\"green\">[Msg] Waiting for master.</font>\n<font color=\"green\">[Msg] Connected to gazebo master @ h ttp://127.0.0.1:11345</font>\n<font color=\"green\">[Msg] Publicized address: 192.168.1.113</font>\n\n出现gazebo，里面会有**一架飞机**，则说明编译成功，按`ctrl+c`关闭进程等待gazebo自动关闭\n\n然后将下面的内容写入.bashrc文件中\n\n> 使用的zsh就写入.zshrc中（虽然有个source的是bash文件，但也是可以用的）\n\n```bash\nsource ~/PX4-Autopilot/Tools/setup_gazebo.bash ~/PX4-Autopilot/ ~/PX4-Autopilot/build/px4_sitl_default\nexport ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:~/PX4-Autopilot\nexport ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:~/PX4-Autopilot/Tools/sitl_gazebo\n```\n\n> **重新**打开一个终端会出现几个路径，则设置代表成功\n>\n> 如果不想每次都看见那几行路径，则去`~/PX4-Autopilot/Tools/setup_gazebo.bash`中把echo的几句话全部注释掉即可\n>\n> tips：若你选择下载**最新版本**的px4，这setup_gazebo.bash和sitl_gazebo文件夹的路径会发生变化，注意更换\n>\n> 如果需要gazebo-classic_iris这个东西请安装>1.14.0的版本\n>\n> 若你后续增加了新的工作空间，一定要把这三行放在最后在souce，之前的工作空间按创建时间顺序souce\n\n**新开**一个终端，运行下面的launch（一定要新开一个终端！！）\n\n```bash\nroslaunch px4 mavros_posix_sitl.launch\n```\n\n运行`rostopic echo /mavros/state`   其中`connected`为true则成功\n\n```bash\n$ rostopic echo /mavros/state\nheader: \n  seq: 29\n  stamp: \n    secs: 29\n    nsecs: 532000000\n  frame_id: ''\nconnected: True\narmed: False\nguided: True\nmanual_input: False\nmode: \"AUTO.LOITER\"\nsystem_status: 3\n```\n\n> 实物飞机调整飞控时会用到[QGroundControl](https://docs.qgroundcontrol.com/en/getting_started/download_and_install.html)\n>\n> 此外给一份[官方示例代码](https://docs.px4.io/v1.12/en/ros/mavros_offboard.html)运行起来之后飞机就能起飞啦\n\n推荐在`~/PX4-Autopilot/launch/mavros_posix_sitl.launch`中加入以下三行（**自行注意launch文件格式要求**），这样的话gazebo会自动连接好map到base_link的tf树，方便某些包的调用\n\n```\n<param name=\"/mavros/local_position/tf/frame_id\" type=\"str\" value=\"map\" />\n<param name=\"/mavros/local_position/tf/child_frame_id\" type=\"str\" value=\"base_link\" />\n<param name=\"/mavros/local_position/tf/send\" type=\"bool\" value=\"true\" />\n```\n\n# 报错\n\n* 想要**重新编译**？\n\n  ```bash\n  # 先清除之前编译产生的文件  在PX4-Autopilot文件夹目录下运行\n  make clean\n  # 再次编译\n  make px4_sitl_default gazebo\n  ```\n\n* 运行示例代码，**飞机无法起飞**\n\n  * 报错**Preflight Fail: Accel #0 uncalibrated**等\n\n    ![2022-12-11 15-22-30 的屏幕截图.png](https://s2.loli.net/2022/12/11/A52lrBgX8IMKRui.png)\n\n    ```bash\n    # 清空仿真参数再次启动即可\n    rm ~/.ros/eeprom/parameters*\n    rm -rf ~/.ros/sitl*\n    ```\n\n  * 若一直无法进入**offboard**模式，则打开**QGC**\n\n    左上角->**vehicle setup**—>**parameters**—>搜索**COM_RCL_EXCEPT**—>勾选**takeoff**\n\n* 有关**gazebo_ros**\n\n  ```error\n  ERROR: cannot launch node of type [gazebo_ros/gzserver]: Cannot locate node of type [gzserver] in package [gazebo_ros]. Make sure file exists in package path and permission is set to executable (chmod +x)\n  ERROR: cannot launch node of type [gazebo_ros/gzclient]: Cannot locate node of type [gzclient] in package [gazebo_ros]. Make sure file exists in package path and permission is set to executable (chmod +x)\n  ```\n\n  可能是工作空间放了一个一模一样名字的功能包，把它删掉再次编译即可\n\n  > 使用`roscd gazebo_ros`即可找到当前的gazebo_ros功能包在哪\n  >\n  > 参考[链接](https://github.com/ros-simulation/gazebo_ros_pkgs/issues/346)\n\n* **报错**\n\n  ```error\n  [vehicle_spawn_magic_5853_2732546998413423669-5] process has died [pid 5940, exit code 1, cmd /opt/ros/noetic/lib/gazebo_ros/spawn_model -sdf -file \n  /home/magic/PX4-Autopilot/Tools/sitl_gazebo/models/iris_rplidar/iris_rplidar.sdf -model iris_rplidar -x 0 -y 0 -z 0 -R 0 -P 0 -Y 0 \n  __name:=vehicle_spawn_magic_5853_2732546998413423669 __log:=/home/magic/.ros/log/60dcd1ea-78a8-11ed-8477-4396ccb8ddd5/vehicle_spawn_magic_5853_2732546998413423669-5.log].\n  ```\n\n  在这个红色报错里其实什么都找不到，但是再**往上翻**你可以看到白字\n\n  ```error\n  Traceback (most recent call last):\n    File \"/opt/ros/noetic/lib/gazebo_ros/spawn_model\", line 20, in <module>\n      import rospy\n    File \"/opt/ros/noetic/lib/python3/dist-packages/rospy/__init__.py\", line 49, in <module>\n      from .client import spin, myargv, init_node, \\\n    File \"/opt/ros/noetic/lib/python3/dist-packages/rospy/client.py\", line 52, in <module>\n      import roslib\n    File \"/opt/ros/noetic/lib/python3/dist-packages/roslib/__init__.py\", line 50, in <module>\n      from roslib.launcher import load_manifest  # noqa: F401\n    File \"/opt/ros/noetic/lib/python3/dist-packages/roslib/launcher.py\", line 42, in <module>\n      import rospkg\n  ModuleNotFoundError: No module named 'rospkg'\n  ```\n\n  `No module named 'rospkg'`这个就很熟悉了，python没有rospkg这个包\n\n  `pip install rospkg`安装一下就行了\n\n# mavros简介\n\n**提供的数据：**\n\n* `mavros/local_position/pose`本地位置信息\n\n  数据类型名称：`geometry_msgs::PoseStamped`\n\n  ```msg\n  std_msgs/Header header\n    uint32 seq\n    time stamp\n    string frame_id\n  geometry_msgs/Pose pose\n    geometry_msgs/Point position\n      float64 x\n      float64 y\n      float64 z\n    geometry_msgs/Quaternion orientation\n      float64 x\n      float64 y\n      float64 z\n      float64 w\n  ```\n\n* `mavros/state`\n\n  当前状态话题，包括是否连接、解锁以及当前的飞行模式\n\n* `mavros/global_position/global`\n\n  GPS定位信息\n\n* `mavros/imu/data`\n\n  imu数据\n\n**提供的控制接口：**\n\n* `/mavros/setpoint_velocity/cmd_vel_unstamped`控制无人机的速度话题\n\n  数据类型名称：`geometry_msgs/Twist`\n\n  ```msg\n  geometry_msgs/Vector3 linear\n    float64 x\n    float64 y\n    float64 z\n  geometry_msgs/Vector3 angular\n    float64 x\n    float64 y\n    float64 z\n  ```\n\n* `/mavros/setpoint_velocity/cmd_vel`控制无人机的速度话题\n\n  数据类型名称：`geometry_msgs/TwistStamped`\n\n  ```msg\n  std_msgs/Header header\n    uint32 seq\n    time stamp\n    string frame_id\n  geometry_msgs/Twist twist\n    geometry_msgs/Vector3 linear\n      float64 x\n      float64 y\n      float64 z\n    geometry_msgs/Vector3 angular\n      float64 x\n      float64 y\n      float64 z\n  ```\n\n  关于这两个速度话题，有一个点**需要关注**的\n\n  前一个话题没有**frame_id**，默认就是**map**\n\n  > frame_id有什么用？比如frame_id是map，然后速度是x=1,y=0，那么飞机就会一直往map的x正方向飞（无论此时飞机头朝哪边）\n  >\n  > 如果是base_link，速度x=1,y=0的话，就是一直往前（飞机头的方向）飞，这时候就跟着飞机头朝向一起走了\n\n* `/mavros/setpoint_position/local`\n\n  位置控制话题\n\n  > ~~不是很建议使用~~，因为这个只是单纯的使用内置pid走直线去到指定位置（或许飞控的内置pid会比我们的好？\n  >\n  > 听说有队伍也在使用这个打比赛，配合上在飞控的参数里面限制飞行速度最大值\n\n* `/mavros/setpoint_raw/local`\n\n  融合了速度位置加速度控制三者与一体的话题\n\n* `/mavros/manual_control/send`\n\n  遥控器数值的发送\n\n* `/mavros/manual_control/control`\n\n  遥控器数值的订阅\n\n* `/mavros/actuator_control`\n\n  控制飞控 IO 输出(混控器)\n\n# 任务列表\n\n下面给出几个任务让你入门无人机代码控制\n\n### 1、飞机飞正方形\n\n**任务目标**：控制飞机在仿真环境中完成**起飞**、**定高**飞行一个**正方形**、**降落**的任务。\n\n为降低任务难度，以下给出推荐学习步骤\n\n* 了解ros&mavros基础知识\n  * 掌握ros话题订阅和话题发布的方法\n  * 按以上过程配置好px4仿真环境并学习mavros相关话题\n* [px4官网](https://docs.px4.io/v1.12/zh/ros/ros1.html) 查看飞机使用文档\n  * 尝试用mavros控制飞机起飞，飞机起飞时应为offboard模式 [官方示例代码](https://docs.px4.io/v1.12/en/ros/mavros_offboard.html)\n  * Development和Robotics部分阅读一下\n\n* 控制飞机飞正方形\n  * **飞行**至两米的高度，然后以该点为起点**飞一个正方形**（飞机飞行轨迹为正方形，边长建议为5-10m），回到起始点时**降落**\n  * 请勿搜索相关代码，**自行书写**就好\n\n**注意**\n\n- 全程以控制飞行速度的方式进行，可以进行多个话题的尝试（但是不能只发目标位姿）\n- 注意飞机飞行的模式，灵活运用话题、服务、回调等ros基础知识\n- 注意速度控制方法\n- 注意代码书写规范，语言不限\n- 对仿真环境中的机型和环境不作要求\n- 以上任务采用跑定点的方式即算通过，有余力的同学可以尝试开源导航的嵌入\n\n### 2、move_base在无人机中使用\n\n**任务目标**：给无人机安装二维激光雷达，以此使用move_base进行避障，最终效果是在rviz中点哪，飞机去哪且不会撞\n\n为降低任务难度，在此简介[move_base](http://wiki.ros.org/move_base)，也建议自行看看官网\n\n![overview_tf.png](https://s2.loli.net/2023/03/29/NjvBQZ16stI93HX.png)\n\n简言之，你给这个功能包想要的输入，他给你你想要的输出\n\n输入：\n\n* `tf` ：[官方tf教程](http://wiki.ros.org/tf/Tutorials) tf树mavros可代为链接，但是我忘了指令，同时也十分建议自行学习一下tf知识然后自己连接一下tf树，仿真中飞机定位信息已在`mavros/local_position/pose`中给出\n* `odom`：里程计\n* `sensor topics`：点云激光二选一，我们选激光，记得要把话题传给move_base（学习一下launch文件的一些写法即可 如remap）\n\n输出：\n\n* `cmd_vel`：速度\n\n你要做的就是启动move_base，把他需要的话题给他，正常起飞，然后把cmd_vel的数据转发给mavros\n\n如果做了一段时间还是感觉很困难，可以求助学长/学姐\n\n### 3、ego-planner使用\n\n官方仓库：https://github.com/ZJU-FAST-Lab/ego-planner\n\n> 或许用处不大，暂无时间比赛意义\n\n### 4、学习学长/学姐代码框架\n\n了解实物，打打比赛，探索新算法\n\n定位、导航、控制\n\n\n\n### 题外话\n\n但很重要\n\n在无人机实物中上位机（nuc/nx/nano/tx  就是一台小电脑 安装Ubuntu系统）需要与飞控进行连接，但是经常链接不上(`mavros/state`的connect是false)下面列一下一些原因，也方便日后排查\n\n* **usb端口号**\n\n  启动连接的文件是 `mavros px4.launch`，里面有这样一个参数`<arg name=\"fcu_url\" value=\"/dev/ttyACM0:57600\"/>`\n\n  `/dev/ttyACM0`是usb端口号，使用`ls /dev/tty*`可查看所有ubs端口，如果你是使用`usb-micro_ubs`或者`ubs-type_c`连接的，则端口号应该是ACM0，如果使用的是`ubs-tele1`，则应该是UBS0/USB1/UBS2需要通过抽插ubs并使用`ls /dev/tty*`确定是哪一个\n\n* **波特率**\n\n  上面的`57600`就是波特率，需要和飞控使用的波特率一致才能正常连接。飞控的波特率在参数中设置，搜`SYS_COMPANION`或者BAUD什么\n\n* **线的问题**\n\n  如果使用`usb-micro_ubs`或者`ubs-type_c`，这个问题可能不太会出现，如果能识别到usb串口，基本能链接上\n\n  如果使用的是`ubs-tele1`，那建议**好好检查**线和那个模块是不是有问题，这个问题最难排除，有一次线松了我排查了半天结果学长定睛一看，用笔把线往里戳了戳就好了\n\n* **mavros未更新**\n\n  使用px6c可能会有这个问题，电脑上安装的mavros太旧了，更新一下即可`sudo apt install ros-$ROS_DISTRO-mavros  ros-$ROS_DISTRO-mavros-extras`\n\n* **端口占用 busy**\n\n  ```\n  [FATAL] [1705922606.620863352]: FCU: DeviceError:serial:open: Device or resource busy\n  ================================================================================REQUIRED process [mavros-2] has died!\n  ```\n\n  把QGC地面站关闭即可\n\n* `rostopic echo /mavros/local_position/pose`没有消息或者xy为0，z有值的时候检查一下飞控参数中`EKF2_AID_MASK`是否设置为了24，`EKF2_HGT_MODE`是否设置为VISON\n","tags":["px4"],"categories":["教程"]},{"title":"ros入门","url":"/2022/10/17/06.ros/","content":"\n\n\n最近看到学弟学妹在学ros，回想我当时学ros的痛苦时光，想着能不能写一个教程\n\n<!-- more -->\n\n这里官方教程：http://wiki.ros.org/cn/ROS/Tutorials\n\n我刚学的时候竟然没有搜到这个教程，枯了，说的还是很细致的，主要是很全~~不过感觉略显枯燥（?）~~\n\n> 初入Linux也可以先学习一下Linux基本操作：https://mapleroid.github.io/unix_tutorial/index.html\n\n# 目录\n\n* [什么是ros](#什么是ros)\n* [在命令行中进行话题通信](#在命令行中进行话题通信)\n* [用c++实现话题通信](#用c++实现话题通信)\n\n# 什么是ros\n\n全称是Robot Operating System，中文为**机器人操作系统**\n\n我认为最主要的是理解**话题（topic）**这个概念，由此又一个概念叫**节点**\n\n一个**话题**可以被订阅，也可以往里发布内容，做这些事的叫**节点**，这也是我们所说的**订阅者**和**发布者**\n\n**就像这里有一个正方形的门，它就是一个话题，一边有一人P在往里输入正方形的物体，它就是发布者，也是一个节点，另一边有一人S在收这个正方形的物体，他就是订阅者，也是一个节点。这个正方形就是某种指定的数据类型**\n\n下面是一些有关话题的**命令行指令**，或许你现在还不太清楚，但不要紧\n\n话题名形如`/cmd_vel`\n\n```zsh\n# 查看当前的所有话题\nrostopic list\n# 查看某个话题的订阅者、发布者、发布内容的数据类型\nrostopic info 话题名\n# 查看该话题发布的具体内容\n# -n 可以指定发布次数\nrostopic echo 话题名\n# 查看一个话题的发布频率\nrostopic hz 话题名\n# 查看某个数据类型的具体内容\nrosmsg show 数据类型名称\n# 向某个话题里发布内容 可以使用tab自动补全\n# -n 可以指定发布次数 -r 可以指定发布频率\nrostopic pub 话题名 数据类型 数据内容\n# 可以把某个话题保存到.bag文件\nrosbag record 话题名\n# 可以把.bag文件保存的内容发布出去\n# -s 可以指定开始秒数 -r 可以指定发布速度\nrosbag play .bag文件\n#动态调参\nrosrun rqt_reconfigure rqt_reconfigure\n#图形化发布服务\nrosrun rqt_service_caller rqt_service_caller\n#图形化查看话题\nrosrun rqt_topic rqt_topic\n```\n\n# 在命令行中进行话题通信\n\n> 还没有安装ros？跟着官网一步一步做就好了\n>\n> ubuntu20.04->[官网安装教程](http://wiki.ros.org/cn/noetic/Installation/Ubuntu)\n\n先使用小乌龟（经典）操作一下吧\n\n```zsh\n# 打开一个终端（ctrl+alt+T）输入 回车\nroscore\n```\n\n```zsh\n# 再打开一个终端输入 回车 就可以看到小乌龟啦\nrosrun turtlesim turtlesim_node\n```\n\n再打开一个终端备用，现在的情况大概如下图\n\n![ros_1](/images/ros_1.png)\n\n接下来我们先熟悉一下一些基本**命令行指令**\n\n```zsh\n# 查看当前的所有话题\nrostopic list\n```\n\n>$ **rostopic list**                             \n>/rosout\n>/rosout_agg\n>/turtle1/cmd_vel\n>/turtle1/color_sensor\n>/turtle1/pose\n\n这里有五个话题在发布（或者订阅）着某种数据类型\n\n```zsh\n# 我们先来查看一下/turtle1/pose的情况\nrostopic info /turtle1/pose\n```\n\n> $ rostopic info /turtle1/pose\n>\n> Type: turtlesim/Pose\n>\n> Publishers: \n>\n> \\* /turtlesim (http://magic:36353/)\n>\n> Subscribers: None\n\n这里的意思是`/turtle1/pose`这个话题在被`/turtlesim`节点发布（Publisher）没有被人订阅，内容物是一个叫`turtlesim/Pose`的数据类型\n\n```zsh\n# 查看这个数据类型的具体内容物\nrosmsg show turtlesim/Pose\n```\n\n可以看到有五个float类型的变量，他们的含义和就是变量名的英文啦，例如xy是小乌龟的坐标，theta是角度\n\n那数据内容到底是什么呢，用下面指令可以查看\n\n```zsh\n# 查看话题具体内容物\nrostopic echo /turtle1/pose\n```\n\n可以看到数据一直在刷新，这样我们就在命令行实现了话题的订阅（Subscriber）\n\n>  按下`Ctrl+c`可以终止这个程序\n\n让我们回到话题列表，你会发现有一个`/turtle1/cmd_vel`的话题，他就是控制小乌龟**移动**的话题，仿照上面的`rostopic info`操作，可以发现`/turtlesim`节点一直在订阅（Subscriber），而没有人发布（Publisher），那我们来发布就好了\n\n```zsh\n# 不建议直接复制 自己打一点然后使用<tab>按键自动补全就好\nrostopic pub /turtle1/cmd_vel geometry_msgs/Twist \"linear:\n  x: 1.0\n  y: 0.0\n  z: 0.0\nangular:\n  x: 0.0\n  y: 0.0\n  z: 0.0\" \n```\n\n设置线速度是1.0，发现小乌龟往前走了一点距离，如果想控制小乌龟一直移动，可以用-r 参数指定频率\n\n（即1s内发送消息的次数）然后设置一下角速度，就可以走圆了\n\n```zsh\n# 可以一直走一个圆\nrostopic pub -r 10 /turtle1/cmd_vel geometry_msgs/Twist \"linear:\n  x: 1.0 \n  y: 0.0\n  z: 0.0\nangular:\n  x: 0.0\n  y: 0.0\n  z: 1.0\"\n```\n\n现在应大致如下图\n\n![ros_1](/images/ros_2.png)\n\n现在你应该明白了，我们可以通过**话题通信**的方式订阅（Subscriber）到小乌龟的位置信息`/turtle1/pose`、向速度话题`/turtle1/cmd_vel`里发布（Publisher）速度控制小乌龟移动\n\n接下来我将以**c++**为例演示如何在**代码**中实现这部分操作\n\n* 下面是几个可能用到工具\n\n```zsh\n# 图形化查看节点和话题 圆圈住的是节点名，曲线上的是话题名\nrosrun rqt_graph rqt_graph\n# 图形化查看某个话题里面的数据\nrosrun rqt_plot rqt_plot\n# 如果一个话题里是画面，可以用这个查看\nrosrun rqt_image rqt_image\n```\n\n# 用c++实现话题通信\n\n## 1、准备工作\n\n* 1.创建工作空间\n\n  ```zsh\n  # 新建文件夹catkin_ws/src 这样的话工作空间就叫catkin_ws\n  mkdir -p ~/catkin_ws/src\n  # 进入catkin_ws/src文件夹\n  cd ~/catkin_ws/src\n  # 初始化工作空间 会在当前目录生成一个CmakeLists.txt文件\n  catkin_init_workspace\n  ```\n\n* 2.编译工作空间\n\n  ```zsh\n  # 编译时要进入工作空间根目录\n  cd ~/catkin_ws/\n  # 编译 每次有新功能包或者修改代码之后都要编译\n  catkin_make\n  ```\n\n* 3.设置环境变量\n\n  ```zsh\n  # 这样是让当前终端生效\n  source ~/catkin_ws/devel/setup.bash\n  ```\n\n  如果不想每次打开一个新终端都source一下的话，在用户根目录下找到`.bashrc`文件，把`source ~/catkin_ws/devel/setup.bash`写入到最后一行然后保存\n\n  > 以`.`开头的文件是默认隐藏的，按下`ctrl+h`可以显示隐藏的文件\n\n* 4.创建功能包\n\n  ```zsh\n  # 进入指定位置\n  cd ~/catkin_ws/src\n  # 创建功能包 这句指令应该在src目录下运行\n  catkin_create_pkg control_tortoise roscpp rospy std_msgs geometry_msgs turtlesim\n  ```\n  \n  `control_tortoise`是功能包的名字，后面都是一些依赖\n\n当前**文件夹结构**应该如下\n\n```zsh\ncatkin_ws --- 工作空间名字，其他名字也是可以的\n\n    |--- build:编译空间，catkin_make时候会生成\n\n    |--- devel:开发空间，catkin_make时候会生成\n\n    |--- src: 源码\n\n        |-- package1：功能包1(ROS基本单元)，只能由字母、数字与下划线组成\n\n            |-- CMakeLists.txt 配置编译规则 需要进行一定的修改\n\n            |-- package.xml 包信息\n\n            |-- scripts 存储python文件\n\n            |-- src 存储C++源文件\n\n            |-- include 头文件\n\n            |-- launch 可一次性运行多个节点 \n\n        |-- package2：功能包2\n\n        |-- package3：功能包3\n\n        |-- CMakeLists.txt: 编译的基本配置 初始化工作空间时生成\n```\n\n## 2、源码书写\n\n如上文件结构所示，cpp文件放在src中，先生成一个main.cpp（运行`touch main.cpp`即可生成）\n\n建议自己打一打喔~ 最好能理解\n\n```cpp\n//ros语法基本头文件\n#include<ros/ros.h>\n//小乌龟速度的数据类型是geometry_msgs::Twist所以引入以下头文件（geometry_msgs在cmake中find_package里已经填写过了\n#include<geometry_msgs/Twist.h>\n//小乌龟位置的数据类型是turtlesim::Pose所以引入以下头文件（turtlesim在cmake中find_package里已经填写过了\n#include<turtlesim/Pose.h>\n\n//申明全局变量速度和位置 和int a之类的其实差不多\ngeometry_msgs::Twist vel;\n\nturtlesim::Pose pose;\n\n//这里是回调函数callback 每次运行ros::spinOnce()就会调用回调函数\nvoid pose_update_cb(const turtlesim::Pose::ConstPtr &msg)\n{\n\t//回调函数读出小乌龟位置信息然后存入pose变量中\n\tpose = (*msg);\n}\n\n//主程序\nint main(int argc, char **argv)\n{\n\t//初始化ROS,它允许ROS通过命令行进行名称重映射\n\tros::init(argc, argv, \"control_tortoise\");\n\t//为这个进程的节点创建一个句柄\n\tros::NodeHandle n;\n\t//创建一个订阅者，名叫pose_sub，因为是订阅者所以是subscribe，数据类型是turtlesim::Pose\n\t//括号里面第一个参数是话题名，第二个是队列长度，不明白的话就用1，第三个是回调函数，会读取队列里面的数据\n\tros::Subscriber pose_sub = n.subscribe<turtlesim::Pose>(\"/turtle1/pose\", 1, pose_update_cb);\n\t//创建一个发布者，名叫vel_pub，因为是发布者所以是advertise，数据类型是geometry_msgs::Twist\n\t//括号里面第一个参数是话题名，第二个是队列长度，不明白的话就用1，因为是发布者所以没有回调函数\n\tros::Publisher vel_pub = n.advertise<geometry_msgs::Twist>(\"/turtle1/cmd_vel\", 1);\n\t//指定循环频率是10，r为变量名\n\tros::Rate r(10);\n\n\t//进入循环 当我们按下ctrl+c终止程序时循环结束\n\twhile (ros::ok()) {\n\t\t//打印pose的信息\n\t\tROS_INFO(\"pose : (%.2lf , %.2lf)\", pose.x, pose.y);\n\t\t//设定速度\n\t\tvel.linear.x = 1.0;\n\t\tvel.angular.z = 1.0;\n\t\t//发布速度\n\t\tvel_pub.publish(vel);\n\t\t//调用回调函数\n\t\tros::spinOnce();\n\t\t//睡一下 以达到我们设定的频率\n\t\tr.sleep();\n\t}\n}\n```\n\n## 3、编译工作空间\n\n* 编译之前首先要去**功能包**下的CMakeLists.txt修改一些东西\n\n![ros_3](/images/ros_3.png)\n\n看到138行152、153、153 （或许在这几行附近）把注释去掉\n\n改为如下样子\n\n```cmake\n# 括号里第一个参数是节点的名字\n# 第二个参数是cpp文件的路径，从功能包根目录开始 可以写多个cpp\nadd_executable(control_tortoise_node src/main.cpp)\n\n# 此处节点名保持和上述一直\ntarget_link_libraries(control_tortoise_node\n   ${catkin_LIBRARIES}\n)\n```\n\n* 编译\n\n```zsh\n# 编译时要进入工作空间根目录\ncd ~/catkin_ws\n# 编译\ncatkin_make\n```\n\n> 没有红色报错的话就算是成功啦\n\n## 4、运行\n\n还是和之前一样把小乌龟启动起来\n\n```zsh\n# 终端1\nroscore\n# 终端2\nrosrun turtlesim turtlesim_node\n```\n\n现在已经准备就绪，接下来的就是把我们的程序运行起来\n\n```zsh\n# rosrun命令可以启动某个节点 第一个参数书是功能包的名字 第二个参数是节点名字\n# 功能包的名字是在我们生成功能包时命名的 节点的名字则是在cmakelist中填写的 还记得吗\nrosrun control_tortoise control_tortoise_node\n```\n\n如果不出意外的小乌龟就可以正常转圈，控制台输出位置信息了\n\n还可以使用`rosrun rqt_plot rqt_plot`图形化查看数据内容\n\n![ros_4](/images/ros_4.png)\n\n现在的你是否可以自己订阅一个话题或者往一个话题里面发布消息呢\n\n## 5、launch文件\n\n有些时候使用的是roslaunch而并非rosrun，roslaunch的好处在于可以一次性**开很多个节点**\n\n在功能包下新建launch文件，并生成一个`control_tortoise.launch`\n\n填入如下内容\n\n```xml\n<launch>\n  <node pkg=\"control_tortoise\" type=\"control_tortoise_node\" name=\"control_tortoise_name\" output=\"screen\"/>\n</launch>\n```\n\npkg代表功能包的名字   type是节点名   name可以随意取名   `output=\"screen\"`意味着结果会输出在控制台\n\n这时候可以输入`roslaunch control_tortoise control_tortoise.launch`来代替`rosrun control_tortoise control_tortoise_node`\n\n> 此外，当使用launch文件时，可以进行配置文件的读入、话题的重映射、命名空间的书写等等操作\n>\n> 下面是一个launch实例，**没有实际意义**，只是向你表述launch的各种使用方法，比如arg、remap、node、include、rosparam、group等\n>\n> ```xml\n> <?xml version=\"1.0\"?>\n> <launch>\n>     <arg name=\"map_frame\" default=\"map\"/>\n>     <remap from=\"/odom\" to=\"/base_link\"/>\n>     <include file=\"$(find mavros)/launch/px4.launch\">\n>         <arg name=\"fcu_url\" value=\"/dev/ttyUSB0:57600\"/>\n>     </include>\n> \t<node pkg=\"camera\" type=\"transform_cam_to_10hz\" name=\"transform_cam_to_10hz\" output=\"screen\"/>\n>     <node type=\"rviz\" name=\"rviz\" pkg=\"rviz\" args=\"-d $(find uav_robotcup)/rviz/local.rviz\" />\n>     <node pkg=\"cat\" type=\"cat\" name=\"cat\" output=\"screen\"/>\n>   \t\t<rosparam file=\"$(find uav_robotcup)/params/settings.yaml\" command=\"load\"/>\n>     <group ns=\"door\">\n>     \t<node pkg=\"move_base\" type=\"move_base\" respawn=\"false\" name=\"move_base\" output=\"screen\" clear_params=\"true\">\n>     \t\t<param name=\"controller_frequency\" value=\"10.0\"/> \n>     \t\t<rosparam file=\"$(find nav_2d_door)/params/costmap_common_params.yaml\" command=\"load\" ns=\"global_costmap\"/>\n>     \t\t<remap from=\"/laser/scan\" to=\"$(arg laser_topic)\"/>\n>    \t\t</node>\n>     </group>\n>     <node pkg=\"tf\" type=\"static_transform_publisher\" name=\"tf_world_to_map_broadcaster\" required=\"true\"\n>           args=\"0 0 0 0 0 0 world map 100\"/>\n> </launch>\n> ```\n\n# tf坐标转换\n\n> 建议先行阅读[ros wiki的tf教程](http://wiki.ros.org/tf)以及[发布坐标转换](http://wiki.ros.org/tf/Tutorials/Introduction%20to%20tf) 下文主要向你表述在px4+gazebo11仿真情况下如何连接飞机的坐标系\n>\n> 其他动态tf连接同理，如果你没有安装px4，不需要跟着教程一步一步实现，看明白即可\n\n飞机的定位信息在`mavros/local_position/pose`中发布，包含坐标xyz以及四元数xyzw\n\n使用`rosrun rqt_tf_tree rqt_tf_tree`中查看tf树可以看到一个游离的map和base_link，我们的目标就是**把这两个坐标系正确的连接起来**\n\n示例代码如下\n\n```cpp\n#include <ros/ros.h>\n#include <tf/transform_broadcaster.h>\n#include <geometry_msgs/PoseStamped.h>\n\nvoid poseCallback(const geometry_msgs::PoseStamped& msg){\n    # 申明一个静态的广播用来转发\n\tstatic tf::TransformBroadcaster br;\n    # 这个变量是用来表示两个坐标系的变换关系\n\ttf::Transform transform;\n    # 先设置xyz坐标的关系\n\ttransform.setOrigin(tf::Vector3(msg.pose.position.x, msg.pose.position.y, msg.pose.position.z));\n    # 申明一个tf的四元数\n\ttf::Quaternion q;\n    # 从msg类型的四元数转换到tf的四元数（tf::中还有其他方法可以使用）\n\ttf::quaternionMsgToTF(msg.pose.orientation,q);\n    # 如果是用欧拉角则使用下面的这个函数\n\t//q.setRPY(0, 0, msg->theta);\n    # 设定四元数\n\ttransform.setRotation(q);\n    # 发布坐标转换，前者是父坐标系，后者是子坐标系\n\tbr.sendTransform(tf::StampedTransform(transform, ros::Time::now(), \"map\", \"base_link\"));\n}\n\nint main(int argc, char** argv){\n\tros::init(argc, argv, \"broadcaster_map_to_base_link\");\n\tros::NodeHandle node;\n\tros::Subscriber sub = node.subscribe(\"/mavros/local_position/pose\", 10, &poseCallback);\n\tros::spin();\n\treturn 0;\n};\n```\n\n然后可以打开一个rviz订阅两个坐标系，接着让飞机起飞，观察是否和现实相符合\n\n> 在mavros中也提供了一个很方便的接口，在启动gazebo的launch中最后加入下面几行和上面的效果是一样的\n>\n> ```xml\n>  <param name=\"/mavros/local_position/tf/frame_id\" type=\"str\" value=\"map\" />\n>    <param name=\"/mavros/local_position/tf/child_frame_id\" type=\"str\" value=\"base_link\" />\n>    <param name=\"/mavros/local_position/tf/send\" type=\"bool\" value=\"true\" />\n> ```\n\n# 多机通信\n\n> 该方法可以实现在一台电脑（从机）上订阅另外一台电脑（主机）里的ros话题（需在局域网下）\n\n* 输入`ifconfig`查看本机ip地址\n\n* 把下面的内容写入.bashrc中，两台电脑中的`ROS_MASTER_URI`里的ip地址填**主机**的ip，`ROS_IP`就填自己的ip\n\n  ```bash\n  export ROS_MASTER_URI=http://192.168.1.113:11311\n  export ROS_IP=192.168.1.108\n  ```\n","tags":["ros"],"categories":["教程"]},{"title":"tmux的学习记录","url":"/2022/10/06/04.learn_tmux/","content":"\n记录tmux学习内容\n\n<!-- more -->\n\n# tmux的学习记录\n\n前言：远程连接上位机只有一个窗口，但是要运行多个指令才能把任务跑起来，所以需要会话多开，tmux是个不错的选择\n\n## 基本操作指令记录\n\n```zsh\n# 新开一个窗口\ntmux new -s <session-name>\n# 结束并退出当前窗口\nexit        (Ctrl+d)\n# 退出但保存当前窗口\ntmux detach    (Ctrl+b  d)\n# 重新连接到已经有的窗口\ntmux attach -t <session-name>\n# 显示当前所有窗口\ntmux ls\n```\n\n## 快捷键\n\n```zsh\nCtrl+b %  划分左右两个窗格\nCtrl+b \"  划分上下两个窗格\nCtrl+b 箭头  光标切换到其他窗格\n```\n\n### tmux脚本\n\n这里提供一个最简单的示例\n\n```sh\n#!/bin/bash\n## tmux new -s <window-name> 创建一个会话\n## -d是在后台创建（重要 没有这个参数会有bug）\ntmux kill-session -t start\ntmux new -d -s start\n\n## 分割成四块\ntmux split-window -h -t start\ntmux split-window -v -t start.0\ntmux split-window -v -t start.2\n\n## 填入指令 0是左上 1是坐下 2是右上 3是右下\ntmux send -t start.0 \" \" \ntmux send -t start.1 \" \" \ntmux send -t start.2 \" \" \ntmux send -t start.3 \" \" \n## 显示刚刚创建的会话\ntmux a -t start\n```\n\n使用方法：新建一个`tmux.sh`的文件，将内容写入，执行`chmod +x tmux.sh`变为可执行文件，`./tmux.sh`运行\n\n### tmux设置鼠标启动\n\n```\necho \"set-option -g mouse on\" >> ~/.tmux.conf\ntmux source-file ~/.tmux.conf\n```\n\n## 使用systemctl开机启动tmux界面时\n\n请注意一定要使用`Type=forking`，不然进程会被杀死，forking才运行创建的子进程存活\n\n```\n[Unit]\nDescription=开机任务执行脚本\nAfter=network.target\n\n[Service]\nType=forking\nExecStart=/bin/bash /home/qllokirin/python_and_sh/tmux.sh\nUser=qllokirin\n\n[Install]\nWantedBy=multi-user.target\n```\n\n","tags":["tmux"],"categories":["记录"]},{"title":"云崽机器人搭建","url":"/2022/09/28/03.yunzai/","content":"\n记录云崽搭建问题\n\n<!-- more -->\n\n[云崽机器人原项目](https://github.com/Le-niao/Yunzai-Bot)\n\n> 在这里重写搭建教程感觉没有什么必要了，就记录一下从相知相遇到相识吧（这样说好奇怪 太奇怪了\n\n# <div align=\"center\">初识云崽</div>\n\n那天朋友给我发了一张游戏角色的装备一览图，当时觉得很好看但是游戏内又没有，朋友说是有个群里面有个机器人可以做，我进去看了看的确很有意思\n后面又wx群有提及此事相关，朋友给我发了一个视频问我要不要试试自己弄一个\n\n> 此视频正是原作者乐佬的演示视频\n\n跟着乐佬的教程一步一步的总感觉不太对，在评论区找了个群加了进去问问，后面才知道步骤都是对的，只是输出有些不同\n\n> 乐佬放的图片与大部分人的输出都不相同\n\n<font color='blue'>渐渐的，我开始在群里回答别人的问题，在评论区回答</font>\n\n# <div align=\"center\">从使用者到创作者</div>\n\n> 哈哈，虽这里小小自诩一下创作者，不过就是复制粘贴罢了\n\n云崽的插件是用JavaScript写的，我从来没学过，那怎么写呢\n\n就  参考云崽自带的插件的写法，看看别人写的插件，然后摸索+捯饬\n\n最开始写了个建议的给主人留言，还是很有成就感的，然后找了几个api写了个动物图小插件\n\n> 现在的给主人留言插件支持直接回复了，星佬tql\n\n后面看到atri有佬写了生成语音然后又有命令行版本，所以感觉可以迁移过来当个插件使用   [ATRI-plugin](https://github.com/70loKirin/ATRI-plugin)\n\n然后学了下python，OpenCV想到[helltaker](https://zh.moegirl.org.cn/Helltaker)这个推箱子游戏挺有意思的就也迁移了过来做了个插件  [PushBox-plugin](https://github.com/70loKirin/PushBox-plugin)\n\n## <div align=\"center\">小结</div>\n\n这一路来，学了很多东西，收获了很多乐趣\n\n写了文档也帮助了很多人搭建\n\n虽然偶过争吵，亦有风波\n\n但云崽给予我的，远不止如此\n","tags":["云崽"],"categories":["记录"]},{"title":"从0到使用hexo + ParticleX主题","url":"/2022/09/28/02.hexo_use/","content":"\n记录一下hexo搭建过程\n\n<!-- more -->\n\n# 写在前面\n\n我自己捯饬了很久才发现ParticleX作者有很详细的教程\n\nhttps://argvchs.github.io/page/2/\n\n> ~~现我已换为[Hingle](https://github.com/Dreamer-Paul/Hingle)主题，简约而不简单，我很喜欢~~\n>\n> 又找到一个好看的主题[reimu](https://github.com/D-Sketon/hexo-theme-reimu)，二次元才对味嘛\n\n以下内容仅作个人记录\n\n# 使用hexo框架\n\n> hexo搭建起来非常方便，真的太好用啦\n\n0基础萌新推荐一下这个视频：[保姆级Hexo+github搭建个人博客](https://www.bilibili.com/video/BV1mU4y1j72n)\n\n> 视频后面运行`hexo d`发布到GitHub仓库的时候不需要做那么多工作\n> \n> 因为已经绑定了ssh key所以是可以直接更新到GitHub的\n> \n> （一直提交失败是因为GitHub有时候要梯子\n\nhexo基本指令介绍\n\n```bash\n# 清除网页\nhexo cl\n# 生成网页\nhexo g\n# 网页本地发布\nhexo s\n# 网页提交到GitHub\nheox d\n```\n\n# 使用ParticleX主题\n\n> 主要是ParticleX加载很花时间（这可能就是因为好看而付出的代价吧），不太适合经常访问\n\n仓库地址：[Hexo-Theme-ParticleX](https://github.com/argvchs/hexo-theme-particlex)\n\n* 1.ParticleX主题的基本搭建\n  \n  按照仓库的readme配置好基本网页（主题安装+关闭 Hexo 自带 highlight）\n  \n  然后在`_config.yml`里面找到`theme: `改为`theme: ParticleX`\n  \n  > 注意：yml文件的冒号后面都有一个空格！！！！\n  \n  依次运行\n  \n  ```bash\n  hexo cl\n  hexo g\n  hexo s\n  ```\n\n* 2.ParticleX主题的基本使用\n  \n  生成categories、about、tags\n  \n  ```bash\n  hexo new page categories\n  hexo new page about\n  hexo new page tags\n  hexo new post first\n  ```\n  \n  然后就可以在source文件中发现如下文件结构\n  \n  ```text\n  |---source\n      |---_posts        #每一篇帖子的内容\n      |---about        #about点开之后的内容\n      |---categories\n      |---tags\n  ```\n  \n  categories和tags不用管，会自动生成\n  \n  about和_posts都是md文件格式\n  \n  `hexo new post <post-name>`会在_posts中再生成一个md文件（`<post-name>`为文件名\n  \n  post文件开头示例：\n  \n  ```md\n  title: first\n  date: 2022-09-27 19:52:59\n  tags: \n    - 测试\n  categories:\n    - 踩坑\n  description: \"界面终于正常啦\"\n  ```\n  \n  背景、图标、评论配置参阅原仓库readme中：[配置文件说明](https://github.com/argvchs/hexo-theme-particlex)\n  \n  > tips：图标有两个元素，一个是name，一个是theme，在图标官网可以查阅\n  > \n  > ​          比如GitHub图标的theme是brands\n\n* 3.ParticleX主题的进阶配置\n  \n  原作者已经有了教程我也不过多赘述：https://argvchs.github.io/2022/04/17/hexo-blog-3/\n  \n  包含live2d、鼠标点击特效、流星背景特效、鼠标指针特效\n  \n  > live2d我最后使用了这个教程：https://haremu.com/p/205\n\n# Q&A\n\n* Permission denied\n\n  ```\n  hexo s\n  INFO  Validating config\n  FATAL Permission denied. You can't use port 4000.\n  ```\n\n  本以为是其他进程占用了4000端口，所以只要换个端口就行了`hexo s -p 5000`，然后就能用了\n\n  不过后来查了查，[Hexo使用localhost:4000不能进行本地预览](https://www.jianshu.com/p/d3963da3946f)，发现4000端口没人用\n\n  最后还得是国外论坛[net stop winnat](https://stackoverflow.com/questions/9164915/node-js-eacces-error-when-listening-on-most-ports)只要以管理员身份运行``net stop winnat``，``net start winnat``即可\n","tags":["hexo"],"categories":["教程"]},{"title":"first","url":"/2022/09/27/01.first_md/","content":"\n界面终于正常啦\n\n<!-- more -->\n\n# 好耶！！\n","tags":["测试"]}]